{"version":3,"sources":["img/avatar-placeholder.jpg","app/containers/UserPage/index.tsx","store/setting/constants/setting.constant.ts","store/setting/services/setting.http.ts"],"names":["module","exports","UserPage","enqueueSnackbar","useSnackbar","notifyController","NotifyService","useInjectReducer","key","AuthSlice","reducer","useInjectSaga","saga","AuthSaga","dispatch","useDispatch","dateUtil","DateFnsUtils","settingHttp","SettingHttp","personalHttp","AuthHttp","useForm","register","handleSubmit","getValues","errors","setValue","initUser","useSelector","AuthSelector","loading","useState","listTitle","setListTitle","listPosition","setListPosition","isValidPass","setIsValidPass","success","passRef","useRef","useEffect","getAllManageType","SettingManageType","Title","then","response","data","titles","AppHelper","checkResponseData","responseTitles","_","catch","error","console","log","Position","positions","responsePositions","RESPONSE_CONSTANT","UPDATE_PROFILE_USER_SUCCESS","unsub","RootStore","subscribe","getState","lastAction","type","payload","updateProfileUserSuccess","setNotifyMessage","RESPONSE_MESSAGE","setSuccessNotify","updateProfileUserFail","UPDATE_PROFILE_USER_FAIL","setFailNotify","className","onSubmit","submitData","id","user","Sex","sex","user_name","full_name","Code","code","Birthdate","birthdate","Email","email","Password","newPassword","oldPassword","Phone","phone","position","title","updateProfileUser","setError","generateUUID","Date","now","message","NOTIFICATION_MESSAGE_FAIL_UPDATE_PROFILE","Fragment","src","image_url","defaultAvatar","alt","htmlFor","readOnly","placeholder","name","disabled","autoComplete","defaultValue","ref","value","format","DEFAULT_FORMAT_INPUT_DATE","map","description","onChange","e","target","current","clearTimeout","setTimeout","checkPassWord","userName","passWord","checkPass","setSuccess","CHECK_PASSWORD_SUCCESS","CHECK_PASSWORD_FAIL","required","style","borderColor","color","validate","matchesPreviousPassword","reNewPassword","SettingManageKey","SettingApiRoutes","TABLE","GET_ALL_TABLE","CREATE_UPDATE_TABLE","MANAGE_TYPE","GET_ALL_MANAGE_TYPE","GET_ALL_EXTEND_MANAGE_TYPE","CHECK_UNIQUE_MANAGE_TYPE","CHECK_UNIQUE_EXTEND_MANAGE_TYPE","GET_MANAGE_TYPE_BY_CODE","GET_ACTIVE_TYPE","CHANGE_ACTIVE_MANAGE_TYPE","CHANGE_ACTIVE_EXTEND_MANAGE_TYPE","DELETE_MANAGE_TYPE","DELETE_EXTEND_MANAGE_TYPE","CREATE_MANAGE_TYPE","CREATE_EXTEND_MANAGE_TYPE","UPDATE_MANAGE_TYPE","UPDATE_EXTEND_MANAGE_TYPE","CREATE_TABLE_SUCCESS","CREATE_TABLE_FAIL","UPDATE_TABLE_SUCCESS","UPDATE_TABLE_FAIL","DELETE_TABLE_SUCCESS","DELETE_TABLE_FAIL","TITLE","CHANGE_STATUS_TITLE_SUCCESS","CHANGE_STATUS_TITLE_FAIL","CHECK_CODE_SUCCESS","CHECK_CODE_FAIL","DELETE_TITLE_SUCCESS","DELETE_TITLE_FAIL","CREATE_TITLE_SUCCESS","CREATE_TITLE_FAIL","UPDATE_TITLE_SUCCESS","UPDATE_TITLE_FAIL","POSITION","CHANGE_STATUS_POSITION_SUCCESS","CHANGE_STATUS_POSITION_FAIL","DELETE_POSITION_SUCCESS","DELETE_POSITION_FAIL","CREATE_POSITION_SUCCESS","CREATE_POSITION_FAIL","UPDATE_POSITION_SUCCESS","UPDATE_POSITION_FAIL","GROUP_SERVICE","CHANGE_STATUS_GROUP_SERVICE_SUCCESS","CHANGE_STATUS_GROUP_SERVICE_FAIL","DELETE_GROUP_SERVICE_SUCCESS","DELETE_GROUP_SERVICE_FAIL","CREATE_GROUP_SERVICE_SUCCESS","CREATE_GROUP_SERVICE_FAIL","UPDATE_GROUP_SERVICE_SUCCESS","UPDATE_GROUP_SERVICE_FAIL","SERVICE","CHANGE_STATUS_SERVICE_SUCCESS","CHANGE_STATUS_SERVICE_FAIL","DELETE_SERVICE_SUCCESS","DELETE_SERVICE_FAIL","CREATE_SERVICE_SUCCESS","CREATE_SERVICE_FAIL","UPDATE_SERVICE_SUCCESS","UPDATE_SERVICE_FAIL","DEPARTMENT_TYPE","CHANGE_STATUS_DEPARTMENT_TYPE_SUCCESS","CHANGE_STATUS_DEPARTMENT_TYPE_FAIL","DELETE_DEPARTMENT_TYPE_SUCCESS","DELETE_DEPARTMENT_TYPE_FAIL","CREATE_DEPARTMENT_TYPE_SUCCESS","CREATE_DEPARTMENT_TYPE_FAIL","UPDATE_DEPARTMENT_TYPE_SUCCESS","UPDATE_DEPARTMENT_TYPE_FAIL","DEPARTMENT","CHANGE_STATUS_DEPARTMENT_SUCCESS","CHANGE_STATUS_DEPARTMENT_FAIL","DELETE_DEPARTMENT_SUCCESS","DELETE_DEPARTMENT_FAIL","CREATE_DEPARTMENT_SUCCESS","CREATE_DEPARTMENT_FAIL","UPDATE_DEPARTMENT_SUCCESS","UPDATE_DEPARTMENT_FAIL","FACULTY","CHANGE_STATUS_FACULTY_SUCCESS","CHANGE_STATUS_FACULTY_FAIL","DELETE_FACULTY_SUCCESS","DELETE_FACULTY_FAIL","CREATE_FACULTY_SUCCESS","CREATE_FACULTY_FAIL","UPDATE_FACULTY_SUCCESS","UPDATE_FACULTY_FAIL","tableValue","label","minWidth","tableGroupService","endPoint","APP_CONSTANT","API","ENDPOINT","request","configApiRouteWithManageType","manageType","Service","Department","modifyRequestBody","manageTypeInfo","requestBody","display_order","is_active","isActive","is_system","isSystem","list_value_type_id","settingTypeId","list_value_id","listValueId","undefined","apiUrl","get","getManageType","changeManageTypeActive","post","createManageType","updateManageType","deleteManageType","deletetType","checkUniqueCode","checkType","Id","getSpecialist","specialistCode","this","HttpRequest"],"mappings":"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","file":"static/js/17.7528f24f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar-placeholder.b9a8916a.jpg\";","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport * as AuthSelector from 'store/auth/shared/selectors';\r\nimport * as AuthSlice from 'store/auth/shared/slice';\r\nimport * as _ from 'lodash';\r\nimport { AuthSaga } from 'store/auth/shared/saga';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DEFAULT_FORMAT_INPUT_DATE } from 'store/common/constants/common.constant';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport {\r\n  RESPONSE_CONSTANT,\r\n  RESPONSE_MESSAGE,\r\n} from 'store/auth/constants/auth.constant';\r\nimport { AuthHttp } from 'store/auth/services/auth.http';\r\nimport AppLoading from 'app/components/Loading';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport defaultAvatar from 'img/avatar-placeholder.jpg';\r\nimport { RootStore } from 'store/configureStore';\r\nimport { useSnackbar } from 'notistack';\r\nimport { NotifyService } from 'services/notify.service';\r\n\r\nexport function UserPage() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({\r\n    key: AuthSlice.sliceKey,\r\n    reducer: AuthSlice.reducer,\r\n  });\r\n  useInjectSaga({\r\n    key: AuthSlice.sliceKey,\r\n    saga: AuthSaga,\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const dateUtil = new DateFnsUtils();\r\n  const settingHttp = new SettingHttp();\r\n  const personalHttp = new AuthHttp();\r\n  const { register, handleSubmit, getValues, errors, setValue } = useForm();\r\n  const initUser: any = useSelector<any>(AuthSelector.selectUser);\r\n  const loading = useSelector(AuthSelector.selectLoading);\r\n  const [listTitle, setListTitle] = useState<any[]>([]);\r\n  const [listPosition, setListPosition] = useState<any[]>([]);\r\n  const [isValidPass, setIsValidPass] = useState<boolean>(true);\r\n  const success = useSelector(AuthSelector.selectSuccess);\r\n  const passRef = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    settingHttp\r\n      .getAllManageType(SettingManageType.Title)\r\n      .then(response => response.data)\r\n      .then(titles => {\r\n        if (AppHelper.checkResponseData(titles)) {\r\n          const responseTitles = _.get(titles, 'result.data');\r\n          if (!_.isEmpty(responseTitles)) {\r\n            setListTitle(responseTitles);\r\n          }\r\n        }\r\n      })\r\n      .catch(error => console.log(error));\r\n    settingHttp\r\n      .getAllManageType(SettingManageType.Position)\r\n      .then(response => response.data)\r\n      .then(positions => {\r\n        if (AppHelper.checkResponseData(positions)) {\r\n          const responsePositions = _.get(positions, 'result.data');\r\n          if (!_.isEmpty(responsePositions)) {\r\n            setListPosition(responsePositions);\r\n          }\r\n        }\r\n      })\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(success)) {\r\n      if (success.key === RESPONSE_CONSTANT.UPDATE_PROFILE_USER_SUCCESS) {\r\n        setValue('newPassword', '');\r\n        setValue('oldPassword', '');\r\n        setValue('reNewPassword', '');\r\n      }\r\n    }\r\n  }, [success]);\r\n\r\n  const checkPassword = e => {\r\n    const newPassword = e.target.value;\r\n    if (_.isEmpty(newPassword)) return;\r\n    if (passRef.current) {\r\n      clearTimeout(passRef.current);\r\n    }\r\n    passRef.current = setTimeout(() => {\r\n      personalHttp\r\n        .checkPassWord({\r\n          userName: initUser.user_name,\r\n          passWord: newPassword,\r\n        })\r\n        .then(response => response.data)\r\n        .then(checkPass => {\r\n          if (AppHelper.checkResponseData(checkPass)) {\r\n            const isValid = _.get(checkPass, 'result');\r\n            if (isValid) {\r\n              dispatch(\r\n                AuthSlice.actions.setSuccess({\r\n                  id: AppHelper.generateUUID() + Date.now(),\r\n                  key: RESPONSE_CONSTANT.CHECK_PASSWORD_SUCCESS,\r\n                  message: RESPONSE_MESSAGE.CHECK_PASSWORD_SUCCESS,\r\n                }),\r\n              );\r\n              setIsValidPass(true);\r\n            } else {\r\n              dispatch(\r\n                AuthSlice.actions.setError({\r\n                  id: AppHelper.generateUUID() + Date.now(),\r\n                  key: RESPONSE_CONSTANT.CHECK_PASSWORD_FAIL,\r\n                  message: RESPONSE_MESSAGE.CHECK_PASSWORD_FAIL,\r\n                }),\r\n              );\r\n              setIsValidPass(false);\r\n            }\r\n          }\r\n        });\r\n    }, 1000);\r\n  };\r\n\r\n  const submitEditUser = submitData => {\r\n    if (!isValidPass) {\r\n      dispatch(\r\n        AuthSlice.actions.setError({\r\n          id: AppHelper.generateUUID() + Date.now(),\r\n          message: RESPONSE_MESSAGE.NOTIFICATION_MESSAGE_FAIL_UPDATE_PROFILE,\r\n        }),\r\n      );\r\n      return;\r\n    }\r\n\r\n    const id = !_.isEmpty(initUser) ? initUser.id : '';\r\n    const user = {\r\n      Sex: initUser.sex,\r\n      user_name: initUser.user_name,\r\n      full_name: initUser.full_name,\r\n      Code: initUser.code,\r\n      Birthdate: submitData.birthdate,\r\n      Email: submitData.email,\r\n      Password: _.isEmpty(submitData.newPassword)\r\n        ? submitData.oldPassword\r\n        : submitData.newPassword,\r\n      Phone: submitData.phone,\r\n      Position: submitData.position,\r\n      Title: submitData.title,\r\n    };\r\n    dispatch(\r\n      AuthSlice.actions.updateProfileUser({\r\n        ...user,\r\n        id,\r\n      }),\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsub = RootStore.subscribe(() => {\r\n      const { type, payload } = RootStore.getState().lastAction;\r\n      switch (type) {\r\n        case AuthSlice.actions.updateProfileUserSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(RESPONSE_MESSAGE.UPDATE_PROFILE_USER_SUCCESS)\r\n            .setSuccessNotify();\r\n          break;\r\n        case AuthSlice.actions.updateProfileUserFail.type:\r\n          notifyController\r\n            .setNotifyMessage(RESPONSE_MESSAGE.UPDATE_PROFILE_USER_FAIL)\r\n            .setFailNotify();\r\n          break;\r\n      }\r\n    });\r\n    return () => {\r\n      unsub();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <form className=\"col-md-12\" onSubmit={handleSubmit(submitEditUser)}>\r\n        {loading ? <AppLoading loading={true} /> : null}\r\n        {!_.isEmpty(initUser) ? (\r\n          <React.Fragment>\r\n            <div className=\"profile-sidebar\">\r\n              <div className=\"card card-topline-aqua\">\r\n                <div className=\"card-body no-padding height-9\">\r\n                  <div className=\"row\">\r\n                    <div className=\"profile-userpic\">\r\n                      <img\r\n                        src={\r\n                          !_.isEmpty(initUser.image_url)\r\n                            ? initUser.image_url\r\n                            : defaultAvatar\r\n                        }\r\n                        className=\"img-responsive\"\r\n                        alt=\"\"\r\n                        id=\"image\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"profile-usertitle\">\r\n                    <div className=\"profile-usertitle-name\" id=\"namePro\">\r\n                      {initUser.full_name}\r\n                    </div>\r\n                    <div className=\"profile-usertitle-job\" id=\"titlePro\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"profile-content\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-head card-topline-aqua\">\r\n                      <header>Thông tin</header>\r\n                    </div>\r\n                    <div className=\"card-body no-padding height-9\">\r\n                      <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"col-sm-12 m-b-10\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"horizontalFormEmail\"\r\n                                  className=\"col-sm-3 control-label text-edit\"\r\n                                >\r\n                                  Tên đăng nhập\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <input\r\n                                    readOnly\r\n                                    type=\"text\"\r\n                                    className=\"form-control text-edit\"\r\n                                    placeholder=\"\"\r\n                                    id=\"user_name\"\r\n                                    name=\"user_name\"\r\n                                    disabled\r\n                                    autoComplete=\"off\"\r\n                                    defaultValue={initUser.user_name}\r\n                                    ref={register()}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"col-sm-12 m-b-10\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"horizontalFormEmail\"\r\n                                  className=\"col-sm-3 control-label text-edit\"\r\n                                >\r\n                                  Mã nhân viên\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <input\r\n                                    readOnly\r\n                                    type=\"text\"\r\n                                    className=\"form-control text-edit\"\r\n                                    placeholder=\"\"\r\n                                    id=\"code\"\r\n                                    autoComplete=\"off\"\r\n                                    name=\"code\"\r\n                                    defaultValue={initUser.code}\r\n                                    ref={register()}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"col-sm-12 m-b-10\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"horizontalFormEmail\"\r\n                                  className=\"col-sm-3 control-label text-edit\"\r\n                                >\r\n                                  Họ và tên\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <input\r\n                                    readOnly\r\n                                    type=\"text\"\r\n                                    className=\"form-control text-edit\"\r\n                                    autoComplete=\"off\"\r\n                                    name=\"full_name\"\r\n                                    defaultValue={initUser.full_name}\r\n                                    ref={register()}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"col-sm-12 m-b-10\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"horizontalFormPassword\"\r\n                                  className=\"col-sm-3 control-label\"\r\n                                >\r\n                                  Giới tính\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    id=\"sex\"\r\n                                    disabled\r\n                                    name=\"sex\"\r\n                                    ref={register()}\r\n                                    defaultValue={initUser.sex}\r\n                                  >\r\n                                    <option value=\"\">Chọn giới tính</option>\r\n                                    <option value=\"1\">Nam</option>\r\n                                    <option value=\"0\">Nữ</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"col-sm-12 m-b-10\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"horizontalFormEmail\"\r\n                                  className=\"col-sm-3 control-label text-edit\"\r\n                                >\r\n                                  Email\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control text-edit\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    ref={register()}\r\n                                    defaultValue={initUser.email}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"col-sm-12 m-b-10\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"horizontalFormEmail\"\r\n                                  className=\"col-sm-3 control-label text-edit\"\r\n                                >\r\n                                  Ngày sinh\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control text-edit\"\r\n                                    id=\"birthdate\"\r\n                                    autoComplete=\"off\"\r\n                                    name=\"birthdate\"\r\n                                    ref={register()}\r\n                                    defaultValue={dateUtil.format(\r\n                                      new Date(initUser.birthdate),\r\n                                      DEFAULT_FORMAT_INPUT_DATE,\r\n                                    )}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"col-sm-12 m-b-10\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"horizontalFormEmail\"\r\n                                  className=\"col-sm-3 control-label text-edit\"\r\n                                >\r\n                                  Số điện thoại\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control text-edit\"\r\n                                    id=\"phone\"\r\n                                    name=\"phone\"\r\n                                    ref={register()}\r\n                                    defaultValue={initUser.phone}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"col-sm-12 m-b-10\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"horizontalFormEmail\"\r\n                                  className=\"col-sm-3 control-label text-edit\"\r\n                                >\r\n                                  Chức danh\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  {!_.isEmpty(initUser) &&\r\n                                  !_.isEmpty(listTitle) ? (\r\n                                    <select\r\n                                      className=\"form-control\"\r\n                                      id=\"title\"\r\n                                      name=\"title\"\r\n                                      autoComplete=\"off\"\r\n                                      defaultValue={initUser.title}\r\n                                      ref={register()}\r\n                                    >\r\n                                      <option value=\"\">Chọn Chức Danh</option>\r\n                                      {listTitle.map(title => {\r\n                                        return (\r\n                                          <option\r\n                                            value={title.id}\r\n                                            key={title.id}\r\n                                          >\r\n                                            {title.description}\r\n                                          </option>\r\n                                        );\r\n                                      })}\r\n                                    </select>\r\n                                  ) : null}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"col-sm-12 m-b-10\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"horizontalFormEmail\"\r\n                                  className=\"col-sm-3 control-label text-edit\"\r\n                                >\r\n                                  Chức vụ\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  {!_.isEmpty(initUser) &&\r\n                                  !_.isEmpty(listPosition) ? (\r\n                                    <select\r\n                                      className=\"form-control\"\r\n                                      id=\"position\"\r\n                                      name=\"position\"\r\n                                      defaultValue={initUser.position}\r\n                                      ref={register()}\r\n                                    >\r\n                                      <option value=\"\">Chọn Chức Danh</option>\r\n                                      {listPosition.map(position => {\r\n                                        return (\r\n                                          <option\r\n                                            value={position.id}\r\n                                            key={position.id}\r\n                                          >\r\n                                            {position.description}\r\n                                          </option>\r\n                                        );\r\n                                      })}\r\n                                    </select>\r\n                                  ) : null}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-head card-topline-aqua\">\r\n                      <header>Thay đổi mật khẩu</header>\r\n                    </div>\r\n                    <div className=\"card-body no-padding height-9\">\r\n                      <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"col-sm-12 m-b-10\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"horizontalFormEmail\"\r\n                                  className=\"col-sm-3 control-label text-edit\"\r\n                                >\r\n                                  Mật khẩu cũ\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control text-edit\"\r\n                                    name=\"oldPassword\"\r\n                                    onChange={checkPassword}\r\n                                    ref={register({ required: true })}\r\n                                    style={{\r\n                                      borderColor: !isValidPass\r\n                                        ? '#fb0606'\r\n                                        : !_.isEmpty(errors.oldPassword)\r\n                                        ? '#fb0606'\r\n                                        : '#ccc',\r\n                                    }}\r\n                                  />\r\n                                  {errors.oldPassword ? (\r\n                                    <span style={{ color: ' #fb0606' }}>\r\n                                      Vui lòng nhập Mật khẩu cũ!\r\n                                    </span>\r\n                                  ) : !isValidPass ? (\r\n                                    <span style={{ color: ' #fb0606' }}>\r\n                                      Mật khẩu cũ không chính xác!\r\n                                    </span>\r\n                                  ) : (\r\n                                    <span style={{ color: ' #ccc' }}></span>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"col-sm-12 m-b-10\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"horizontalFormEmail\"\r\n                                  className=\"col-sm-3 control-label text-edit\"\r\n                                >\r\n                                  Mật khẩu mới\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control text-edit\"\r\n                                    name=\"newPassword\"\r\n                                    ref={register({\r\n                                      validate: {\r\n                                        matchesPreviousPassword: value => {\r\n                                          const { oldPassword } = getValues();\r\n                                          if (_.isEmpty(oldPassword))\r\n                                            return true;\r\n                                          return (\r\n                                            oldPassword !== value ||\r\n                                            'Khẩu mới trùng mật khẩu cũ'\r\n                                          );\r\n                                        },\r\n                                      },\r\n                                    })}\r\n                                    style={{\r\n                                      borderColor: !_.isEmpty(\r\n                                        errors.newPassword,\r\n                                      )\r\n                                        ? '#fb0606'\r\n                                        : '#ccc',\r\n                                    }}\r\n                                  />\r\n                                  {errors.newPassword &&\r\n                                  errors.newPassword?.type === 'required' ? (\r\n                                    <span style={{ color: ' #fb0606' }}>\r\n                                      Vui lòng nhập Mật Khẩu Mới!\r\n                                    </span>\r\n                                  ) : null}\r\n                                  {errors.newPassword &&\r\n                                  errors.newPassword?.type ===\r\n                                    'matchesPreviousPassword' ? (\r\n                                    <span style={{ color: ' #fb0606' }}>\r\n                                      {errors.newPassword.message}\r\n                                    </span>\r\n                                  ) : null}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"col-sm-12 m-b-10\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"horizontalFormEmail\"\r\n                                  className=\"col-sm-3 control-label text-edit\"\r\n                                >\r\n                                  Xác nhận mật khẩu\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control text-edit\"\r\n                                    name=\"reNewPassword\"\r\n                                    ref={register({\r\n                                      validate: {\r\n                                        matchesPreviousPassword: value => {\r\n                                          const { newPassword } = getValues();\r\n                                          return (\r\n                                            newPassword === value ||\r\n                                            'Xác Nhận Mật Khẩu Mới Không Trùng Khớp'\r\n                                          );\r\n                                        },\r\n                                      },\r\n                                    })}\r\n                                    style={{\r\n                                      borderColor: !_.isEmpty(\r\n                                        errors.reNewPassword,\r\n                                      )\r\n                                        ? '#fb0606'\r\n                                        : '#ccc',\r\n                                    }}\r\n                                  />\r\n                                  {errors.reNewPassword && (\r\n                                    <span style={{ color: ' #fb0606' }}>\r\n                                      {errors.reNewPassword.message}\r\n                                    </span>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row justify-content-center\">\r\n                <button className=\"btn btn-primary btn-lg\" id=\"btnSave\">\r\n                  Lưu\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        ) : null}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export enum SettingManageType {\r\n  Title = 'CD',\r\n  Position = 'CV',\r\n  Group = 'NDV',\r\n  Service = 'DV',\r\n  DepartmentType = 'LPB',\r\n  Department = 'PB',\r\n  Medicine = 'MD',\r\n  Pharmacy = 'PM',\r\n  Faculty = 'KP',\r\n  Specialist = 'CK',\r\n}\r\n\r\nexport const DEFAULT_ID = '00000000-0000-0000-0000-000000000000';\r\n\r\nexport enum SettingManageKey {\r\n  TITLE = 'TITLE',\r\n  POSITION = 'POSITION',\r\n  GROUP_SERVICE = 'GROUP_SERVICE',\r\n  SERVICE = 'SERVICE',\r\n  DEPARTMENT_TYPE = 'DEPARTMENT_TYPE',\r\n  DEPARTMENT = 'DEPARTMENT',\r\n  FACULTY = 'FACULTY',\r\n}\r\n\r\nexport const SettingApiRoutes = {\r\n  TABLE: {\r\n    GET_ALL_TABLE: '/api/Table/all',\r\n    CREATE_UPDATE_TABLE: '/api/Table',\r\n  },\r\n  MANAGE_TYPE: {\r\n    GET_ALL_MANAGE_TYPE: '/api/ListValue/get-all-list-values',\r\n    GET_ALL_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/get-all-list-values',\r\n    CHECK_UNIQUE_MANAGE_TYPE: '/api/ListValue/check-code-unique',\r\n    CHECK_UNIQUE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/check-code-unique',\r\n    GET_MANAGE_TYPE_BY_CODE: '/api/ListValueType/get-list-value-type',\r\n    GET_ACTIVE_TYPE: '/api/ListValue/get-list-values-activated',\r\n    CHANGE_ACTIVE_MANAGE_TYPE: '/api/ListValue/change-active',\r\n    CHANGE_ACTIVE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/change-active',\r\n    DELETE_MANAGE_TYPE: '/api/ListValue/delete/',\r\n    DELETE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/delete/',\r\n    CREATE_MANAGE_TYPE: '/api/ListValue/add',\r\n    CREATE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/add',\r\n    UPDATE_MANAGE_TYPE: '/api/ListValue/update',\r\n    UPDATE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/update',\r\n  },\r\n};\r\n\r\nexport const RESPONSE_CONSTANT = {\r\n  TABLE: {\r\n    CREATE_TABLE_SUCCESS: 'CREATE_TABLE_SUCCESS',\r\n    CREATE_TABLE_FAIL: 'CREATE_TABLE_FAIL',\r\n    UPDATE_TABLE_SUCCESS: 'UPDATE_TABLE_SUCCESS',\r\n    UPDATE_TABLE_FAIL: 'UPDATE_TABLE_FAIL',\r\n    DELETE_TABLE_SUCCESS: 'DELETE_TABLE_SUCCESS',\r\n    DELETE_TABLE_FAIL: 'DELETE_TABLE_FAIL',\r\n  },\r\n  TITLE: {\r\n    CHANGE_STATUS_TITLE_SUCCESS: 'CHANGE_STATUS_TITLE_SUCCESS',\r\n    CHANGE_STATUS_TITLE_FAIL: 'CHANGE_STATUS_TITLE_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_TITLE_SUCCESS: 'DELETE_TITLE_SUCCESS',\r\n    DELETE_TITLE_FAIL: 'DELETE_TITLE_FAIL',\r\n    CREATE_TITLE_SUCCESS: 'CREATE_TITLE_SUCCESS',\r\n    CREATE_TITLE_FAIL: 'CREATE_TITLE_FAIL',\r\n    UPDATE_TITLE_SUCCESS: 'UPDATE_TITLE_SUCCESS',\r\n    UPDATE_TITLE_FAIL: 'UPDATE_TITLE_FAIL',\r\n  },\r\n  POSITION: {\r\n    CHANGE_STATUS_POSITION_SUCCESS: 'CHANGE_STATUS_POSITION_SUCCESS',\r\n    CHANGE_STATUS_POSITION_FAIL: 'CHANGE_STATUS_POSITION_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_POSITION_SUCCESS: 'DELETE_POSITION_SUCCESS',\r\n    DELETE_POSITION_FAIL: 'DELETE_POSITION_FAIL',\r\n    CREATE_POSITION_SUCCESS: 'CREATE_POSITION_SUCCESS',\r\n    CREATE_POSITION_FAIL: 'CREATE_POSITION_FAIL',\r\n    UPDATE_POSITION_SUCCESS: 'UPDATE_POSITION_SUCCESS',\r\n    UPDATE_POSITION_FAIL: 'UPDATE_POSITION_FAIL',\r\n  },\r\n  GROUP_SERVICE: {\r\n    CHANGE_STATUS_GROUP_SERVICE_SUCCESS: 'CHANGE_STATUS_GROUP_SERVICE_SUCCESS',\r\n    CHANGE_STATUS_GROUP_SERVICE_FAIL: 'CHANGE_STATUS_GROUP_SERVICE_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_GROUP_SERVICE_SUCCESS: 'DELETE_GROUP_SERVICE_SUCCESS',\r\n    DELETE_GROUP_SERVICE_FAIL: 'DELETE_GROUP_SERVICE_FAIL',\r\n    CREATE_GROUP_SERVICE_SUCCESS: 'CREATE_GROUP_SERVICE_SUCCESS',\r\n    CREATE_GROUP_SERVICE_FAIL: 'CREATE_GROUP_SERVICE_FAIL',\r\n    UPDATE_GROUP_SERVICE_SUCCESS: 'UPDATE_GROUP_SERVICE_SUCCESS',\r\n    UPDATE_GROUP_SERVICE_FAIL: 'UPDATE_GROUP_SERVICE_FAIL',\r\n  },\r\n  SERVICE: {\r\n    CHANGE_STATUS_SERVICE_SUCCESS: 'CHANGE_STATUS_SERVICE_SUCCESS',\r\n    CHANGE_STATUS_SERVICE_FAIL: 'CHANGE_STATUS_SERVICE_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_SERVICE_SUCCESS: 'DELETE_SERVICE_SUCCESS',\r\n    DELETE_SERVICE_FAIL: 'DELETE_SERVICE_FAIL',\r\n    CREATE_SERVICE_SUCCESS: 'CREATE_SERVICE_SUCCESS',\r\n    CREATE_SERVICE_FAIL: 'CREATE_SERVICE_FAIL',\r\n    UPDATE_SERVICE_SUCCESS: 'UPDATE_SERVICE_SUCCESS',\r\n    UPDATE_SERVICE_FAIL: 'UPDATE_SERVICE_FAIL',\r\n  },\r\n  DEPARTMENT_TYPE: {\r\n    CHANGE_STATUS_DEPARTMENT_TYPE_SUCCESS:\r\n      'CHANGE_STATUS_DEPARTMENT_TYPE_SUCCESS',\r\n    CHANGE_STATUS_DEPARTMENT_TYPE_FAIL: 'CHANGE_STATUS_DEPARTMENT_TYPE_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_DEPARTMENT_TYPE_SUCCESS: 'DELETE_DEPARTMENT_TYPE_SUCCESS',\r\n    DELETE_DEPARTMENT_TYPE_FAIL: 'DELETE_DEPARTMENT_TYPE_FAIL',\r\n    CREATE_DEPARTMENT_TYPE_SUCCESS: 'CREATE_DEPARTMENT_TYPE_SUCCESS',\r\n    CREATE_DEPARTMENT_TYPE_FAIL: 'CREATE_DEPARTMENT_TYPE_FAIL',\r\n    UPDATE_DEPARTMENT_TYPE_SUCCESS: 'UPDATE_DEPARTMENT_TYPE_SUCCESS',\r\n    UPDATE_DEPARTMENT_TYPE_FAIL: 'UPDATE_DEPARTMENT_TYPE_FAIL',\r\n  },\r\n  DEPARTMENT: {\r\n    CHANGE_STATUS_DEPARTMENT_SUCCESS: 'CHANGE_STATUS_DEPARTMENT_SUCCESS',\r\n    CHANGE_STATUS_DEPARTMENT_FAIL: 'CHANGE_STATUS_DEPARTMENT_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_DEPARTMENT_SUCCESS: 'DELETE_DEPARTMENT_SUCCESS',\r\n    DELETE_DEPARTMENT_FAIL: 'DELETE_DEPARTMENT_FAIL',\r\n    CREATE_DEPARTMENT_SUCCESS: 'CREATE_DEPARTMENT_SUCCESS',\r\n    CREATE_DEPARTMENT_FAIL: 'CREATE_DEPARTMENT_FAIL',\r\n    UPDATE_DEPARTMENT_SUCCESS: 'UPDATE_DEPARTMENT_SUCCESS',\r\n    UPDATE_DEPARTMENT_FAIL: 'UPDATE_DEPARTMENT_TYPE_FAIL',\r\n  },\r\n  FACULTY: {\r\n    CHANGE_STATUS_FACULTY_SUCCESS: 'CHANGE_STATUS_FACULTY_SUCCESS',\r\n    CHANGE_STATUS_FACULTY_FAIL: 'CHANGE_STATUS_FACULTY_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_FACULTY_SUCCESS: 'DELETE_FACULTY_SUCCESS',\r\n    DELETE_FACULTY_FAIL: 'DELETE_FACULTY_FAIL',\r\n    CREATE_FACULTY_SUCCESS: 'CREATE_FACULTY_SUCCESS',\r\n    CREATE_FACULTY_FAIL: 'CREATE_FACULTY_FAIL',\r\n    UPDATE_FACULTY_SUCCESS: 'UPDATE_FACULTY_SUCCESS',\r\n    UPDATE_FACULTY_FAIL: 'UPDATE_FACULTY_TYPE_FAIL',\r\n  },\r\n};\r\n\r\nexport const RESPONSE_MESSAGE = {\r\n  TABLE: {\r\n    CREATE_TABLE_SUCCESS: 'Tạo Mới Thông Tin Bàn Tiếp Nhận Thành Công',\r\n    CREATE_TABLE_FAIL: 'Tạo Mới Thông Tin Bàn Tiếp Nhận Thất Bại',\r\n    UPDATE_TABLE_SUCCESS: 'Cập Nhật Thông Tin Bàn Tiếp Nhận Thành Công',\r\n    UPDATE_TABLE_FAIL: 'Cập Nhật Thông Tin Bàn Tiếp Nhận Thất Bại',\r\n    DELETE_TABLE_SUCCESS: 'Xoá Thông Tin Bàn Tiếp Nhận Thành Công',\r\n    DELETE_TABLE_FAIL: 'Xoá Thông Tin Bàn Tiếp Nhận Thất Bại',\r\n  },\r\n  TITLE: {\r\n    CHANGE_STATUS_TITLE_SUCCESS: 'Thay Đổi Trạng Thái Chức Danh Thành Công',\r\n    CHANGE_STATUS_TITLE_FAIL: 'Thay Đổi Trạng Thái Chức Danh Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Chức Danh Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Chức Danh Đã Tồn Tại',\r\n    DELETE_TITLE_SUCCESS: 'Xoá Chức Danh Thành Công',\r\n    DELETE_TITLE_FAIL: 'Xoá Chức Danh Thất Bại',\r\n    CREATE_TITLE_SUCCESS: 'Tạo Mới Chức Danh Thành Công',\r\n    CREATE_TITLE_FAIL: 'Tạo Mới Chức Danh Thất Bại',\r\n    UPDATE_TITLE_SUCCESS: 'Cập Nhật Chức Danh Thành Công',\r\n    UPDATE_TITLE_FAIL: 'Cập Nhật Chức Danh Thất Bại',\r\n  },\r\n  POSITION: {\r\n    CHANGE_STATUS_POSITION_SUCCESS: 'Thay Đổi Trạng Thái Chức Vụ Thành Công',\r\n    CHANGE_STATUS_POSITION_FAIL: 'Thay Đổi Trạng Thái Chức Vụ Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Chức Vụ Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Chức Vụ Đã Tồn Tại',\r\n    DELETE_POSITION_SUCCESS: 'Xoá Chức Vụ Thành Công',\r\n    DELETE_POSITION_FAIL: 'Xoá Chức Vụ Thất Bại',\r\n    CREATE_POSITION_SUCCESS: 'Tạo Mới Chức Vụ Thành Công',\r\n    CREATE_POSITION_FAIL: 'Tạo Mới Chức Vụ Thất Bại',\r\n    UPDATE_POSITION_SUCCESS: 'Cập Nhật Chức Vụ Thành Công',\r\n    UPDATE_POSITION_FAIL: 'Cập Nhật Chức Vụ Thất Bại',\r\n  },\r\n  GROUP_SERVICE: {\r\n    CHANGE_STATUS_GROUP_SERVICE_SUCCESS:\r\n      'Thay Đổi Trạng Thái Nhóm Dịch Vụ Thành Công',\r\n    CHANGE_STATUS_GROUP_SERVICE_FAIL:\r\n      'Thay Đổi Trạng Thái Nhóm Dịch Vụ Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Nhóm Dịch Vụ Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Nhóm Dịch Vụ Đã Tồn Tại',\r\n    DELETE_GROUP_SERVICE_SUCCESS: 'Xoá Nhóm Dịch Vụ Thành Công',\r\n    DELETE_GROUP_SERVICE_FAIL: 'Xoá Nhóm Dịch Vụ Thất Bại',\r\n    CREATE_GROUP_SERVICE_SUCCESS: 'Tạo Mới Nhóm Dịch Vụ Thành Công',\r\n    CREATE_GROUP_SERVICE_FAIL: 'Tạo Mới Nhóm Dịch Vụ Thất Bại',\r\n    UPDATE_GROUP_SERVICE_SUCCESS: 'Cập Nhật Nhóm Dịch Vụ Thành Công',\r\n    UPDATE_GROUP_SERVICE_FAIL: 'Cập Nhật Nhóm Dịch Vụ Thất Bại',\r\n  },\r\n  SERVICE: {\r\n    CHANGE_STATUS_SERVICE_SUCCESS: 'Thay Đổi Trạng Thái Dịch Vụ Thành Công',\r\n    CHANGE_STATUS_SERVICE_FAIL: 'Thay Đổi Trạng Thái Dịch Vụ Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Dịch Vụ Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Dịch Vụ Đã Tồn Tại',\r\n    DELETE_SERVICE_SUCCESS: 'Xoá Dịch Vụ Thành Công',\r\n    DELETE_SERVICE_FAIL: 'Xoá Dịch Vụ Thất Bại',\r\n    CREATE_SERVICE_SUCCESS: 'Tạo Mới Dịch Vụ Thành Công',\r\n    CREATE_SERVICE_FAIL: 'Tạo Mới Dịch Vụ Thất Bại',\r\n    UPDATE_SERVICE_SUCCESS: 'Cập Nhật Dịch Vụ Thành Công',\r\n    UPDATE_SERVICE_FAIL: 'Cập Nhật Dịch Vụ Thất Bại',\r\n  },\r\n  DEPARTMENT_TYPE: {\r\n    CHANGE_STATUS_DEPARTMENT_TYPE_SUCCESS:\r\n      'Thay Đổi Trạng Thái Loại phòng khám Thành Công',\r\n    CHANGE_STATUS_DEPARTMENT_TYPE_FAIL:\r\n      'Thay Đổi Trạng Thái Loại phòng khám Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Loại phòng khám Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Loại phòng khám Đã Tồn Tại',\r\n    DELETE_DEPARTMENT_TYPE_SUCCESS: 'Xoá Loại phòng khám Thành Công',\r\n    DELETE_DEPARTMENT_TYPE_FAIL: 'Xoá Loại phòng khám Thất Bại',\r\n    CREATE_DEPARTMENT_TYPE_SUCCESS: 'Tạo Mới Loại phòng khám Thành Công',\r\n    CREATE_DEPARTMENT_TYPE_FAIL: 'Tạo Mới Loại phòng khám Thất Bại',\r\n    UPDATE_DEPARTMENT_TYPE_SUCCESS: 'Cập Nhật Loại phòng khám Thành Công',\r\n    UPDATE_DEPARTMENT_TYPE_FAIL: 'Cập Nhật Loại phòng khám Thất Bại',\r\n  },\r\n  DEPARTMENT: {\r\n    CHANGE_STATUS_DEPARTMENT_SUCCESS:\r\n      'Thay Đổi Trạng Thái phòng khám Thành Công',\r\n    CHANGE_STATUS_DEPARTMENT_FAIL: 'Thay Đổi Trạng Thái phòng khám Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã phòng khám Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã phòng khám Đã Tồn Tại',\r\n    DELETE_DEPARTMENT_SUCCESS: 'Xoá phòng khám Thành Công',\r\n    DELETE_DEPARTMENT_FAIL: 'Xoá phòng khám Thất Bại',\r\n    CREATE_DEPARTMENT_SUCCESS: 'Tạo Mới phòng khám Thành Công',\r\n    CREATE_DEPARTMENT_FAIL: 'Tạo Mới phòng khám Thất Bại',\r\n    UPDATE_DEPARTMENT_SUCCESS: 'Cập Nhật phòng khám Thành Công',\r\n    UPDATE_DEPARTMENT_FAIL: 'Cập Nhật phòng khám Thất Bại',\r\n  },\r\n  FACULTY: {\r\n    CHANGE_STATUS_FACULTY_SUCCESS: 'Thay Đổi Trạng Thái Khoa Thành Công',\r\n    CHANGE_STATUS_FACULTY_FAIL: 'Thay Đổi Trạng Thái Khoa Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Khoa Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Khoa Đã Tồn Tại',\r\n    DELETE_FACULTY_SUCCESS: 'Xoá Khoa Thành Công',\r\n    DELETE_FACULTY_FAIL: 'Xoá Khoa Thất Bại',\r\n    CREATE_FACULTY_SUCCESS: 'Tạo Mới Khoa Thành Công',\r\n    CREATE_FACULTY_FAIL: 'Tạo Mới Khoa Thất Bại',\r\n    UPDATE_FACULTY_SUCCESS: 'Cập Nhật Khoa Thành Công',\r\n    UPDATE_FACULTY_FAIL: 'Cập Nhật Khoa Thất Bại',\r\n  },\r\n};\r\n\r\nexport const tablePermissionInRole: any[] = [\r\n  { id: 'no', label: '#', minWidth: 50 },\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'description', label: 'Mô tả', minWidth: 120 },\r\n  { id: 'is_active', label: 'Trạng thái', minWidth: 120 },\r\n  { id: 'actions', label: 'Có Thể  Truy Cập', minWidth: 200 },\r\n];\r\n\r\nexport const tableValue: any[] = [\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'description', label: 'Tên', minWidth: 120 },\r\n  { id: 'type', label: 'Loại', minWidth: 120 },\r\n  { id: 'actions', label: 'Chức năng', minWidth: 170 },\r\n];\r\n\r\nexport const tableGroupService: any[] = [\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'description', label: 'Tên', minWidth: 120 },\r\n  { id: 'type', label: 'Loại', minWidth: 120 },\r\n  { id: 'service_type', label: 'Loại hình dịch vụ', minWidth: 200 },\r\n  { id: 'actions', label: 'Chức năng', minWidth: 170 },\r\n];\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { HttpRequest } from 'utils//request';\r\nimport { APP_CONSTANT } from 'store/common/constants/common.constant';\r\nimport {\r\n  SettingApiRoutes,\r\n  SettingManageType,\r\n} from '../constants/setting.constant';\r\nimport * as _ from 'lodash';\r\n\r\ninterface ManageTypeModel {\r\n  id?: string;\r\n  description: string;\r\n  code?: string;\r\n  isActive?: boolean;\r\n  isSystem?: boolean;\r\n  settingTypeId?: string;\r\n  listValueId?: string;\r\n  manageType: SettingManageType;\r\n}\r\n\r\ninterface OnlyManageType {\r\n  id: string;\r\n  manageType: SettingManageType;\r\n  code?: string;\r\n}\r\nexport class SettingHttp {\r\n  request: any;\r\n  constructor(endPoint = APP_CONSTANT.API.ENDPOINT) {\r\n    this.request = new HttpRequest(endPoint).request;\r\n  }\r\n\r\n  private configApiRouteWithManageType = (manageType: SettingManageType) => {\r\n    if (\r\n      manageType === SettingManageType.Service ||\r\n      manageType === SettingManageType.Department\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  protected modifyRequestBody = (manageTypeInfo: ManageTypeModel): any => {\r\n    let requestBody: any = {\r\n      code: manageTypeInfo.code,\r\n      description: manageTypeInfo.description,\r\n      display_order: 0,\r\n      is_active: manageTypeInfo.isActive,\r\n      is_system: manageTypeInfo.isSystem,\r\n      list_value_type_id: manageTypeInfo.settingTypeId,\r\n      list_value_id: manageTypeInfo.listValueId\r\n        ? manageTypeInfo.listValueId\r\n        : undefined,\r\n    };\r\n    let id = _.get(manageTypeInfo, 'id');\r\n    if (id) {\r\n      requestBody = {\r\n        ...requestBody,\r\n        id,\r\n      };\r\n    } else {\r\n      requestBody = {\r\n        ...requestBody,\r\n        type: 'TEK',\r\n      };\r\n    }\r\n    return requestBody;\r\n  };\r\n\r\n  public getAllManageType = (manageType: SettingManageType): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.GET_ALL_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.GET_ALL_MANAGE_TYPE;\r\n    }\r\n    return this.request.get(apiUrl + '/' + manageType);\r\n  };\r\n\r\n  public getManageType = (manageType: SettingManageType): Promise<any> => {\r\n    return this.request.get(\r\n      SettingApiRoutes.MANAGE_TYPE.GET_MANAGE_TYPE_BY_CODE + '/' + manageType,\r\n    );\r\n  };\r\n\r\n  public changeManageTypeActive = ({\r\n    id,\r\n    isActive,\r\n    manageType,\r\n  }): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CHANGE_ACTIVE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CHANGE_ACTIVE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl, {\r\n      id,\r\n      is_active: isActive ? !isActive : true,\r\n    });\r\n  };\r\n\r\n  public createManageType = (manageTypeInfo: ManageTypeModel): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(manageTypeInfo.manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CREATE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CREATE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl, this.modifyRequestBody(manageTypeInfo));\r\n  };\r\n\r\n  public updateManageType = (manageTypeInfo: ManageTypeModel): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(manageTypeInfo.manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.UPDATE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.UPDATE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl, this.modifyRequestBody(manageTypeInfo));\r\n  };\r\n\r\n  public deleteManageType = (deletetType: OnlyManageType): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(deletetType.manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.DELETE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.DELETE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl + '/' + deletetType.id);\r\n  };\r\n\r\n  public checkUniqueCode = (checkType: OnlyManageType): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(checkType.manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CHECK_UNIQUE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CHECK_UNIQUE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl, {\r\n      Code: checkType.code,\r\n      Id: checkType.id,\r\n    });\r\n  };\r\n\r\n  public getSpecialist = (specialistCode: SettingManageType) => {\r\n    return this.request.get(\r\n      SettingApiRoutes.MANAGE_TYPE.GET_ACTIVE_TYPE + '/' + specialistCode,\r\n    );\r\n  };\r\n}\r\n"],"sourceRoot":""}