{"version":3,"sources":["../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","store/table/shared/selectors.ts","store/table/shared/saga.ts","store/table/services/table.http.ts","store/department/services/department.http.ts","app/containers/PersonnelPage/components/ModalUserInRole.tsx","app/components/TableSortCheck/index.tsx","app/containers/PersonnelPage/components/ModalFindUser.tsx","store/departmentGroup/constants/index.ts","store/departmentGroup/services/deptGroup.http.ts","app/components/MultiSelect/index.tsx","../node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js","../node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","app/containers/PersonnelPage/components/ConfirmDeleteRole.tsx","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ArrowDropDown.js","../node_modules/@material-ui/lab/esm/Autocomplete/Autocomplete.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/esm/Chip/Chip.js","store/setting/shared/slice.ts","store/setting/shared/saga.ts","store/setting/shared/selectors.ts","app/containers/SettingPage/components/TitleManagement/ModalAddTitle.tsx","app/containers/SettingPage/components/TitleManagement/ModalUpdateTitle.tsx","app/containers/SettingPage/pages/TitleManagement.tsx","app/containers/SettingPage/components/Position/ModalAddPosition.tsx","app/containers/SettingPage/components/Position/ModalUpdatePosition.tsx","app/containers/SettingPage/pages/Position.tsx","app/containers/SettingPage/components/GroupService/ModalAddGroupService.tsx","app/containers/SettingPage/components/GroupService/ModalUpdateGroupService.tsx","app/containers/SettingPage/pages/GroupService.tsx","app/containers/SettingPage/components/Service/ModalAddService.tsx","app/containers/SettingPage/components/Service/ModalUpdateService.tsx","app/containers/SettingPage/pages/Service.tsx","app/containers/SettingPage/components/DepartmentType/ModalAddDepatmentType.tsx","app/containers/SettingPage/components/DepartmentType/ModalUpdateDepartmentType.tsx","app/containers/SettingPage/pages/DepartmentType.tsx","store/department/shared/slice.ts","store/department/shared/saga.ts","store/department/shared/selectors.ts","store/departmentService/constants/departmentService.constant.ts","services/number.service.ts","app/containers/SettingPage/components/Department/DeptActions.tsx","app/containers/SettingPage/pages/Departments.tsx","store/medicine/constants/medicine.constant.ts","store/medicine/shared/slice.ts","store/medicine/shared/selectors.ts","store/medicine/services/medicine.http.ts","store/medicine/shared/saga.ts","app/containers/SettingPage/components/Medicine/ModalAddMedicine.tsx","app/containers/SettingPage/components/Medicine/ModalUpdateMedicine.tsx","app/containers/SettingPage/pages/Medicine.tsx","store/pharmacy/constants/pharmarcy.constant.ts","store/pharmacy/shared/slice.ts","store/pharmacy/services/pharmarcy.http.ts","store/pharmacy/shared/saga.ts","store/pharmacy/shared/selectors.ts","app/containers/SettingPage/components/Pharmacy/ModalAddPharmacy.tsx","app/containers/SettingPage/components/Pharmacy/ModalUpdatePharmacy.tsx","app/containers/SettingPage/pages/Pharmacy.tsx","store/device/constants/device.constant.ts","store/device/shared/slice.ts","store/device/shared/selectors.ts","store/device/services/device.http.ts","store/device/shared/saga.ts","app/containers/SettingPage/components/Device/AddDeviceModal.tsx","app/containers/SettingPage/components/Device/EditDeviceModal.tsx","app/containers/SettingPage/pages/Device.tsx","app/containers/SettingPage/components/TablePatientReceition/ModalTable.tsx","app/containers/SettingPage/pages/TablePatientReceition.tsx","store/departmentService/shared/slice.ts","store/departmentService/shared/selectors.ts","store/departmentService/services/departmentService.http.ts","store/departmentService/shared/saga.ts","../node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js","../node_modules/memoize-one/dist/memoize-one.esm.js","../../src/timer.js","../../src/domHelpers.js","../../src/createGridComponent.js","../../src/createListComponent.js","../../src/VariableSizeList.js","app/containers/SettingPage/components/DepartmentService/DeptServiceActions.tsx","app/containers/SettingPage/pages/DepartmentService.tsx","app/containers/SettingPage/components/Faculty/ModalAddFaculty.tsx","app/containers/SettingPage/components/Faculty/ModalUpdateFaculty.tsx","app/containers/SettingPage/pages/Faculty.tsx","app/containers/SettingPage/pages/DefaultSetting.tsx","app/containers/SettingPage/components/DepartmentGroup/DeptGroupActions.tsx","app/containers/SettingPage/pages/DepartmentGroup.tsx","../node_modules/rc-collapse/es/PanelContent.js","../node_modules/rc-collapse/es/Panel.js","../node_modules/rc-collapse/es/Collapse.js","../node_modules/rc-collapse/es/index.js","../node_modules/antd/es/collapse/CollapsePanel.js","../node_modules/antd/es/collapse/Collapse.js","../node_modules/antd/es/collapse/index.js","../node_modules/rc-switch/es/index.js","../node_modules/antd/es/switch/index.js","app/containers/SettingPage/pages/RoleDetails.tsx","store/configDeptService/shared/slice.ts","store/configDeptService/constants/configDeptService.constant.ts","store/configDeptService/shared/selectors.ts","store/configDeptService/services/configDeptService.http.ts","store/configDeptService/shared/saga.ts","app/containers/SettingPage/components/ConfigDeptService/ConfigDeptSerAction.tsx","app/containers/SettingPage/pages/ConfigDeptService.tsx","../node_modules/@material-ui/core/esm/utils/deprecatedPropType.js","app/components/TableHeaderSort/index.tsx","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","store/setting/constants/setting.constant.ts","app/components/Modal/Confirm/index.tsx","../node_modules/@babel/runtime/helpers/interopRequireWildcard.js","../node_modules/@material-ui/core/esm/utils/unsupportedProp.js","store/setting/services/setting.http.ts","../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/utils/requirePropFactory.js","store/room/shared/slice.ts","store/room/shared/selectors.ts","store/patient/constants/http.constant.ts","store/departmentGroup/shared/slice.ts","store/table/constants/table.constant.ts","store/room/shared/saga.ts","store/table/shared/slice.ts","store/departmentGroup/shared/selectors.ts","app/components/STableBody/index.tsx","app/components/STableHead/index.tsx","app/components/STableHeaderSort/index.tsx","../node_modules/@material-ui/icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/icons/CheckBox.js","store/departmentGroup/shared/saga.ts","store/room/constants/room.constants.ts","store/room/services/room.http.ts","store/department/constants/department.constant.ts","services/datetime.service.ts"],"names":["easeOut","t","value","min","max","Math","CircularProgress","React","props","ref","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","_props$variant","variant","other","_objectWithoutProperties","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","_extends","clsx","root","capitalize","indeterminate","static","width","height","role","svg","viewBox","SIZE","circle","circleDisableShrink","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","name","flip","selectTableState","state","table","initialState","selectLoading","createSelector","tableState","error","success","loading","selectTable","tables","selectTableInfo","tableInfo","listTableCallAble","getTableAll","getTableWithId","createTable","updateTable","deleteTable","callTableAble","TableSaga","tableRequest","TableHttp","api","action","call","payload","response","ok","put","actions","getTableAllSuccess","data","getTableAllFailure","getTableWithIdSuccess","result","getTableWithIdFailure","createTableSuccess","createTableFailure","message","updateTableSuccess","updateTableFailure","deleteTableSuccess","deleteTableFailure","callTableAbleSuccess","callTableAbleFailure","all","takeLatest","type","endPoint","APP_CONSTANT","API","ENDPOINT","request","converRequestTable","code","device_code","deviceCode","device_type","deviceType","computer_ip","computerIP","area_code","areaCode","filter","post","TableApiRoutes","GET_ALL_TABLE","draw","start","page","rowsPerPage","length","order","column","dir","columns","defaultFilter","search","regex","id","get","GET_BY_ID","CREATE_TABLE","UPDATE_TABLE","DELETE_TABLE","CALL_TABLE","checkUniqueTable","CHECK_UNIQUE","this","HttpRequest","DepartmentHttp","DEPT","getDepts","ApiRoute","configRequest","getDeptById","createDept","dept","updateDept","deleteDept","delete","changeActive","is_active","DEPT_STATUS","colUserInRole","label","minWidth","useStyles","makeStyles","container","minHeight","maxHeight","visuallyHidden","border","clip","margin","overflow","padding","position","top","ModalUserInRole","open","onClose","useInjectReducer","key","AuthSlice","reducer","useInjectSaga","saga","AuthSaga","dispatch","useDispatch","useSelector","AuthSelector","useState","setOrder","orderBy","setOrderBy","setSearch","handleRequestSort","event","property","fullWidth","maxWidth","disableBackdropClick","onSubmit","e","preventDefault","description","stickyHeader","onRequestSort","_","users","align","colSpan","EMPTY_MESSAGE","AppHelper","stableSort","getComparator","map","row","idx","user","title","enterDelay","leaveDelay","fontSize","aria-hidden","onClick","activeUsers","deleteUserInRole","activeUser","inActiveUser","th","fontWeight","textTransform","backgound","BlueCheckbox","blue","checked","Checkbox","GreenCheckbox","green","TableSortCheck","onSelectAllClick","numSelected","rowCount","cols","TableRow","TableCell","backgroundColor","onChange","inputProps","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","ButtonSearch","styled","button","ModalFindUser","selected","setSelected","useForm","handleSubmit","register","getValues","useEffect","getListUser","clearUsers","submitSearch","fullName","pageNumber","pageSize","handleSelectAllClick","target","newSelecteds","n","handleChangePage","newPagi","page_size","handleChangeRowsPerPage","addUserToRole","console","log","currentUser","addUserInRole","Dialog","DialogContent","placeholder","aria-controls","Paper","TableContainer","Table","TableHead","TableBody","isItemSelected","indexOf","hover","selectedIndex","newSelected","slice","handleClick","aria-checked","tabIndex","Tooltip","TablePagination","rowsPerPageOptions","rowsPerArray","component","labelRowsPerPage","count","total_records","page_number","onChangePage","onChangeRowsPerPage","renderPagination","DeptGroupApiRoutes","DeptGroupHttp","getGroups","createGroup","group","getGroupById","getGroupByCode","updateGroup","groupCode","groupName","group_code","group_name","deleteGroup","addDeptToGroup","depts","departmentVirtualCode","department_code","department_virtual_code","getDeptInGroup","TekMultiSelect","items","selectedValues","selectAllLabel","limitTags","onToggleOption","onClearOptions","onSelectAll","getOptionLabel","allSelected","createFilterOptions","multiple","options","disableCloseOnSelect","getOptionSelected","option","anotherOption","noOptionsText","filterOptions","params","filtered","selectedOptions","reason","find","renderOption","selectAllProps","icon","checkedIcon","marginRight","renderInput","defaultProps","stripDiacritics","string","normalize","replace","config","arguments","undefined","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","limit","_config$matchFrom","matchFrom","stringify","_config$trim","trim","_ref","inputValue","input","toLowerCase","filteredOptions","candidate","findIndex","array","comp","i","defaultFilterOptions","useAutocomplete","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnBlur","clearOnBlur","freeSolo","_props$clearOnEscape","clearOnEscape","_props$componentName","componentName","_props$debug","debug","_props$defaultValue","defaultValue","_props$disableClearab","disableClearable","_props$disableCloseOn","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabelProp","_props$getOptionSelec","groupBy","_props$handleHomeEndK","handleHomeEndKeys","idProp","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onHighlightChange","onInputChange","onOpen","openProp","_props$openOnFocus","openOnFocus","_props$selectOnFocus","selectOnFocus","valueProp","useId","ignoreFocus","firstFocus","inputRef","listboxRef","_React$useState","anchorEl","setAnchorEl","_React$useState2","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","_useControlled","useControlled","controlled","default","_useControlled2","_slicedToArray","setValue","_useControlled3","_useControlled4","setInputValue","_React$useState3","focused","setFocused","resetInputValue","useEventCallback","newValue","newInputValue","optionLabel","_useControlled5","_useControlled6","setOpenState","inputValueIsSelectedValue","popupOpen","some","value2","focusTag","tagToFocus","current","focus","querySelector","setHighlightedIndex","_ref2","index","_ref2$reason","removeAttribute","setAttribute","prev","listboxNode","parentElement","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","_ref3","diff","_ref3$direction","_ref3$reason","nextIndex","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","push","splice","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","which","stopPropagation","onKeyDown","handleFocus","handleBlur","document","activeElement","handleInputChange","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","getRootProps","onMouseDown","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","getPopupIndicatorProps","getTagProps","_ref4","onDelete","getListboxProps","getOptionProps","_ref5","onMouseOver","onTouchStart","ListSubheader","_props$component","Component","_props$disableGutters","disableGutters","_props$disableSticky","disableSticky","_props$inset","inset","sticky","gutters","boxSizing","lineHeight","listStyle","text","fontFamily","typography","fontWeightMedium","pxToRem","colorInherit","paddingLeft","paddingRight","zIndex","paddingBottom","ConfirmDeleteRole","confirmMethod","aria-labelledby","aria-describedby","createSvgIcon","d","DisablePortal","CloseIcon","ArrowDropDownIcon","Autocomplete","startAdornment","ChipProps","_props$clearText","clearText","_props$closeIcon","closeIcon","_props$closeText","closeText","_props$disabled","_props$disablePortal","disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$fullWidth","_props$getLimitTagsTe","getLimitTagsText","more","x","_props$limitTags","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","_props$loadingText","loadingText","_props$noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","_props$PopperComponen","PopperComponent","PopperComponentProp","Popper","_props$popupIcon","popupIcon","renderGroupProp","renderGroup","renderOptionProp","renderTags","_useAutocomplete","getCustomizedTagProps","tag","tagSizeSmall","Chip","groupLabel","groupUl","children","renderListOption","optionProps","hasClearIcon","hasPopupIcon","InputLabelProps","InputProps","inputRoot","endAdornment","IconButton","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","inputFocused","popper","popperDisablePortal","clientWidth","paper","noOptions","listbox","option2","index2","_option","visibility","flexWrap","right","paddingTop","flexGrow","textOverflow","opacity","modal","body1","justifyContent","alignItems","cursor","outline","WebkitTapHighlightColor","_defineProperty","breakpoints","up","disabledOpacity","pointerEvents","background","isDeleteKeyboardEvent","keyboardEvent","avatarProp","avatar","clickableProp","clickable","ComponentProp","deleteIconProp","deleteIcon","iconProp","onKeyUp","chipRef","handleRef","useForkRef","handleDeleteIconClick","small","ButtonBase","moreProps","customClasses","deleteIconSmall","CancelIcon","avatarSmall","iconSmall","outlined","outlinedPrimary","outlinedSecondary","sizeSmall","deletable","labelSmall","grey","deleteIconColor","fade","getContrastText","borderRadius","whiteSpace","textDecoration","verticalAlign","marginLeft","contrastText","dark","userSelect","emphasize","boxShadow","shadows","clickableColorPrimary","clickableColorSecondary","deletableColorPrimary","deletableColorSecondary","hoverOpacity","avatarColorPrimary","avatarColorSecondary","iconColorPrimary","iconColorSecondary","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","cacheSetting","settingList","settingType","speaciaList","settingFormSlice","createSlice","reducers","getAllManageType","getAllManageTypeSuccess","getAllManageTypeFailure","getManageType","getManageTypeSuccess","getManageTypeFailure","getSpecialist","getSpecialistSuccess","getSpecialistFailure","createManageType","createManageTypeSuccess","ReducerHelper","setCreateResponse","manageType","createManageTypeFailure","deleteManageType","deleteManageTypeSuccess","setDeleteResponse","deleteManageTypeFailure","updateManageType","updateManageTypeSuccess","setUpdateResponse","updateManageTypeFailure","changeManageTypeActive","changeManageTypeActiveSuccess","setChangeStatusResponse","changeManageTypeActiveFailure","setTempManageType","setError","setSuccess","clearSuccess","clearError","resetAll","sliceKey","manageSettingType","currentType","generateUUID","Date","now","RESPONSE_CONSTANT","RESPONSE_MESSAGE","setUpdateErrorResponse","SettingManageType","Title","SettingManageKey","TITLE","Position","POSITION","Group","GROUP_SERVICE","Service","SERVICE","DepartmentType","DEPARTMENT_TYPE","Department","DEPARTMENT","Faculty","FACULTY","SettingSaga","settingRequest","SettingHttp","selectSettingState","setting","selectError","selectSuccess","selectSettingList","selectSettingType","selectSpeciaList","selectSettingTemp","ModalAddTitle","settingHttp","Settinglice","titleType","SettingSelector","errors","isActive","isSystem","checkUniqueCode","then","responseTitle","checkResponseData","CHECK_CODE_FAIL","settingTypeId","catch","required","defaultChecked","ModalUpdateTitle","initTitle","updateTitle","is_system","TitleManagement","enqueueSnackbar","useSnackbar","notifyController","NotifyService","titleList","openAddTitle","setOpenAddTitle","openUpdateTitle","setOpenUpdateTitle","openDelete","setOpenDelete","idDelete","setIdDelete","renderData","useMemo","setNotifyMessage","setFailNotify","setSuccessNotify","syncTitleData","closeDialog","bodyText","keyConfirm","TableHeaderSort","tableValue","Switch","changeStatusTitle","setOpenUpdateTitleModal","ModalAddPosition","positionType","DEFAULT_ID","responsePosition","ModalUpdatePosition","initPosition","updatePosition","positionList","openAddPosition","setOpenAddPosition","openUpdatePosition","setOpenUpdatePosition","setFilter","searchKey","setSearchKey","filteredData","searchListByKey","pagedData","changePage","Object","assign","changeRowPerPage","syncPositionData","changeStatusPosition","setOpenUpdatePositionModal","ModalAddGroupService","responseSetting","service_type","ModalUpdateGroupService","initSetting","updateSetting","GroupService","groupServiceList","pagi","setPagi","keySearch","setKeySearch","listRender","setListRender","setPagiClient","setSearchPagiClient","changeSearch","tableGroupService","groupService","total","ModalAddService","listGroupService","setListGroupSerice","listValueId","ser","ModalUpdateService","list_value_id","ModalAddDepartmentType","ModalUpdateDepatureType","departmentType","departments","department","MedicineSlice","getDeptsSuccess","getDeptsFailure","getDeptByIdSuccess","getDeptByIdFailure","createDeptSuccess","createDeptFailure","updateDeptSuccess","updateDeptFailure","deleteDeptSuccess","deleteDeptFailure","clearDepartment","DepartmentSaga","configResponse","FilterKey","selectPatientState","selectListDept","selectDept","listHours","TEKDateTimeService","createListTimeInDay","listHoursAM","listHoursPM","NumberService","AM","PM","msgError","end","Error","startAmMinutes","am","totalMinutesAm","startPmMinutes","totalMinutes","timeOnMinute","floor","ApiRoutes","RESPONSE_DEPARTMENT_MESSAGE","TableGroups","typePatient","areaClinci","selectHours","defaultValues","address","totalNumber","startTimeActiveAM","endTimeActiveAM","startTimeActivePM","endTimeActivePM","DeptActions","valueRoomsType","valueNCK","DeptSelector","control","timeEndAM","setTimeEndAM","timeEndPM","setTimeEndPM","minute","setMinute","setTimeout","department_config","total_number","start_time_active_am","end_time_active_am","start_time_active_pm","end_time_active_pm","time_on_minute","list_value","initFormData","autoMinutes","autoGenerateNumber","Infinity","values","displayOrder","ageTo","ageFrom","typeGender","listValueTypeId","display_order","startIndex","time","hour","formatRenderTime","render","Config","used_number","scheduler_number","defaultPagi","DeptSlice","SettingSlice","openModal","setOpenModal","confirmDel","setConfirmDel","pagiRef","useRef","orderRef","orderByRef","rootStore$","RootStore","subscribe","getState","lastAction","DeptConst","CREATE_DEPARTMENT_SUCCESS","regetListDept","UPDATE_DEPARTMENT_SUCCESS","getFormValue","sort_field","sort_type","DELETE_DEPARTMENT_SUCCESS","DELETE_DEPARTMENT_FAIL","UPDATE_DEPARTMENT_FAIL","Specialist","handleReset","isAsc","STableHead","STableBody","item","formatTimeSlots","MedicineApiRoutes","tableMedicine","medicines","medicine","DeptServiceSlice","getAllMedicine","getAllMedicineSuccess","getAllMedicineFailure","getMedicineById","getMedicineByIdSuccess","getMedicineByIdFailure","getMedicine","getMedicineSuccess","getMedicineFailure","createMedicine","createMedicineSuccess","createMedicineFailure","deleteMedicine","deleteMedicineSuccess","deleteMedicineFailure","updateMedicine","updateMedicineSuccess","updateMedicineFailure","changeMedicineActive","changeMedicineActiveSuccess","changeMedicineActiveFailure","clearMedicine","selectMedicines","medicineState","selectMedicine","MedicineHttp","usageScope","usage_scope","data_type","stores","checkUniqueCodeMedicine","MedicineSaga","medicineHttp","ModalAddMedicine","resMedicine","ModalUpdateMedicine","initMedicine","MedicineSelector","Medicine","medicineList","MedicineSelectors","openAddMedicine","setOpenAddMedicine","openUpdateMedicine","setOpenUpdateMedicine","effect","changeStatusMedicine","setOpenUpdateMedicineModal","PharmacyApiRoute","tablePharmacy","pharmacies","pharmacy","PharmacySlice","getAllPharmacy","getAllPharmacySuccess","getAllPharmacyFailure","getPharmacyById","getPharmacyByIdSuccess","getPharmacyByIdFailure","getPharmacy","getPharmacySuccess","getPharmacyFailure","createPharmacy","createPharmacySuccess","createPharmacyFailure","deletePharmacy","deletePharmacySuccess","deletePharmacyFailure","updatePharmacy","updatePharmacySuccess","updatePharmacyFailure","changePharmacyActive","changePharmacyActiveSuccess","changePharmacyActiveFailure","clearPharmacy","PharmacyHttp","checkUniqueCodePharmacy","PharmacySaga","pharmacyHttp","selectPharmacies","pharmacyState","selectPharmacy","ModalAddPharmacy","Pharmacylice","resPharmacy","ModalUpdatePharmacy","initPharmacy","PharmacySelectors","updatePharmary","Pharmacy","pharmacyList","openAddPharmacy","setOpenAddPharmacy","openUpdatePharmacy","setOpenUpdatePharmacy","changeStatusPharmacy","setOpenUpdatePharmacyModal","DeviceApiRoutes","tableDevice","defaultFilterDevice","searchable","orderable","cacheDeviceData","devices","device","deviceFormSlice","getDeviceAll","getDeviceAllSuccess","getDeviceAllFailure","getDeviceById","getDeviceByIdSuccess","getDeviceByIdFailure","createDevice","createDeviceSuccess","createDeviceFailure","updateDevice","updateDeviceSuccess","updateDeviceFailure","deleteDevice","deleteDeviceSuccess","deleteDeviceFailure","clearDevice","deviceState","selectDevices","selectDevice","DeviceHttp","configRequestBody","body","ip","room_id","roomId","DeviceSaga","deviceRequest","ModalAddDevice","DeviceSlice","rooms","selectRooms","room","ModalEditDevice","initDevice","unlimitFilter","Device","RoomSlice","RoomSaga","DeviceSelector","RoomSelector","addDevice","setAddDevice","editDevice","setEditDevice","setDeleteDevice","listDevice","setListDevice","getRoomAll","deviceFormat","roomName","openAddDevice","closeModal","ModalTable","TableSlice","tableHttp","initTable","clearTableInfo","msg","checkCodeRes","checkCode","errMsg","tableTypes","TablePatientReceition","TableSelectors","searchRef","storeSub$","CREATE_TABLE_SUCCESS","UPDATE_TABLE_SUCCESS","DELETE_TABLE_SUCCESS","searchTable","clearTimeout","tablePatientReceiption","card","deviceTypes","dev","tab","openDeleteTable","recordsTotal","deptServices","deptService","serviceName","deptServiceValueTypeId","deptServiceListValueId","listPerRoom","services","getDeptServiceValueType","getDeptServiceValueTypeSuccess","getDeptServiceValueTypeFail","getDeptServiceListValue","getDeptServiceListValueSuccess","getDeptServiceListValueFail","getListDeptServices","getListDeptServicesSuccess","getListDeptServicesFail","addDeptServicesInDept","addDeptServicesInDeptSuccess","addDeptServicesInDeptFail","updateDeptServicesInDept","updateDeptServicesInDeptSuccess","updateDeptServicesInDeptFail","getDeptServicesById","getDeptServicesByIdSuccess","getDeptServicesByIdFail","getAllServices","getAllServicesSuccess","getAllServicesFail","getPerformanceRoom","getPerformanceRoomSuccess","getPerformanceRoomFail","clearDeptService","departmentService","selectDeptServices","selectDeptService","selectServices","selectListPerRoom","DepartmentServiceHttp","valuePerRoom","serviceCode","roomCode","examinationCode","reqquest","DepartmentServiceSaga","useMediaQuery","queryInput","useTheme","getThemeProps","query","supportMatchMedia","window","matchMedia","_props$options","_props$options$defaul","defaultMatches","_props$options$matchM","_props$options$noSsr","noSsr","_props$options$ssrMat","ssrMatchMedia","matches","match","setMatch","queryList","updateMatch","addListener","removeListener","safeIsNaN","isNaN","areInputsEqual","newInputs","lastInputs","first","second","memoizeOne","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","_i","apply","performance","cancelTimeout","timeoutID","cancelAnimationFrame","requestTimeout","callback","requestAnimationFrame","cachedRTLResult","getRTLOffsetType","recalculate","outerDiv","outerStyle","innerDiv","innerStyle","defaultItemKey","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_instanceProps","_outerRef","_resetIsScrollingTimeoutId","instance","isScrolling","scrollDirection","scrollOffset","scrollUpdateWasRequested","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","itemSize","layout","itemStyleCache","offset","isHorizontal","isRtl","offsetHorizontal","left","scrollLeft","scrollWidth","prevState","outerRef","validateSharedProps","nextProps","itemCount","initialScrollOffset","innerRef","innerElementType","innerTagName","itemData","itemKey","outerElementType","outerTagName","useIsScrolling","onScroll","stopIndex","createElement","_getItemStyle","estimatedTotalSize","WebkitOverflowScrolling","willChange","overscanCount","overscanBackward","overscanForward","getItemMetadata","itemMetadataMap","instanceProps","lastMeasuredIndex","itemMetadata","findNearestItemBinarySearch","low","middle","high","currentOffset","findNearestItemExponentialSearch","interval","estimatedItemSize","totalSizeOfMeasuredItems","VariableSizeList","maxOffset","minOffset","findNearestItem","shouldForceUpdate","renderRow","cloneElement","OuterElementContext","createContext","OuterElementType","forwardRef","outerProps","useContext","Children","toArray","smUp","getChildSize","child","isValidElement","gridRef","resetAfterIndex","useResetCache","Provider","a","b","DeptServiceActions","DeptServiceSelector","clearErrors","room_code","room_name","examination_code","examination_name","service_code","rules","field","TextField","service","service_name","Fragment","ModalType","initModalState","reduceModal","OPEN","DepartmentService","useReducer","dispatchModal","DeptServiceConts","renderListDeptService","memoGroups","ModalAddFaculty","facultyType","faculty","facultyRes","ModalUpdateFaculty","initFaculty","updateFaculty","facultyList","setFaculties","openAddFaculty","setOpenAddFaculty","openUpdateFaculty","setOpenUpdateFaculty","changeStatusFaculty","setOpenUpdateFacultyModal","DefaultSetting","CommonSlice","CommonSaga","CommonSelector","defaultSetting","logoUpload","setLogoUpload","backgroundUpload","setBackgroundUpload","resetState","changeSetting","newValUpdate","VINAME","viName","ENNAME","enName","CODE","SLOGAN","slogan","setDefaultSetting","files","logoUrl","src","alt","backgroundUrl","DeptGroupActions","GroupSlice","DeptGroupSaga","DeptGroupSelector","deptList","openDrop","setOpenDrop","groupDetps","defaultRoom","createGroupSuccess","updateGroupSuccess","clearGroup","formatRequest","groups","deptsSelected","td","pagination","DepartmentGroup","getGroupByIdSuccess","addDeptToGroupSuccess","regetListGroup","deleteGroupSuccess","createGroupFailure","updateGroupFailure","deleteGroupFailure","addDeptToGroupFailure","PanelContent","_classnames","prefixCls","forceRender","rendered","setRendered","classnames","displayName","CollapsePanel","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","_key","handleItemClick","_this$props","onItemClick","panelKey","handleKeyPress","keyCode","_createClass","shallowEqual","_classNames","_classNames2","_this2","_this$props2","header","headerClass","showArrow","destroyInactivePanel","accordion","openMotion","expandIcon","extra","collapsible","headerCls","classNames","itemCls","ifExtraExist","onKeyPress","CSSMotion","visible","leavedClassName","removeOnLeave","motionClassName","motionStyle","getActiveKeysArray","activeKey","currentActiveKey","activeKeyType","_typeof","String","Collapse","_props","onClickItem","_toConsumableArray","setActiveKey","getNewChild","rootDestroyInactivePanel","_child$props","childCollapsible","mergeCollapsible","getItems","setState","_activeKey","defaultActiveKey","nextState","collapseClassName","newState","Panel","devWarning","getPrefixCls","ConfigContext","customizePrefixCls","_props$className","_props$showArrow","collapsePanelClassName","RcCollapse","_React$useContext","_props$bordered","bordered","ghost","iconPosition","expandIconPosition","getIconPosition","collapseMotion","motionAppear","panelProps","RightOutlined","rotate","_a","childProps","omit","_ref$prefixCls","loadingIcon","checkedChildren","unCheckedChildren","restProps","_useMergedState","useMergedState","_useMergedState2","innerChecked","setInnerChecked","triggerChange","newChecked","mergedChecked","switchClassName","KeyCode","LEFT","RIGHT","ret","__rest","s","p","prototype","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","customizeSize","_a$className","SizeContext","LoadingOutlined","Wave","insertExtraNode","RcSwitch","__ANT_SWITCH","isAdd","isDelete","isUser","isPermission","isFindUser","reduceModalState","ADD","PERMISSION","USER","DELETE","RoleDetails","defaultPermissions","roleEditing","permissions","setPermissions","pagiOptions","idRole","useLocation","idRoleConvert","split","getRoleById","getRoleByIdSuccess","deleteRoleFail","deleteUserInRoleSuccess","updatePermissionInRoleSuccess","updatePermissionInRoleFail","formatRoles","compareAndModifyTwoCollections","clearEditRole","modalState","columnsPages","dataIndex","CheckSquareTwoTone","twoToneColor","canActive","CheckOutlined","changePermission","CloseOutlined","updatedRole","updateListRole","per","permission_ids","updatePermissionInRole","roleId","columnsUsers","DeleteOutlined","deleteUserRole","deleteRole","dataSource","rowKey","scroll","y","renderUsers","renderPermissions","ConfigDeptService","getLoadListDeptServices","getLoadListDeptServicesSuccess","getLoadListDeptServicesFail","configDeptService","RESPONSE_CONFIG_DEPT_MESSAGE","ConfigDeptServiceHttp","ConfigDeptServiceSaga","valueEditType","valueEditSer","ConfigDeptSerAction","ConfigDeptSerlice","ConfigDeptSerSelector","selectedType","setSelectedType","selectedEditType","setSelectedEditType","selectedEditSer","setSelectedEditSer","errorEditType","setErrorEditType","errorEditSer","setErrorEditSer","desgRoom","setDesRoom","handleToggleType","handleClearType","handleSelectTypeAll","isSelected","service_code_list","object_type_list","object_type","type_patient","shortDepts","ConfigDeptSerConts","deprecatedPropType","validator","TableHeaderSor","thClasses","col","headerName","module","exports","obj","__esModule","SettingApiRoutes","TABLE","CREATE_UPDATE_TABLE","MANAGE_TYPE","GET_ALL_MANAGE_TYPE","GET_ALL_EXTEND_MANAGE_TYPE","CHECK_UNIQUE_MANAGE_TYPE","CHECK_UNIQUE_EXTEND_MANAGE_TYPE","GET_MANAGE_TYPE_BY_CODE","GET_ACTIVE_TYPE","CHANGE_ACTIVE_MANAGE_TYPE","CHANGE_ACTIVE_EXTEND_MANAGE_TYPE","DELETE_MANAGE_TYPE","DELETE_EXTEND_MANAGE_TYPE","CREATE_MANAGE_TYPE","CREATE_EXTEND_MANAGE_TYPE","UPDATE_MANAGE_TYPE","UPDATE_EXTEND_MANAGE_TYPE","CREATE_TABLE_FAIL","UPDATE_TABLE_FAIL","DELETE_TABLE_FAIL","CHANGE_STATUS_TITLE_SUCCESS","CHANGE_STATUS_TITLE_FAIL","CHECK_CODE_SUCCESS","DELETE_TITLE_SUCCESS","DELETE_TITLE_FAIL","CREATE_TITLE_SUCCESS","CREATE_TITLE_FAIL","UPDATE_TITLE_SUCCESS","UPDATE_TITLE_FAIL","CHANGE_STATUS_POSITION_SUCCESS","CHANGE_STATUS_POSITION_FAIL","DELETE_POSITION_SUCCESS","DELETE_POSITION_FAIL","CREATE_POSITION_SUCCESS","CREATE_POSITION_FAIL","UPDATE_POSITION_SUCCESS","UPDATE_POSITION_FAIL","CHANGE_STATUS_GROUP_SERVICE_SUCCESS","CHANGE_STATUS_GROUP_SERVICE_FAIL","DELETE_GROUP_SERVICE_SUCCESS","DELETE_GROUP_SERVICE_FAIL","CREATE_GROUP_SERVICE_SUCCESS","CREATE_GROUP_SERVICE_FAIL","UPDATE_GROUP_SERVICE_SUCCESS","UPDATE_GROUP_SERVICE_FAIL","CHANGE_STATUS_SERVICE_SUCCESS","CHANGE_STATUS_SERVICE_FAIL","DELETE_SERVICE_SUCCESS","DELETE_SERVICE_FAIL","CREATE_SERVICE_SUCCESS","CREATE_SERVICE_FAIL","UPDATE_SERVICE_SUCCESS","UPDATE_SERVICE_FAIL","CHANGE_STATUS_DEPARTMENT_TYPE_SUCCESS","CHANGE_STATUS_DEPARTMENT_TYPE_FAIL","DELETE_DEPARTMENT_TYPE_SUCCESS","DELETE_DEPARTMENT_TYPE_FAIL","CREATE_DEPARTMENT_TYPE_SUCCESS","CREATE_DEPARTMENT_TYPE_FAIL","UPDATE_DEPARTMENT_TYPE_SUCCESS","UPDATE_DEPARTMENT_TYPE_FAIL","CHANGE_STATUS_DEPARTMENT_SUCCESS","CHANGE_STATUS_DEPARTMENT_FAIL","CREATE_DEPARTMENT_FAIL","CHANGE_STATUS_FACULTY_SUCCESS","CHANGE_STATUS_FACULTY_FAIL","DELETE_FACULTY_SUCCESS","DELETE_FACULTY_FAIL","CREATE_FACULTY_SUCCESS","CREATE_FACULTY_FAIL","UPDATE_FACULTY_SUCCESS","UPDATE_FACULTY_FAIL","ButtonTitle","ModalConfirm","rejectMethod","confirm","setConfirm","DialogKey","DELETE_PATIENT","CHANGE_STATUS_PATIENT","UPDATE","SAVE","setConfirmTitle","buttonTitle","onExited","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","desc","set","unsupportedProp","propName","location","propFullName","configApiRouteWithManageType","modifyRequestBody","manageTypeInfo","requestBody","list_value_type_id","apiUrl","deletetType","checkType","Code","Id","specialistCode","enumerable","_utils","require","requirePropFactory","componentNameInError","roomsUltraSound","roomsEndoscopy","combineRooms","RoomFormSlice","getRoomAllSuccess","getRoomAllFailure","getRoomUltraSound","getRoomUltraSoundSuccess","getRoomUltraSoundFailure","getRoomEndoscopy","getRoomEndoscopySuccess","getRoomEndoscopyFailure","getCombineRoom","getCombineRoomSuccess","getCombineRoomFailure","selectRoomState","roomState","selectRoomsUltraSound","selectRoomCombine","DilogTitle","PatientStatus","ButtonToolTip","LocationTypes","createStyles","backdrop","drawer","deptsInGroup","getGroupsSuccess","getGroupsFailure","getGroupByIdFailure","getGroupByCodeSuccess","getGroupByCodeFailure","getDeptInGroupSuccess","getDeptInGroupFailure","setGroup","CHECK_UNIQUE_TABLE_SUCCESS","CHECK_UNIQUE_TABLE_FAIL","roomRequest","RoomHttp","roomRequestUltraSound","every","flatten","tableFormSlice","selectDomain","deptGroup","selectState","selectGroups","selectGroup","selectDeptsInGroup","STableHeaderSort","sortable","_interopRequireDefault","_interopRequireWildcard","_default","RoomApiRoutes","Promise","changeActiveRoom","moment","addedDate","_date","newDate","dateTime","format","DEFAULT_FORMAT_DATE","today","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","forEach","hourFormat","_idTime","date","minutes","getTime","DEFAULT_FORMAT_OUT_TIME","getCurrentTime","seconds"],"mappings":"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","file":"static/js/5.8460e62c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nimport { RootState } from 'store/core/types';\r\nimport { initialState } from './slice';\r\n\r\nconst selectTableState = (state: RootState) => state.table || initialState;\r\n\r\nexport const selectError = createSelector(\r\n  [selectTableState],\r\n  tableState => tableState.error,\r\n);\r\n\r\nexport const selectSuccess = createSelector(\r\n  [selectTableState],\r\n  tableState => tableState.success,\r\n);\r\n\r\nexport const selectLoading = createSelector(\r\n  [selectTableState],\r\n  tableState => tableState.loading,\r\n);\r\n\r\nexport const selectTable = createSelector(\r\n  [selectTableState],\r\n  tableState => tableState.tables,\r\n);\r\n\r\nexport const selectTableInfo = createSelector(\r\n  [selectTableState],\r\n  tableState => tableState.tableInfo,\r\n);\r\n\r\nexport const selectListTableCallAble = createSelector(\r\n  [selectTableState],\r\n  tableState => tableState.listTableCallAble,\r\n);\r\n","import { call, put, takeLatest, all } from 'redux-saga/effects';\r\nimport { actions } from './slice';\r\nimport { TableHttp } from '../services/table.http';\r\nconst tableRequest = new TableHttp();\r\n\r\nexport function* getTableAll(api, action) {\r\n  const response = yield call(api.getTableAll, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getTableAllSuccess(response.data));\r\n    } else {\r\n      yield put(actions.getTableAllFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getTableAllFailure(err));\r\n  }\r\n}\r\n\r\nexport function* getTableWithId(api, action) {\r\n  const response = yield call(api.getTableWithId, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getTableWithIdSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.getTableWithIdFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getTableWithIdFailure(err));\r\n  }\r\n}\r\n\r\nexport function* createTable(api, action) {\r\n  const response = yield call(api.createTable, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.createTableSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.createTableFailure(response.data.message));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.createTableFailure(err));\r\n  }\r\n}\r\n\r\nexport function* updateTable(api, action) {\r\n  const response = yield call(api.updateTable, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.updateTableSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.updateTableFailure(response.data.message));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.updateTableFailure(err));\r\n  }\r\n}\r\n\r\nexport function* deleteTable(api, action) {\r\n  const response = yield call(api.deleteTable, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.deleteTableSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.deleteTableFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.deleteTableFailure(err));\r\n  }\r\n}\r\n\r\nexport function* callTableAble(api, action) {\r\n  const response = yield call(api.callTableAble, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.callTableAbleSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.callTableAbleFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.callTableAbleFailure(err));\r\n  }\r\n}\r\n\r\nexport function* TableSaga() {\r\n  yield all([\r\n    yield takeLatest(actions.getTableAll.type, getTableAll, tableRequest),\r\n    yield takeLatest(actions.getTableWithId.type, getTableWithId, tableRequest),\r\n    yield takeLatest(actions.createTable.type, createTable, tableRequest),\r\n    yield takeLatest(actions.updateTable.type, updateTable, tableRequest),\r\n    yield takeLatest(actions.deleteTable.type, deleteTable, tableRequest),\r\n    yield takeLatest(actions.callTableAble.type, callTableAble, tableRequest),\r\n  ]);\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { HttpRequest } from 'utils/request';\r\nimport { APP_CONSTANT } from 'store/common/constants/common.constant';\r\nimport { TableApiRoutes, defaultFilter } from '../constants/table.constant';\r\n\r\nexport interface TableModel {\r\n  id?: string;\r\n  code: string;\r\n  name: string;\r\n  type: number;\r\n  deviceCode: string;\r\n  deviceType: string;\r\n  computerIP: string;\r\n  areaCode: string;\r\n}\r\n\r\nexport class TableHttp {\r\n  request: any;\r\n  constructor(endPoint = APP_CONSTANT.API.ENDPOINT) {\r\n    this.request = new HttpRequest(endPoint).request;\r\n  }\r\n\r\n  private converRequestTable = (table: TableModel) => {\r\n    return {\r\n      code: table.code,\r\n      name: table.name,\r\n      type: table.type,\r\n      device_code: table.deviceCode,\r\n      device_type: table.deviceType,\r\n      computer_ip: table.computerIP,\r\n      area_code: table.areaCode,\r\n    };\r\n  };\r\n\r\n  public getTableAll = (filter): Promise<any> => {\r\n    return this.request.post(TableApiRoutes.GET_ALL_TABLE, {\r\n      draw: 0,\r\n      start: filter.page * filter.rowsPerPage,\r\n      length: filter.rowsPerPage,\r\n      order: [\r\n        {\r\n          column: 0,\r\n          dir: '',\r\n        },\r\n      ],\r\n      columns: defaultFilter,\r\n      search: {\r\n        value: filter.search,\r\n        regex: true,\r\n      },\r\n    });\r\n  };\r\n\r\n  public getTableWithId = (id: string): Promise<any> => {\r\n    return this.request.get(TableApiRoutes.GET_BY_ID + '?id=' + id);\r\n  };\r\n\r\n  public createTable = (table: any): Promise<any> => {\r\n    return this.request.post(\r\n      TableApiRoutes.CREATE_TABLE,\r\n      this.converRequestTable(table),\r\n    );\r\n  };\r\n\r\n  public updateTable = ({ table, id }: any): Promise<any> => {\r\n    return this.request.post(\r\n      TableApiRoutes.UPDATE_TABLE + '/' + id,\r\n      this.converRequestTable(table),\r\n    );\r\n  };\r\n\r\n  public deleteTable = (id: string): Promise<any> => {\r\n    return this.request.post(TableApiRoutes.DELETE_TABLE + id);\r\n  };\r\n\r\n  public callTableAble = (): Promise<any> => {\r\n    return this.request(TableApiRoutes.CALL_TABLE);\r\n  };\r\n\r\n  public checkUniqueTable = ({ id, code }: any): Promise<any> => {\r\n    return this.request.post(TableApiRoutes.CHECK_UNIQUE, {\r\n      id,\r\n      code,\r\n    });\r\n  };\r\n}\r\n","import { HttpRequest, configRequest } from 'utils/request';\r\nimport { APP_CONSTANT } from 'store/common/constants/common.constant';\r\nimport { ApiRoute } from '../constants/department.constant';\r\n\r\nexport class DepartmentHttp {\r\n  request: any;\r\n  constructor(endPoint = APP_CONSTANT.API.DEPT) {\r\n    this.request = new HttpRequest(endPoint).request;\r\n  }\r\n  getDepts = (filter): Promise<any> =>\r\n    this.request.get(ApiRoute.DEPT, configRequest(filter));\r\n\r\n  getDeptById = (id: string): Promise<any> =>\r\n    this.request.get(ApiRoute.DEPT + '/' + id);\r\n\r\n  createDept = (dept: any): Promise<any> =>\r\n    this.request.post(ApiRoute.DEPT, { ...configRequest(dept) });\r\n\r\n  updateDept = ({ id, dept }): Promise<any> =>\r\n    this.request.put(ApiRoute.DEPT + '/' + id, { ...configRequest(dept) });\r\n\r\n  deleteDept = (id: string): Promise<any> =>\r\n    this.request.delete(ApiRoute.DEPT + '/' + id);\r\n\r\n  changeActive = ({ id, is_active }): Promise<any> => {\r\n    return this.request.post(ApiRoute.DEPT_STATUS, { id, is_active });\r\n  };\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as AuthSlice from 'store/auth/shared/slice';\r\nimport * as AuthSelector from 'store/auth/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AuthSaga } from 'store/auth/shared/saga';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { EMPTY_MESSAGE } from 'store/common/constants/common.constant';\r\nimport { ModalFindUser } from './ModalFindUser';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\n\r\nexport const colUserInRole: any[] = [\r\n  { id: 'no', label: '#', minWidth: 50 },\r\n  { id: 'user_name', label: 'Tên đăng nhập', minWidth: 120 },\r\n  { id: 'code', label: 'Mã nhân viên', minWidth: 120 },\r\n  { id: 'name', label: 'Tên nhân viên', minWidth: 120 },\r\n  { id: 'is_active', label: 'Trạng thái', minWidth: 120 },\r\n  { id: 'actions', label: 'Xoá người dùng', minWidth: 200 },\r\n];\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: '300px',\r\n    maxHeight: '80vh',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport function ModalUserInRole({ open, onClose }) {\r\n  useInjectReducer({ key: AuthSlice.sliceKey, reducer: AuthSlice.reducer });\r\n  useInjectSaga({ key: AuthSlice.sliceKey, saga: AuthSaga });\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const role = useSelector(AuthSelector.selectRoleEditing);\r\n  const [order, setOrder] = useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = useState<any>('');\r\n  const [search, setSearch] = useState<boolean>(false);\r\n\r\n  const deleteUserInRole = (id: string) => {\r\n    const activeUsers: string[] = role.users.filter(user => user.id !== id).map(({ id }) => id);\r\n    dispatch( AuthSlice.actions.deleteUserInRole({\r\n      id: role.id,\r\n      activeUser: activeUsers.length ? activeUsers : [],\r\n      inActiveUser: [id],\r\n    }));\r\n  };\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={colUserInRole}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (_.isEmpty(role) || !role.users.length) {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={colUserInRole.length}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n    const tableData: any[] = AppHelper.stableSort(\r\n      role.users,\r\n      AppHelper.getComparator(order, orderBy),\r\n    );\r\n    return tableData.map((row, idx) => {\r\n      const user = _.cloneDeep(row);\r\n      return (\r\n        <>\r\n        <TableRow key={row.id}>\r\n          {colUserInRole.map(column => {\r\n            const value = user[column.id];\r\n            if (column.id === 'no') {\r\n              return <TableCell key={column.id}>{idx + 1}</TableCell>;\r\n            }\r\n            if (column.id === 'is_active') {\r\n              return (\r\n                <TableCell key={column.id}>\r\n                  <Tooltip title=\"\" enterDelay={500} leaveDelay={200}>\r\n                    <i\r\n                      style={{\r\n                        color: value ? '#4caf50' : '#ff0000',\r\n                        fontSize: '16px',\r\n                      }}\r\n                      className={`fa fa-${value ? 'check' : 'times'}-circle`}\r\n                      aria-hidden=\"true\"\r\n                    ></i>\r\n                  </Tooltip>\r\n                </TableCell>\r\n              );\r\n            }\r\n            if (column.id === 'actions') {\r\n              return (\r\n                <TableCell key={column.id}>\r\n                   <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100} onClick={() => {\r\n                     deleteUserInRole(user.id);\r\n                     setSearch(false);\r\n                   }}>\r\n                    <button\r\n                      className=\"btn btn-danger btn-xs mx-2\"\r\n                    >\r\n                      <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                  </Tooltip>\r\n                </TableCell>\r\n              );\r\n            }\r\n            return (\r\n              <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n            );\r\n          })}\r\n        </TableRow>\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth={'md'}\r\n      open={open}\r\n      onClose={onClose}\r\n      disableBackdropClick\r\n    >\r\n      <DialogContent>\r\n        {search && (\r\n          <ModalFindUser\r\n            open={true}\r\n            onClose={() => setSearch(false)}\r\n          />\r\n        )}\r\n        <form onSubmit={(e: React.FormEvent) => e.preventDefault()}>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 d-flex justify-content-between pb-3\">\r\n              <h4 className=\"d-block pb-2\">Danh Sách Người Dùng Quyền - { role ? role.description : '' }</h4>\r\n            </div>\r\n            <div className=\"col-sm-12 p-0\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </div>\r\n            <div className=\"col-sm-12 pt-2 d-flex justify-content-end\">\r\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n              <button type=\"button\" className=\"btn btn-primary ml-3\" onClick={() => setSearch(true)}>Thêm người dùng</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport { blue, green } from '@material-ui/core/colors';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Order } from 'utils/app.helper';\r\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nexport const useStyles = makeStyles({\r\n  th: {\r\n    fontWeight: 600,\r\n    textTransform: 'capitalize',\r\n    backgound: 'rgb(26, 138, 226)',\r\n    color: '#fff',\r\n    '& .MuiTableSortLabel-active': {\r\n      color: '#0000008a',\r\n      '& .MuiTableSortLabel-icon': {\r\n        color: '#0000008a !important',\r\n      },\r\n    },\r\n    '& .MuiTableSortLabel-root:hover': {\r\n      color: '#0000008a',\r\n    },\r\n  },\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: '300px',\r\n    maxHeight: '80vh',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport interface TableSortCheckProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof any,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n  rowCount: number;\r\n  cols: any[];\r\n}\r\n\r\nexport const BlueCheckbox = withStyles({\r\n  root: {\r\n    color: blue[400],\r\n    '&$checked': {\r\n      color: blue[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport const GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport default function TableSortCheck(props: TableSortCheckProps) {\r\n  const classes = useStyles();\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n    cols,\r\n  } = props;\r\n  const createSortHandler = (property: keyof any) => (\r\n    event: React.MouseEvent<unknown>,\r\n  ) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell\r\n        padding=\"checkbox\"\r\n        className={classes.th}\r\n        style={{\r\n          backgroundColor: 'rgb(26, 138, 226)',\r\n          color: '#fff',\r\n          padding: '16px',\r\n        }}\r\n      >\r\n        <GreenCheckbox\r\n          indeterminate={numSelected > 0 && numSelected < rowCount}\r\n          checked={rowCount > 0 && numSelected === rowCount}\r\n          onChange={onSelectAllClick}\r\n          inputProps={{ 'aria-label': 'select all desserts' }}\r\n        />\r\n      </TableCell>\r\n      {cols.map(headCell => (\r\n        <TableCell\r\n          className={classes.th}\r\n          key={headCell.id}\r\n          align={headCell.numeric ? 'right' : 'left'}\r\n          padding={headCell.disablePadding ? 'none' : 'default'}\r\n          sortDirection={orderBy === headCell.id ? order : false}\r\n          style={{\r\n            minWidth: headCell.minWidth,\r\n            backgroundColor: '#0092de',\r\n            color: '#fff',\r\n            padding: '16px',\r\n          }}\r\n        >\r\n          <TableSortLabel\r\n            active={orderBy === headCell.id}\r\n            direction={orderBy === headCell.id ? order : 'asc'}\r\n            onClick={createSortHandler(headCell.id)}\r\n          >\r\n            {headCell.label}\r\n            {orderBy === headCell.id ? (\r\n              <span className={classes.visuallyHidden}>\r\n                {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n              </span>\r\n            ) : null}\r\n          </TableSortLabel>\r\n        </TableCell>\r\n      ))}\r\n    </TableRow>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as AuthSlice from 'store/auth/shared/slice';\r\nimport * as AuthSelector from 'store/auth/shared/selectors';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AuthSaga } from 'store/auth/shared/saga';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport {\r\n  EMPTY_MESSAGE,\r\n  rowsPerArray,\r\n} from 'store/common/constants/common.constant';\r\nimport { useStyles } from './ModalUserInRole';\r\nimport { useForm } from 'react-hook-form';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortCheck, { BlueCheckbox } from 'app/components/TableSortCheck';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonSearch = styled.button`\r\n  color: red;\r\n  background: #fff;\r\n  height: 37px;\r\n  border: #ccc;\r\n`;\r\n\r\nexport const colUserInRole: any[] = [\r\n  { id: 'user_name', label: 'Tên đăng nhập', minWidth: 120 },\r\n  { id: 'code', label: 'Mã nhân viên', minWidth: 120 },\r\n  { id: 'full_name', label: 'Tên nhân viên', minWidth: 120 },\r\n  { id: 'is_active', label: 'Trạng thái', minWidth: 120 },\r\n];\r\n\r\nexport function ModalFindUser({ open, onClose }) {\r\n  useInjectReducer({ key: AuthSlice.sliceKey, reducer: AuthSlice.reducer });\r\n  useInjectSaga({ key: AuthSlice.sliceKey, saga: AuthSaga });\r\n  const users = useSelector(AuthSelector.selectUsers);\r\n  const role = useSelector(AuthSelector.selectRoleEditing);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = useState<any>('');\r\n  const [selected, setSelected] = useState<string[]>([]);\r\n  const { handleSubmit, register, getValues } = useForm();\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  useEffect(() => {\r\n    dispatch(AuthSlice.actions.getListUser({}));\r\n    return () => {\r\n      dispatch(AuthSlice.actions.clearUsers());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSelected([]);\r\n  }, [users]);\r\n\r\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const renderSearch = () => {\r\n    return (\r\n      <form\r\n        className=\"btn-group d-flex align-items-center\"\r\n        onSubmit={handleSubmit(submitSearch)}\r\n      >\r\n        <label className=\"m-0\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Tìm Người Dùng\"\r\n            className=\"form-control form-control-sm\"\r\n            aria-controls=\"titleTable\"\r\n            ref={register()}\r\n            name=\"fullName\"\r\n          />\r\n        </label>\r\n        <ButtonSearch className=\"btn btn-info m-0 ml-2\" type=\"submit\">\r\n          <i className=\"fa fa-search\" />\r\n        </ButtonSearch>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const submitSearch = ({ fullName }) => {\r\n    dispatch(\r\n      AuthSlice.actions.getListUser({\r\n        fullName,\r\n        pageNumber: 1,\r\n        pageSize: 10,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked && !_.isEmpty(users) && users.data.length) {\r\n      const newSelecteds = users.data.map((n: any) => n.id);\r\n      return setSelected(newSelecteds);\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableSortCheck\r\n        cols={colUserInRole}\r\n        numSelected={selected.length}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        onSelectAllClick={handleSelectAllClick}\r\n        onRequestSort={handleRequestSort}\r\n        rowCount={\r\n          _.isEmpty(users) || !users.data.length ? 10 : users.data.length\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, pageNumber: number) => {\r\n    let newPagi = {\r\n      pageSize: users.page_size,\r\n      pageNumber: pageNumber + 1,\r\n      search: getValues('fullName'),\r\n    };\r\n    dispatch(AuthSlice.actions.getListUser(newPagi));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    let newPagi = {\r\n      pageSize: +event.target.value,\r\n      pageNumber: 1,\r\n      fullName: getValues('fullName'),\r\n    };\r\n    dispatch(AuthSlice.actions.getListUser(newPagi));\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(users) && users.data.length) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          labelRowsPerPage=\"Hiển Thị\"\r\n          count={users.total_records}\r\n          page={users?.page_number - 1}\r\n          rowsPerPage={users?.page_size}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (_.isEmpty(users) || !users.data.length) {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={colUserInRole.length + 1}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n    const tableData: any[] = AppHelper.stableSort(\r\n      users.data,\r\n      AppHelper.getComparator(order, orderBy),\r\n    );\r\n    return tableData.map((row, idx) => {\r\n      const user = _.cloneDeep(row);\r\n      const isItemSelected = isSelected(user.id);\r\n      return (\r\n        <>\r\n          <TableRow\r\n            key={row.id}\r\n            hover\r\n            onClick={event => handleClick(event, user.id)}\r\n            role=\"checkbox\"\r\n            aria-checked={isItemSelected}\r\n            tabIndex={-1}\r\n            selected={isItemSelected}\r\n          >\r\n            <TableCell padding=\"checkbox\" align=\"center\">\r\n              <BlueCheckbox\r\n                checked={isItemSelected}\r\n                inputProps={{ 'aria-labelledby': 'id' }}\r\n              />\r\n            </TableCell>\r\n            {colUserInRole.map(column => {\r\n              const value = user[column.id];\r\n              if (column.id === 'is_active') {\r\n                return (\r\n                  <TableCell key={column.id} align=\"center\">\r\n                    <Tooltip title=\"\" enterDelay={500} leaveDelay={200}>\r\n                      <i\r\n                        style={{\r\n                          color: value ? '#4caf50' : '#ff0000',\r\n                          fontSize: '16px',\r\n                        }}\r\n                        className={`fa fa-${value ? 'check' : 'times'}-circle`}\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  const addUserToRole = async () => {\r\n    if (!selected.length) {\r\n      return console.log('Error');\r\n    }\r\n    const currentUser = role.users;\r\n    if (!currentUser || !currentUser.length) {\r\n      await dispatch(\r\n        AuthSlice.actions.addUserInRole({\r\n          id: role.id,\r\n          activeUser: selected,\r\n          inActiveUser: [],\r\n        }),\r\n      );\r\n    } else {\r\n      await dispatch(\r\n        AuthSlice.actions.addUserInRole({\r\n          id: role.id,\r\n          activeUser: [...selected, ...currentUser.map(({ id }) => id)],\r\n          inActiveUser: [],\r\n        }),\r\n      );\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth={'md'}\r\n      open={open}\r\n      onClose={onClose}\r\n      disableBackdropClick\r\n    >\r\n      <DialogContent>\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 d-flex justify-content-between pb-3\">\r\n              <h4 className=\"d-block pb-2\">Danh Sách Người Dùng</h4>\r\n              {renderSearch()}\r\n            </div>\r\n            <div className=\"col-sm-12 p-0\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n            <div className=\"col-sm-12 pt-2 d-flex justify-content-end mt-3\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                onClick={onClose}\r\n              >\r\n                Đóng\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary ml-3\"\r\n                onClick={addUserToRole}\r\n              >\r\n                Thêm vào quyền {role.name}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","export const DeptGroupApiRoutes = {\r\n  GROUP: '/api/Group',\r\n  GROUP_DEPT: '/api/Group/departments',\r\n};\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { DeptGroupApiRoutes } from '../constants';\r\nimport { HttpRequest, configRequest } from 'utils/request';\r\nimport { APP_CONSTANT } from 'store/common/constants/common.constant';\r\nimport * as _ from 'lodash';\r\nimport { isEmpty } from 'lodash';\r\nexport class DeptGroupHttp {\r\n  request: any;\r\n  constructor(endPoint = APP_CONSTANT.API.DEPT) {\r\n    this.request = new HttpRequest(endPoint).request;\r\n  }\r\n\r\n  getGroups = (filter): Promise<any> => {\r\n    return this.request.get(\r\n      DeptGroupApiRoutes.GROUP,\r\n      _.isEmpty(filter) ? {} : configRequest(filter),\r\n    );\r\n  };\r\n\r\n  createGroup = (group: any): Promise<any> =>\r\n    this.request.post(DeptGroupApiRoutes.GROUP, configRequest(group));\r\n\r\n  getGroupById = (id: string): Promise<any> =>\r\n    this.request.get(DeptGroupApiRoutes.GROUP + '/' + id);\r\n\r\n  getGroupByCode = (code: string): Promise<any> =>\r\n    this.request.get(DeptGroupApiRoutes.GROUP_DEPT + '/' + code);\r\n\r\n  updateGroup = ({ id, groupCode, groupName }): Promise<any> => {\r\n    return this.request.put(DeptGroupApiRoutes.GROUP + '/' + id, {\r\n      group_code: groupCode,\r\n      group_name: groupName,\r\n    });\r\n  };\r\n\r\n  deleteGroup = (id: string): Promise<any> =>\r\n    this.request.delete(DeptGroupApiRoutes.GROUP + '/' + id);\r\n\r\n  addDeptToGroup = ({ id, depts, departmentVirtualCode }): Promise<any> => {\r\n    return this.request.put(DeptGroupApiRoutes.GROUP_DEPT + '/' + id, {\r\n      department_code: depts,\r\n      department_virtual_code: departmentVirtualCode.code,\r\n    });\r\n  };\r\n\r\n  getDeptInGroup = (code: string): Promise<any> =>\r\n    this.request.get(DeptGroupApiRoutes.GROUP_DEPT + '/' + code);\r\n}\r\n","/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete, {\r\n  createFilterOptions,\r\n} from '@material-ui/lab/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst TekMultiSelect = ({\r\n  items,\r\n  selectedValues,\r\n  label,\r\n  placeholder,\r\n  selectAllLabel,\r\n  limitTags,\r\n  onToggleOption,\r\n  onClearOptions,\r\n  onSelectAll,\r\n  getOptionLabel,\r\n}) => {\r\n  const allSelected = items.length === selectedValues.length;\r\n  const handleToggleSelectAll = () => {\r\n    onSelectAll && onSelectAll(!allSelected);\r\n  };\r\n\r\n  const handleChange = (event, selectedOptions, reason) => {\r\n    if (reason === 'select-option' || reason === 'remove-option') {\r\n      if (selectedOptions.find(option => option.value === 'select-all')) {\r\n        handleToggleSelectAll();\r\n      } else {\r\n        onToggleOption && onToggleOption(selectedOptions);\r\n      }\r\n    } else if (reason === 'clear') {\r\n      onClearOptions && onClearOptions();\r\n    }\r\n  };\r\n  const optionRenderer = (option, { selected }) => {\r\n    const selectAllProps =\r\n      option.value === 'select-all' // To control the state of 'select-all' checkbox\r\n        ? { checked: allSelected }\r\n        : {};\r\n    return (\r\n      <>\r\n        <Checkbox\r\n          color=\"primary\"\r\n          icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n          checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n          style={{ marginRight: 8 }}\r\n          checked={selected}\r\n          {...selectAllProps}\r\n        />\r\n        {getOptionLabel(option)}\r\n      </>\r\n    );\r\n  };\r\n  const inputRenderer = params => (\r\n    <TextField\r\n      {...params}\r\n      label={label}\r\n      placeholder={placeholder}\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n  const getOptionSelected = (option, anotherOption) =>\r\n    option.value === anotherOption.value;\r\n  const filter = createFilterOptions();\r\n  return (\r\n    <Autocomplete\r\n      multiple\r\n      size=\"small\"\r\n      limitTags={limitTags}\r\n      options={items}\r\n      value={selectedValues}\r\n      disableCloseOnSelect\r\n      getOptionLabel={getOptionLabel}\r\n      getOptionSelected={getOptionSelected}\r\n      noOptionsText={'Empty'}\r\n      filterOptions={(options, params) => {\r\n        const filtered = filter(options, params);\r\n        return [{ label: selectAllLabel, value: 'select-all' }, ...filtered];\r\n      }}\r\n      onChange={handleChange}\r\n      renderOption={optionRenderer}\r\n      renderInput={inputRenderer}\r\n    />\r\n  );\r\n};\r\n\r\nTekMultiSelect.defaultProps = {\r\n  limitTags: 4,\r\n  items: [],\r\n  selectedValues: [],\r\n  getOptionLabel: value => value,\r\n};\r\n\r\nexport default TekMultiSelect;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      limit = config.limit,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      stringify = config.stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue,\n        getOptionLabel = _ref.getOptionLabel;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabelProp = _props$getOptionLabel === void 0 ? function (option) {\n    return option;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value;\n  var id = useId(idProp);\n  var getOptionLabel = getOptionLabelProp;\n\n  if (process.env.NODE_ENV !== 'production') {\n    getOptionLabel = function getOptionLabel(option) {\n      var optionLabel = getOptionLabelProp(option);\n\n      if (typeof optionLabel !== 'string') {\n        var erroneousReturn = optionLabel === undefined ? 'undefined' : \"\".concat(_typeof(optionLabel), \" (\").concat(optionLabel, \")\");\n        console.error(\"Material-UI: The `getOptionLabel` method of \".concat(componentName, \" returned \").concat(erroneousReturn, \" instead of a string for \").concat(JSON.stringify(option), \".\"));\n      }\n\n      return optionLabel;\n    };\n  }\n\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState = React.useState(null),\n      anchorEl = _React$useState[0],\n      setAnchorEl = _React$useState[1];\n\n  var _React$useState2 = React.useState(-1),\n      focusedTag = _React$useState2[0],\n      setFocusedTag = _React$useState2[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      inputValue = _useControlled4[0],\n      setInputValue = _useControlled4[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _useControlled5 = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  }),\n      _useControlled6 = _slicedToArray(_useControlled5, 2),\n      open = _useControlled6[0],\n      setOpenState = _useControlled6[1];\n\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue,\n    getOptionLabel: getOptionLabel\n  }) : [];\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      var missingValue = (multiple ? value : [value]).filter(function (value2) {\n        return !options.some(function (option) {\n          return getOptionSelected(option, value2);\n        });\n      });\n\n      if (missingValue.length > 0) {\n        console.warn([\"Material-UI: The value provided to \".concat(componentName, \" is invalid.\"), \"None of the options match with `\".concat(missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0]), \"`.\"), 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      var nextFocusDisabled = disabledItemsFocusable ? false : option && (option.disabled || option.getAttribute('aria-disabled') === 'true');\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var setHighlightedIndex = useEventCallback(function (_ref2) {\n    var event = _ref2.event,\n        index = _ref2.index,\n        _ref2$reason = _ref2.reason,\n        reason = _ref2$reason === void 0 ? 'auto' : _ref2$reason;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  var changeHighlightedIndex = useEventCallback(function (_ref3) {\n    var event = _ref3.event,\n        diff = _ref3.diff,\n        _ref3$direction = _ref3.direction,\n        direction = _ref3$direction === void 0 ? 'next' : _ref3$direction,\n        _ref3$reason = _ref3.reason,\n        reason = _ref3$reason === void 0 ? 'auto' : _ref3$reason;\n\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason: reason,\n      event: event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  var syncHighlightedIndex = React.useCallback(function () {\n    if (!popupOpen) {\n      return;\n    }\n\n    var valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (!filterSelectedOptions && valueItem != null) {\n      var currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, function (val) {\n        return getOptionSelected(currentOption, val);\n      }) !== -1) {\n        return;\n      }\n\n      var itemIndex = findIndex(filteredOptions, function (optionItem) {\n        return getOptionSelected(optionItem, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, getOptionSelected, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  filteredOptions.length === 0, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n  React.useEffect(function () {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue, reason, details) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValue(newValue);\n  };\n\n  var isTouch = React.useRef(false);\n\n  var selectNewValue = function selectNewValue(event, option) {\n    var reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'select-option';\n    var origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    var reason = reasonProp;\n    var newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        var matches = newValue.filter(function (val) {\n          return getOptionSelected(option, val);\n        });\n\n        if (matches.length > 1) {\n          console.error([\"Material-UI: The `getOptionSelected` method of \".concat(componentName, \" do not handle the arguments correctly.\"), \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(option, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option: option\n    });\n\n    if (!disableCloseOnSelect) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event: event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event: event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          // Wait until IME is settled.\n          if (event.which === 229) {\n            break;\n          }\n\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            var option = filteredOptions[highlightedIndexRef.current];\n            var disabled = getOptionDisabled ? getOptionDisabled(option) : false; // We don't want to validate the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            var newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore the event when using the scrollbar with IE 11\n    if (listboxRef.current !== null && document.activeElement === listboxRef.current.parentElement) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    setHighlightedIndex({\n      event: event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = value.slice();\n      newValue.splice(index, 1);\n      handleValue(event, newValue, 'remove-option', {\n        option: value[index]\n      });\n    };\n  };\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    var indexBy = new Map();\n    var warn = false;\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(\"Material-UI: The options provided combined with the `groupBy` method of \".concat(componentName, \" returns duplicated headers.\"), 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index: index,\n          group: group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref4) {\n      var index = _ref4.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref5) {\n      var index = _ref5.index,\n          option = _ref5.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'inherit']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   */\n  inset: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    paddingBottom: 0,\r\n    '& h2': {\r\n      fontSize: '1.3rem !important',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n});\r\n\r\ninterface ModalProps {\r\n  id: string;\r\n  title: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  confirmMethod: (id?: string) => any;\r\n  rejectMethod?: (arg: any) => any;\r\n}\r\n\r\nexport const ConfirmDeleteRole = ({\r\n  id,\r\n  title,\r\n  open,\r\n  onClose,\r\n  confirmMethod,\r\n}: ModalProps) => {\r\n  const classes = useStyles();\r\n\r\n  const onOK = () => {\r\n    confirmMethod(id);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      disableBackdropClick={true}\r\n    >\r\n      <DialogTitle classes={classes}>{'Thông báo xác nhận'}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {title}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={onClose}\r\n          color=\"secondary\"\r\n          classes={{ root: 'btn-default btn-danger' }}\r\n        >\r\n          Đóng\r\n        </Button>\r\n        <Button\r\n          onClick={onOK}\r\n          color=\"primary\"\r\n          classes={{ root: 'btn-default btn-primary t-btn-primary' }}\r\n        >\r\n          Xóa\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nexport { createFilterOptions };\nexport var styles = function styles(theme) {\n  var _option;\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      },\n\n      /* Avoid double tap issue on iOS */\n      '@media (pointer: fine)': {\n        '&:hover $clearIndicatorDirty': {\n          visibility: 'visible'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4\n      },\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '4px 4px 5px'\n        },\n        '& $input:first-child': {\n          padding: '3px 0 6px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9px 4px'\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      }\n    },\n\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n\n    },\n\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2\n    },\n\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: _extends({}, theme.typography.body1, {\n      overflow: 'hidden',\n      margin: '4px 0'\n    }),\n\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0',\n      maxHeight: '40vh',\n      overflow: 'auto'\n    },\n\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, _defineProperty(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), _defineProperty(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), _defineProperty(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[aria-disabled=\"true\"]', {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }), _option),\n\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0,\n      '& $option': {\n        paddingLeft: 24\n      }\n    }\n  };\n};\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"anchorEl\", \"open\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", other);\n}\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(ArrowDropDownIcon, null);\n\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      classes = props.classes,\n      className = props.className,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      getOptionSelected = props.getOptionSelected,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      options = props.options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponentProp = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable no-unused-vars */\n\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: clsx(classes.tag, size === 'small' && classes.tagSizeSmall),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.tag,\n        key: startAdornment.length\n      }, getLimitTagsText(more)));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: params.key\n    }, /*#__PURE__*/React.createElement(ListSubheader, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.group), /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var renderOption = renderOptionProp || getOptionLabel;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return /*#__PURE__*/React.createElement(\"li\", _extends({}, optionProps, {\n      className: classes.option\n    }), renderOption(option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    }));\n  };\n\n  var hasClearIcon = !disableClearable && !disabled;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: clsx(classes.root, className, focused && classes.focused, fullWidth && classes.fullWidth, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    fullWidth: true,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: clsx(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: clsx(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: _extends({\n      className: clsx(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? /*#__PURE__*/React.createElement(PopperComponent, {\n    className: clsx(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, /*#__PURE__*/React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(ListboxComponent, _extends({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        group: option.group,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the input's text will be cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default close icon.\n   */\n  closeIcon: PropTypes.node,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * Used to determine if an option is selected, considering the current value.\n   * Uses strict equality by default.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   */\n  limitTags: PropTypes.number,\n\n  /**\n   * The component used to render the listbox.\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text will be selected on focus.\n   * It helps the user clear the selected value.\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the autocomplete.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","/* eslint-disable prettier/prettier */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { createSlice } from 'store/core/@reduxjs/toolkit';\r\nimport {\r\n  RESPONSE_CONSTANT,\r\n  RESPONSE_MESSAGE,\r\n  SettingManageType,\r\n  SettingManageKey,\r\n} from '../constants/setting.constant';\r\nimport { AppHelper } from 'utils/app.helper';\r\nexport interface SettingState {\r\n  cacheSetting?: any;\r\n  loading?: boolean;\r\n  success?: any;\r\n  error?: any;\r\n  settingList: any;\r\n  settingType: any;\r\n  speaciaList: any;\r\n}\r\n\r\nexport const initialState: SettingState = {\r\n  cacheSetting: null,\r\n  loading: false,\r\n  success: null,\r\n  error: null,\r\n  settingList: {},\r\n  settingType: {},\r\n  speaciaList: {},\r\n};\r\n\r\nconst settingFormSlice = createSlice({\r\n  name: 'setting',\r\n  initialState,\r\n  reducers: {\r\n    getAllManageType(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getAllManageTypeSuccess(state, action) {\r\n      state.settingList = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getAllManageTypeFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getManageType(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getManageTypeSuccess(state, action) {\r\n      state.settingType = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getManageTypeFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getSpecialist(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getSpecialistSuccess(state, action) {\r\n      state.speaciaList = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getSpecialistFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    createManageType(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    createManageTypeSuccess(state, action: any) {\r\n      state.loading = false;\r\n      state.success = new ReducerHelper().setCreateResponse(\r\n        action.payload.manageType,\r\n      );\r\n    },\r\n\r\n    createManageTypeFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    deleteManageType(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    deleteManageTypeSuccess(state, action: any) {\r\n      state.loading = false;\r\n      state.success = new ReducerHelper().setDeleteResponse(\r\n        action.payload.manageType,\r\n      );\r\n    },\r\n\r\n    deleteManageTypeFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    updateManageType(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    updateManageTypeSuccess(state, action: any) {\r\n      state.loading = false;\r\n      state.success = new ReducerHelper().setUpdateResponse(\r\n        action.payload.manageType,\r\n      );\r\n    },\r\n\r\n    updateManageTypeFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    changeManageTypeActive(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    changeManageTypeActiveSuccess(state, action) {\r\n      state.loading = false;\r\n      state.success = new ReducerHelper().setChangeStatusResponse(\r\n        action.payload.manageType,\r\n      );\r\n    },\r\n\r\n    changeManageTypeActiveFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    setTempManageType(state, action) {\r\n      state.cacheSetting = action.payload;\r\n    },\r\n\r\n    setError(state, action) {\r\n      state.error = action.payload;\r\n    },\r\n\r\n    setSuccess(state, action) {\r\n      state.success = action.payload;\r\n    },\r\n\r\n    clearSuccess(state) {\r\n      state.success = {};\r\n    },\r\n\r\n    clearError(state) {\r\n      state.error = {};\r\n    },\r\n\r\n    resetAll(state) {\r\n      state.loading = false;\r\n      state.success = null;\r\n      state.error = null;\r\n      state.settingList = {};\r\n      state.settingType = {};\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions, reducer, name: sliceKey } = settingFormSlice;\r\n\r\nclass ReducerHelper {\r\n  manageSettingType: any;\r\n  constructor() {\r\n    this.manageSettingType = {\r\n      [SettingManageType.Title]: SettingManageKey.TITLE,\r\n      [SettingManageType.Position]: SettingManageKey.POSITION,\r\n      [SettingManageType.Group]: SettingManageKey.GROUP_SERVICE,\r\n      [SettingManageType.Service]: SettingManageKey.SERVICE,\r\n      [SettingManageType.DepartmentType]: SettingManageKey.DEPARTMENT_TYPE,\r\n      [SettingManageType.Department]: SettingManageKey.DEPARTMENT,\r\n      [SettingManageType.Faculty]: SettingManageKey.FACULTY,\r\n    };\r\n  }\r\n  public setCreateResponse = (manageType: SettingManageType) => {\r\n    let currentType = this.manageSettingType[manageType];\r\n    let response: any = {\r\n      id: AppHelper.generateUUID() + Date.now(),\r\n      key: RESPONSE_CONSTANT[currentType]['CREATE_' + currentType + '_SUCCESS'],\r\n      message:\r\n        RESPONSE_MESSAGE[currentType]['CREATE_' + currentType + '_SUCCESS'],\r\n    };\r\n    return response;\r\n  };\r\n  public setUpdateResponse = (manageType: SettingManageType) => {\r\n    let currentType = this.manageSettingType[manageType];\r\n    let response: any = {\r\n      id: AppHelper.generateUUID() + Date.now(),\r\n      key: RESPONSE_CONSTANT[currentType]['UPDATE_' + currentType + '_SUCCESS'],\r\n      message:\r\n        RESPONSE_MESSAGE[currentType]['UPDATE_' + currentType + '_SUCCESS'],\r\n    };\r\n    return response;\r\n  };\r\n  public setUpdateErrorResponse = (manageType: SettingManageType) => {\r\n    let currentType = this.manageSettingType[manageType];\r\n    let response: any = {\r\n      id: AppHelper.generateUUID() + Date.now(),\r\n      key: RESPONSE_CONSTANT[currentType]['UPDATE_' + currentType + '_FAIL'],\r\n      message: RESPONSE_MESSAGE[currentType]['UPDATE_' + currentType + '_FAIL'],\r\n    };\r\n    return response;\r\n  };\r\n  public setDeleteResponse = (manageType: SettingManageType) => {\r\n    let currentType = this.manageSettingType[manageType];\r\n    let response: any = {\r\n      id: AppHelper.generateUUID() + Date.now(),\r\n      key: RESPONSE_CONSTANT[currentType]['DELETE_' + currentType + '_SUCCESS'],\r\n      message:\r\n        RESPONSE_MESSAGE[currentType]['DELETE_' + currentType + '_SUCCESS'],\r\n    };\r\n    return response;\r\n  };\r\n  public setChangeStatusResponse = (manageType: SettingManageType) => {\r\n    let currentType = this.manageSettingType[manageType];\r\n    let response: any = {\r\n      id: AppHelper.generateUUID() + Date.now(),\r\n      key:\r\n        RESPONSE_CONSTANT[currentType][\r\n          'CHANGE_STATUS_' + currentType + '_SUCCESS'\r\n        ],\r\n      message:\r\n        RESPONSE_MESSAGE[currentType][\r\n          'CHANGE_STATUS_' + currentType + '_SUCCESS'\r\n        ],\r\n    };\r\n    return response;\r\n  };\r\n}\r\n","import { call, put, takeLatest, all } from 'redux-saga/effects';\r\nimport { actions } from './slice';\r\nimport { SettingHttp } from '../services/setting.http';\r\nconst settingRequest = new SettingHttp();\r\n\r\n/* ManageType */\r\nexport function* getAllManageType(api, action) {\r\n  const response = yield call(api.getAllManageType, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getAllManageTypeSuccess(response.data.result.data));\r\n    } else {\r\n      yield put(actions.getAllManageTypeFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getAllManageTypeFailure(err));\r\n  }\r\n}\r\n\r\nexport function* getManageType(api, action) {\r\n  const response = yield call(api.getManageType, action.payload);\r\n  try {\r\n    yield put(actions.getManageTypeSuccess(response.data.result));\r\n  } catch (err) {\r\n    yield put(actions.getManageTypeFailure(err));\r\n  }\r\n}\r\n\r\nexport function* getSpecialist(api, action) {\r\n  const response = yield call(api.getSpecialist, action.payload);\r\n  try {\r\n    yield put(actions.getSpecialistSuccess(response.data.result.data));\r\n  } catch (err) {\r\n    yield put(actions.getSpecialistFailure(err));\r\n  }\r\n}\r\n\r\nexport function* changeManageTypeActive(api, action) {\r\n  const response = yield call(api.changeManageTypeActive, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.changeManageTypeActiveSuccess(action.payload));\r\n    } else {\r\n      yield put(actions.changeManageTypeActiveFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.changeManageTypeActiveFailure(err));\r\n  }\r\n}\r\n\r\nexport function* createManageType(api, action) {\r\n  const response = yield call(api.createManageType, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.createManageTypeSuccess(action.payload));\r\n    } else {\r\n      yield put(actions.createManageTypeFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.createManageTypeFailure(err));\r\n  }\r\n}\r\n\r\nexport function* deleteManageType(api, action) {\r\n  const response = yield call(api.deleteManageType, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.deleteManageTypeSuccess(action.payload));\r\n    } else {\r\n      yield put(actions.deleteManageTypeFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.deleteManageTypeFailure(err));\r\n  }\r\n}\r\n\r\nexport function* updateManageType(api, action) {\r\n  const response = yield call(api.updateManageType, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.updateManageTypeSuccess(action.payload));\r\n    } else {\r\n      yield put(actions.updateManageTypeFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.updateManageTypeFailure(err));\r\n  }\r\n}\r\n/* ManageType */\r\n\r\nexport function* SettingSaga() {\r\n  yield all([\r\n    /* ManageType */\r\n    yield takeLatest(\r\n      actions.getAllManageType.type,\r\n      getAllManageType,\r\n      settingRequest,\r\n    ),\r\n    yield takeLatest(\r\n      actions.createManageType.type,\r\n      createManageType,\r\n      settingRequest,\r\n    ),\r\n    yield takeLatest(\r\n      actions.updateManageType.type,\r\n      updateManageType,\r\n      settingRequest,\r\n    ),\r\n    yield takeLatest(\r\n      actions.deleteManageType.type,\r\n      deleteManageType,\r\n      settingRequest,\r\n    ),\r\n    yield takeLatest(actions.getManageType.type, getManageType, settingRequest),\r\n    yield takeLatest(actions.getSpecialist.type, getSpecialist, settingRequest),\r\n    yield takeLatest(\r\n      actions.changeManageTypeActive.type,\r\n      changeManageTypeActive,\r\n      settingRequest,\r\n    ),\r\n    /* ManageType */\r\n  ]);\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nimport { RootState } from 'store/core/types';\r\nimport { initialState } from './slice';\r\n\r\nconst selectSettingState = (state: RootState) => state.setting || initialState;\r\n\r\nexport const selectError = createSelector(\r\n  [selectSettingState],\r\n  setting => setting.error,\r\n);\r\n\r\nexport const selectSuccess = createSelector(\r\n  [selectSettingState],\r\n  setting => setting.success,\r\n);\r\n\r\nexport const selectLoading = createSelector(\r\n  [selectSettingState],\r\n  setting => setting.loading,\r\n);\r\n\r\nexport const selectSettingList = createSelector(\r\n  [selectSettingState],\r\n  setting => setting.settingList,\r\n);\r\n\r\nexport const selectSettingType = createSelector(\r\n  [selectSettingState],\r\n  setting => setting.settingType,\r\n);\r\n\r\nexport const selectSpeciaList = createSelector(\r\n  [selectSettingState],\r\n  setting => setting.speaciaList,\r\n);\r\n\r\nexport const selectSettingTemp = createSelector(\r\n  [selectSettingState],\r\n  setting => setting.cacheSetting,\r\n);\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as SettingSelector from 'store/setting/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE, SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalAddTitle({ open, onClose }) {\r\n  const settingHttp = new SettingHttp();\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  const titleType = useSelector(SettingSelector.selectSettingType);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = title => { \r\n    const {code, description, isActive, isSystem } = title;\r\n    settingHttp.checkUniqueCode({\r\n      code: title.code,\r\n      id: titleType.id,\r\n      manageType: SettingManageType.Title,\r\n    }).then(response => response.data)\r\n    .then(responseTitle => {\r\n      if (AppHelper.checkResponseData(responseTitle)) {\r\n        const result = _.get(responseTitle, 'result');\r\n        if (result) {\r\n          return dispatch(Settinglice.actions.setError({\r\n            id: AppHelper.generateUUID() + Date.now(),\r\n            key: RESPONSE_CONSTANT.TITLE.CHECK_CODE_FAIL,\r\n            message: RESPONSE_MESSAGE.TITLE.CHECK_CODE_FAIL,\r\n          }));\r\n        }\r\n        dispatch(Settinglice.actions.createManageType({\r\n          code,\r\n          description,\r\n          isActive,\r\n          isSystem,\r\n          settingTypeId: titleType.id,\r\n          manageType: SettingManageType.Title\r\n        }));\r\n      }\r\n    })\r\n    .catch(error => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3\">Thêm chức danh</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control name\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                {errors.description && errors.description?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isActive\" defaultChecked={true} /> \r\n              Hoạt động\r\n            </label>\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isSystem\" defaultChecked={true} /> \r\n              Hệ thống\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as SettingSelector from 'store/setting/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE, SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalUpdateTitle({ open, onClose }) {\r\n  const settingHttp = new SettingHttp();\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  const titleType = useSelector(SettingSelector.selectSettingType);\r\n  const initTitle = useSelector(SettingSelector.selectSettingTemp);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = title => { \r\n    if ((title.code !== initTitle.code)) {\r\n      return settingHttp.checkUniqueCode({\r\n        code: title.code,\r\n        id: titleType.id,\r\n        manageType: SettingManageType.Title,\r\n      }).then(response => response.data)\r\n      .then(responseTitle => {\r\n        if (AppHelper.checkResponseData(responseTitle)) {\r\n          const result = _.get(responseTitle, 'result');\r\n          if (result) {\r\n            return dispatch(Settinglice.actions.setError({\r\n              id: AppHelper.generateUUID() + Date.now(),\r\n              key: RESPONSE_CONSTANT.TITLE.CHECK_CODE_FAIL,\r\n              message: RESPONSE_MESSAGE.TITLE.CHECK_CODE_FAIL,\r\n            }));\r\n          }\r\n          updateTitle(title);\r\n        }\r\n      })\r\n      .catch(error => console.error(error));\r\n    }\r\n    updateTitle(title);\r\n  }\r\n\r\n  const updateTitle = (title) => {\r\n    const {code, description, isActive, isSystem } = title;\r\n    dispatch(Settinglice.actions.updateManageType({\r\n      code,\r\n      description,\r\n      isActive,\r\n      isSystem,\r\n      id: initTitle.id,\r\n      settingTypeId: titleType.id,\r\n      manageType: SettingManageType.Title\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        {\r\n          !_.isEmpty(initTitle) ? (\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <h4 className=\"modal-title pb-3\">Cập Nhật Thông Tin Chức Danh</h4>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"code\">\r\n                    Mã\r\n                  </label>\r\n                  <input\r\n                    id=\"code\"\r\n                    type=\"text\"\r\n                    className=\"form-control Code\"\r\n                    name=\"code\"\r\n                    defaultValue={initTitle.code}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Mã\" autoComplete=\"off\" />\r\n                    {errors.code && errors.code?.type === 'required' ? (\r\n                      <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                    ) : null}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">\r\n                  Tên\r\n                  </label>\r\n                  <input\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    className=\"form-control name\"\r\n                    name=\"description\"\r\n                    defaultValue={initTitle.description}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                    {errors.description && errors.description?.type === 'required' ? (\r\n                      <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                    ) : null}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"checkbox-inline\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    ref={register()}\r\n                    name=\"isActive\"\r\n                    defaultChecked={initTitle.is_active} /> \r\n                  Hoạt động\r\n                </label>\r\n                <label className=\"checkbox-inline\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    ref={register()}\r\n                    name=\"isSystem\"\r\n                    defaultChecked={initTitle.is_system} /> \r\n                  Hệ thống\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group d-flex justify-content-end\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n                <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n              </div>\r\n            </form>\r\n          ) : null\r\n        }\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sliceKey, reducer, actions } from 'store/setting/shared/slice';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  selectLoading,\r\n  selectSettingList,\r\n  selectError,\r\n  selectSuccess,\r\n} from 'store/setting/shared/selectors';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { tableValue } from 'store/setting/constants/setting.constant';\r\nimport { ModalAddTitle } from '../components/TitleManagement/ModalAddTitle';\r\nimport { ModalUpdateTitle } from '../components/TitleManagement/ModalUpdateTitle';\r\nimport { ModalConfirm } from 'app/components/Modal/Confirm';\r\nimport { SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport { EMPTY_MESSAGE } from 'store/common/constants/common.constant';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tables from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    height: '100%',\r\n    maxHeight: '380px',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport function TitleManagement() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({ key: sliceKey, reducer });\r\n  useInjectSaga({ key: sliceKey, saga: SettingSaga });\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const titleList: any = useSelector<any>(selectSettingList);\r\n  const loading: any = useSelector<any>(selectLoading);\r\n  const error: any = useSelector<any>(selectError);\r\n  const success: any = useSelector<any>(selectSuccess);\r\n  const [openAddTitle, setOpenAddTitle] = useState<boolean>(false);\r\n  const [openUpdateTitle, setOpenUpdateTitle] = useState<boolean>(false);\r\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\r\n  const [idDelete, setIdDelete] = useState<string>('');\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<any>('tekmedi_card_number');\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.getManageType(SettingManageType.Title));\r\n    dispatch(actions.getAllManageType(SettingManageType.Title));\r\n    return () => {\r\n      dispatch(actions.resetAll());\r\n    };\r\n  }, []);\r\n\r\n  const renderData = useMemo(() => {\r\n    const data: any[] = titleList;\r\n    return data;\r\n  }, [titleList]);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(error)) {\r\n      notifyController.setNotifyMessage(error.message).setFailNotify();\r\n      dispatch(actions.clearError());\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(success)) {\r\n      notifyController.setNotifyMessage(success.message).setSuccessNotify();\r\n      dispatch(actions.clearSuccess());\r\n      syncTitleData();\r\n      closeDialog();\r\n    }\r\n  }, [success]);\r\n\r\n  const syncTitleData = () => {\r\n    dispatch(actions.getAllManageType(SettingManageType.Title));\r\n  };\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const changeStatusTitle = (e, id) => {\r\n    dispatch(\r\n      actions.changeManageTypeActive({\r\n        id,\r\n        isActive: e.target.checked,\r\n        manageType: SettingManageType.Title,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const deleteTitle = () => {\r\n    if (idDelete === '') return;\r\n    dispatch(\r\n      actions.deleteManageType({\r\n        id: idDelete,\r\n        manageType: SettingManageType.Title,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const openDeleteTitle = id => {\r\n    setIdDelete(id);\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const setOpenUpdateTitleModal = title => {\r\n    setOpenUpdateTitle(true);\r\n    dispatch(actions.setTempManageType(title));\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setOpenAddTitle(false);\r\n    setOpenUpdateTitle(false);\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 btn-group\">\r\n          <button\r\n            className=\"btn btn-info btn__config mg-t-22 mr-1\"\r\n            onClick={() => setOpenAddTitle(true)}\r\n          >\r\n            Thêm mới <i className=\"fa fa-plus\"></i>\r\n          </button>\r\n          <button\r\n            className=\"btn btn-info btn__config mg-t-22\"\r\n            onClick={syncTitleData}\r\n          >\r\n            Đồng bộ <i className=\"fa fa-refresh\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={tableValue}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!_.isEmpty(renderData) && renderData.length) {\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        renderData,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      return tableData.map((row, idx) => {\r\n        const title = _.cloneDeep(row);\r\n        return (\r\n          <TableRow key={row.id}>\r\n            {tableValue.map(column => {\r\n              const value = title[column.id];\r\n              if (column.id === 'no') {\r\n                return <TableCell key={column.id}>{idx + 1}</TableCell>;\r\n              } else if (column.id === 'is_active') {\r\n                if (value) {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#4caf50', fontSize: '16px' }}\r\n                        className=\"fa fa-check-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#ff0000', fontSize: '16px' }}\r\n                        className=\"fa fa-times-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                }\r\n              } else if (column.id === 'actions') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <Tooltip\r\n                      title={'Đổi Trạng thái'}\r\n                      enterDelay={500}\r\n                      leaveDelay={100}\r\n                    >\r\n                      <Switch\r\n                        checked={title.is_active}\r\n                        onChange={e => changeStatusTitle(e, title.id)}\r\n                        color=\"primary\"\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      />\r\n                    </Tooltip>\r\n                    <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs\"\r\n                        onClick={() => setOpenUpdateTitleModal(title)}\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                    <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-danger btn-xs mx-2\"\r\n                        onClick={() => openDeleteTitle(title.id)}\r\n                      >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={tableValue.length}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {loading ? <AppLoading loading={true} /> : null}\r\n      {openAddTitle && <ModalAddTitle open={true} onClose={closeDialog} />}\r\n      {openUpdateTitle && (\r\n        <ModalUpdateTitle open={true} onClose={closeDialog} />\r\n      )}\r\n      <ModalConfirm\r\n        title={'Bạn có chắc chắn muốn xoá chức danh này?'}\r\n        other={{\r\n          bodyText: '',\r\n        }}\r\n        keyConfirm={''}\r\n        open={openDelete}\r\n        onClose={() => closeDialog()}\r\n        confirmMethod={() => deleteTitle()}\r\n      />\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Tables stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()} </TableBody>\r\n                  </Tables>\r\n                </TableContainer>\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as SettingSelector from 'store/setting/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE, SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport { DEFAULT_ID } from 'store/common/constants/common.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalAddPosition({ open, onClose }) {\r\n  const settingHttp = new SettingHttp();\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  const positionType = useSelector(SettingSelector.selectSettingType);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = position => { \r\n    const {code, description, isActive, isSystem } = position;\r\n    settingHttp.checkUniqueCode({\r\n      code: position.code,\r\n      id: !_.isEmpty(positionType) ? positionType.id : DEFAULT_ID,\r\n      manageType: SettingManageType.Position,\r\n    }).then(response => response.data)\r\n    .then(responsePosition => {\r\n      if (AppHelper.checkResponseData(responsePosition)) {\r\n        const result = _.get(responsePosition, 'result');\r\n        if (result) {\r\n          return dispatch(Settinglice.actions.setError({\r\n            id: AppHelper.generateUUID() + Date.now(),\r\n            key: RESPONSE_CONSTANT.POSITION.CHECK_CODE_FAIL,\r\n            message: RESPONSE_MESSAGE.POSITION.CHECK_CODE_FAIL,\r\n          }));\r\n        }\r\n        dispatch(Settinglice.actions.createManageType({\r\n          code,\r\n          description,\r\n          isActive,\r\n          isSystem,\r\n          settingTypeId: positionType.id,\r\n          manageType: SettingManageType.Position\r\n        }));\r\n      }\r\n    })\r\n    .catch(error => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-position\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-position pb-3\">Thêm chức vụ</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control name\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                {errors.description && errors.description?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isActive\" defaultChecked={true} /> \r\n              Hoạt động\r\n            </label>\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isSystem\" defaultChecked={true} /> \r\n              Hệ thống\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as SettingSelector from 'store/setting/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE, SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalUpdatePosition({ open, onClose }) {\r\n  const settingHttp = new SettingHttp();\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  const positionType = useSelector(SettingSelector.selectSettingType);\r\n  const initPosition = useSelector(SettingSelector.selectSettingTemp);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = position => { \r\n    if ((position.code !== initPosition.code)) {\r\n      return settingHttp.checkUniqueCode({\r\n        code: position.code,\r\n        id: positionType.id,\r\n        manageType: SettingManageType.Position,\r\n      }).then(response => response.data)\r\n      .then(responsePosition => {\r\n        if (AppHelper.checkResponseData(responsePosition)) {\r\n          const result = _.get(responsePosition, 'result');\r\n          if (result) {\r\n            return dispatch(Settinglice.actions.setError({\r\n              id: AppHelper.generateUUID() + Date.now(),\r\n              key: RESPONSE_CONSTANT.POSITION.CHECK_CODE_FAIL,\r\n              message: RESPONSE_MESSAGE.POSITION.CHECK_CODE_FAIL,\r\n            }));\r\n          }\r\n          updatePosition(position);\r\n        }\r\n      })\r\n      .catch(error => console.error(error));\r\n    }\r\n    updatePosition(position);\r\n  }\r\n\r\n  const updatePosition = (position) => {\r\n    const {code, description, isActive, isSystem } = position;\r\n    dispatch(Settinglice.actions.updateManageType({\r\n      code,\r\n      description,\r\n      isActive,\r\n      isSystem,\r\n      id: initPosition.id,\r\n      settingTypeId: positionType.id,\r\n      manageType: SettingManageType.Position\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        {\r\n          !_.isEmpty(initPosition) ? (\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <h4 className=\"modal-title pb-3\">Cập Nhật Thông Tin Chức Danh</h4>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"code\">\r\n                    Mã\r\n                  </label>\r\n                  <input\r\n                    id=\"code\"\r\n                    type=\"text\"\r\n                    className=\"form-control Code\"\r\n                    name=\"code\"\r\n                    defaultValue={initPosition.code}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Mã\" autoComplete=\"off\" />\r\n                    {errors.code && errors.code?.type === 'required' ? (\r\n                      <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                    ) : null}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">\r\n                  Tên\r\n                  </label>\r\n                  <input\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    className=\"form-control name\"\r\n                    name=\"description\"\r\n                    defaultValue={initPosition.description}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                    {errors.description && errors.description?.type === 'required' ? (\r\n                      <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                    ) : null}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"checkbox-inline\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    ref={register()}\r\n                    name=\"isActive\"\r\n                    defaultChecked={initPosition.is_active} /> \r\n                  Hoạt động\r\n                </label>\r\n                <label className=\"checkbox-inline\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    ref={register()}\r\n                    name=\"isSystem\"\r\n                    defaultChecked={initPosition.is_system} /> \r\n                  Hệ thống\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group d-flex justify-content-end\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n                <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n              </div>\r\n            </form>\r\n          ) : null\r\n        }\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sliceKey, reducer, actions } from 'store/setting/shared/slice';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport {\r\n  selectLoading,\r\n  selectSettingList,\r\n  selectError,\r\n  selectSuccess,\r\n} from 'store/setting/shared/selectors';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { useSnackbar } from 'notistack';\r\nimport { TablePagination, Tooltip } from '@material-ui/core';\r\nimport { tableValue } from 'store/setting/constants/setting.constant';\r\nimport { ModalAddPosition } from '../components/Position/ModalAddPosition';\r\nimport { ModalUpdatePosition } from '../components/Position/ModalUpdatePosition';\r\nimport { ModalConfirm } from 'app/components/Modal/Confirm';\r\nimport {\r\n  EMPTY_MESSAGE,\r\n  rowsPerArray,\r\n} from 'store/common/constants/common.constant';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    height: '100%',\r\n    //maxHeight: '400px',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport function Position() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({ key: sliceKey, reducer });\r\n  useInjectSaga({ key: sliceKey, saga: SettingSaga });\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const positionList = useSelector<any>(selectSettingList);\r\n  //const [positions, setPositions] = useState<any>();\r\n  const loading: any = useSelector<any>(selectLoading);\r\n  const error: any = useSelector<any>(selectError);\r\n  const success: any = useSelector<any>(selectSuccess);\r\n  const [openAddPosition, setOpenAddPosition] = useState<boolean>(false);\r\n  const [openUpdatePosition, setOpenUpdatePosition] = useState<boolean>(false);\r\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\r\n  const [idDelete, setIdDelete] = useState<string>('');\r\n\r\n  const [filter, setFilter] = useState<any>({\r\n    page: 0,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [searchKey, setSearchKey] = useState<string>('');\r\n\r\n  const filteredData = useMemo(() => {\r\n    if (!Array.isArray(positionList)) return [];\r\n    return AppHelper.searchListByKey(\r\n      positionList,\r\n      ['code', 'description', 'type'],\r\n      searchKey,\r\n    );\r\n  }, [positionList, searchKey]);\r\n  useEffect(() => {\r\n    setFilter({\r\n      ...filter,\r\n      page: 0,\r\n    });\r\n  }, [filteredData]);\r\n  const pagedData = useMemo(() => {\r\n    const start = filter.page * filter.rowsPerPage;\r\n    return filteredData.slice(start, start + filter.rowsPerPage);\r\n  }, [filteredData, filter]);\r\n\r\n  const handleChangePage = (e, page) => {\r\n    let changePage = Object.assign({}, filter, { page });\r\n    setFilter(changePage);\r\n  };\r\n  const handleChangeRowsPerPage = e => {\r\n    let changeRowPerPage = Object.assign({}, filter, {\r\n      rowsPerPage: +e.target.value,\r\n      page: 0,\r\n    });\r\n    setFilter(changeRowPerPage);\r\n  };\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(pagedData)) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          count={filteredData.length}\r\n          rowsPerPage={filter.rowsPerPage}\r\n          page={filter.page}\r\n          labelRowsPerPage={'Hiển Thị'}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.resetAll());\r\n    dispatch(actions.getAllManageType(SettingManageType.Position));\r\n    dispatch(actions.getManageType(SettingManageType.Position));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(error)) {\r\n      notifyController.setNotifyMessage(error.message).setFailNotify();\r\n      dispatch(actions.clearError());\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(success)) {\r\n      notifyController.setNotifyMessage(success.message).setSuccessNotify();\r\n      dispatch(actions.clearSuccess());\r\n      dispatch(actions.getAllManageType(SettingManageType.Position));\r\n      closeDialog();\r\n    }\r\n  }, [success]);\r\n\r\n  const syncPositionData = () => {\r\n    dispatch(actions.getAllManageType(SettingManageType.Position));\r\n  };\r\n\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<any>('code');\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const changeStatusPosition = (e, id) => {\r\n    dispatch(\r\n      actions.changeManageTypeActive({\r\n        id,\r\n        isActive: e.target.checked,\r\n        manageType: SettingManageType.Position,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const deletePosition = () => {\r\n    if (idDelete === '') return;\r\n    dispatch(\r\n      actions.deleteManageType({\r\n        id: idDelete,\r\n        manageType: SettingManageType.Position,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const openDeletePosition = id => {\r\n    setIdDelete(id);\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const setOpenUpdatePositionModal = position => {\r\n    setOpenUpdatePosition(true);\r\n    dispatch(actions.setTempManageType(position));\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setOpenAddPosition(false);\r\n    setOpenUpdatePosition(false);\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <div className=\"row p-0 pl-3 pr-3\">\r\n        <div className=\"col-12 col-sm-2 p-0\">\r\n          <div className=\"btn-group w-100\">\r\n            <button\r\n              className=\"btn btn-info btn__config w-100\"\r\n              onClick={() => setOpenAddPosition(true)}\r\n            >\r\n              Thêm mới <i className=\"fa fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 col-sm-2 p-0 pl-sm-2\">\r\n          <div className=\"btn-group w-100\">\r\n            <button\r\n              className=\"btn btn-info btn__config w-100\"\r\n              onClick={syncPositionData}\r\n            >\r\n              Đồng bộ <i className=\"fa fa-refresh\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 col-sm-8 p-0 pl-sm-2\">\r\n          <div className=\"btn-group w-100\">\r\n            <input\r\n              type=\"search\"\r\n              placeholder=\"Tìm thiết bị\"\r\n              className=\"form-control form-control-sm\"\r\n              aria-controls=\"titleTable\"\r\n              value={searchKey}\r\n              onChange={e => setSearchKey(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={tableValue}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!_.isEmpty(pagedData) && pagedData.length) {\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        pagedData,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      return tableData.map((row, idx) => {\r\n        const position = _.cloneDeep(row);\r\n        return (\r\n          <TableRow key={row.id}>\r\n            {tableValue.map(column => {\r\n              const value = position[column.id];\r\n              if (column.id === 'no') {\r\n                return <TableCell key={column.id}>{idx + 1}</TableCell>;\r\n              } else if (column.id === 'is_active') {\r\n                if (value) {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#4caf50', fontSize: '16px' }}\r\n                        className=\"fa fa-check-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#ff0000', fontSize: '16px' }}\r\n                        className=\"fa fa-times-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                }\r\n              } else if (column.id === 'actions') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <Tooltip\r\n                      title={'Đổi Trạng thái'}\r\n                      enterDelay={500}\r\n                      leaveDelay={100}\r\n                    >\r\n                      <Switch\r\n                        checked={position.is_active}\r\n                        onChange={e => changeStatusPosition(e, position.id)}\r\n                        color=\"primary\"\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      />\r\n                    </Tooltip>\r\n                    <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs\"\r\n                        onClick={() => setOpenUpdatePositionModal(position)}\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                    <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-danger btn-xs mx-2\"\r\n                        onClick={() => openDeletePosition(position.id)}\r\n                      >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={tableValue.length}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {openAddPosition ? (\r\n        <ModalAddPosition open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      {openUpdatePosition ? (\r\n        <ModalUpdatePosition open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      <ModalConfirm\r\n        title={'Bạn có chắc chắn muốn xoá chức vụ này?'}\r\n        other={{\r\n          bodyText: '',\r\n        }}\r\n        keyConfirm={''}\r\n        open={openDelete}\r\n        onClose={() => closeDialog()}\r\n        confirmMethod={() => deletePosition()}\r\n      />\r\n      {loading ? <AppLoading loading={true} /> : null}\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as SettingSelector from 'store/setting/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE, SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalAddGroupService({ open, onClose }) {\r\n  const settingHttp = new SettingHttp();\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  const settingType = useSelector(SettingSelector.selectSettingType);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = setting => { \r\n    const {code, description, isActive, isSystem } = setting;\r\n    settingHttp.checkUniqueCode({\r\n      code: setting.code,\r\n      id: settingType.id,\r\n      manageType: SettingManageType.Group,\r\n    }).then(response => response.data)\r\n    .then(responseSetting => {\r\n      if (AppHelper.checkResponseData(responseSetting)) {\r\n        const result = _.get(responseSetting, 'result');\r\n        if (result) {\r\n          return dispatch(Settinglice.actions.setError({\r\n            id: AppHelper.generateUUID() + Date.now(),\r\n            key: RESPONSE_CONSTANT.GROUP_SERVICE.CHECK_CODE_FAIL,\r\n            message: RESPONSE_MESSAGE.GROUP_SERVICE.CHECK_CODE_FAIL,\r\n          }));\r\n        }\r\n        dispatch(Settinglice.actions.createManageType({\r\n          code,\r\n          description,\r\n          isActive,\r\n          isSystem,\r\n          settingTypeId: settingType.id,\r\n          manageType: SettingManageType.Group\r\n        }));\r\n      }\r\n    })\r\n    .catch(error => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3\">Thêm Nhóm Dịch Vụ</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control name\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                {errors.description && errors.description?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"service_type\">\r\n              Loại hình dịch vụ\r\n              </label>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"service_type\" name=\"service_type\"\r\n                ref={register({ required: true })}\r\n              >\r\n                <option value=\"Công khám\">Công khám</option>\r\n                <option value=\"Cận lâm sàng\">Cận lâm sàng</option>\r\n                <option value=\"Không xác định\">Không xác định</option>\r\n              </select>\r\n                {errors.service_type && errors.service_type?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng chọn loại hình dịch vụ</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isActive\" defaultChecked={true} /> \r\n              Hoạt động\r\n            </label>\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isSystem\" defaultChecked={true} /> \r\n              Hệ thống\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as SettingSelector from 'store/setting/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE, SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalUpdateGroupService({ open, onClose }) {\r\n  const settingHttp = new SettingHttp();\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  const settingType = useSelector(SettingSelector.selectSettingType);\r\n  const initSetting = useSelector(SettingSelector.selectSettingTemp);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = setting => { \r\n    if ((setting.code !== initSetting.code)) {\r\n      return settingHttp.checkUniqueCode({\r\n        code: setting.code,\r\n        id: settingType.id,\r\n        manageType: SettingManageType.Group,\r\n      }).then(response => response.data)\r\n      .then(responseSetting => {\r\n        if (AppHelper.checkResponseData(responseSetting)) {\r\n          const result = _.get(responseSetting, 'result');\r\n          if (result) {\r\n            return dispatch(Settinglice.actions.setError({\r\n              id: AppHelper.generateUUID() + Date.now(),\r\n              key: RESPONSE_CONSTANT.GROUP_SERVICE.CHECK_CODE_FAIL,\r\n              message: RESPONSE_MESSAGE.GROUP_SERVICE.CHECK_CODE_FAIL,\r\n            }));\r\n          }\r\n          updateSetting(setting);\r\n        }\r\n      })\r\n      .catch(error => console.error(error));\r\n    }\r\n    updateSetting(setting);\r\n  }\r\n\r\n  const updateSetting = (setting) => {\r\n    const {code, description, isActive, isSystem } = setting;\r\n    dispatch(Settinglice.actions.updateManageType({\r\n      code,\r\n      description,\r\n      isActive,\r\n      isSystem,\r\n      id: initSetting.id,\r\n      settingTypeId: settingType.id,\r\n      manageType: SettingManageType.Group\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        {\r\n          !_.isEmpty(initSetting) ? (\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <h4 className=\"modal-title pb-3\">Cập Nhật Thông Tin Chức Danh</h4>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"code\">\r\n                    Mã\r\n                  </label>\r\n                  <input\r\n                    id=\"code\"\r\n                    type=\"text\"\r\n                    className=\"form-control Code\"\r\n                    name=\"code\"\r\n                    defaultValue={initSetting.code}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Mã\" autoComplete=\"off\" />\r\n                    {errors.code && errors.code?.type === 'required' ? (\r\n                      <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                    ) : null}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">\r\n                  Tên\r\n                  </label>\r\n                  <input\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    className=\"form-control name\"\r\n                    name=\"description\"\r\n                    defaultValue={initSetting.description}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                    {errors.description && errors.description?.type === 'required' ? (\r\n                      <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                    ) : null}\r\n              </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"service_type\">\r\n                Loại hình dịch vụ\r\n                </label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"service_type\" name=\"service_type\"\r\n                  defaultValue={initSetting.service_type}\r\n                  ref={register({ required: true })}\r\n                >\r\n                  <option value=\"Công khám\">Công khám</option>\r\n                  <option value=\"Cận lâm sàng\">Cận lâm sàng</option>\r\n                  <option value=\"Không xác định\">Không xác định</option>\r\n                </select>\r\n                  {errors.service_type && errors.service_type?.type === 'required' ? (\r\n                    <span style={{ color: ' #fb0606' }}>Vui lòng chọn loại hình dịch vụ</span>\r\n                  ) : null}\r\n            </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"checkbox-inline\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    ref={register()}\r\n                    name=\"isActive\"\r\n                    defaultChecked={initSetting.is_active} /> \r\n                  Hoạt động\r\n                </label>\r\n                <label className=\"checkbox-inline\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    ref={register()}\r\n                    name=\"isSystem\"\r\n                    defaultChecked={initSetting.is_system} /> \r\n                  Hệ thống\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group d-flex justify-content-end\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n                <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n              </div>\r\n            </form>\r\n          ) : null\r\n        }\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sliceKey, reducer, actions } from 'store/setting/shared/slice';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport {\r\n  selectLoading,\r\n  selectSettingList,\r\n  selectError,\r\n  selectSuccess,\r\n} from 'store/setting/shared/selectors';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { tableGroupService } from 'store/setting/constants/setting.constant';\r\nimport { ModalAddGroupService } from '../components/GroupService/ModalAddGroupService';\r\nimport { ModalUpdateGroupService } from '../components/GroupService/ModalUpdateGroupService';\r\nimport { ModalConfirm } from 'app/components/Modal/Confirm';\r\nimport { SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport {\r\n  EMPTY_MESSAGE,\r\n  rowsPerArray,\r\n} from 'store/common/constants/common.constant';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: '200px',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport function GroupService() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({ key: sliceKey, reducer });\r\n  useInjectSaga({ key: sliceKey, saga: SettingSaga });\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const groupServiceList: any[] = useSelector(selectSettingList);\r\n  const loading: any = useSelector<any>(selectLoading);\r\n  const error: any = useSelector<any>(selectError);\r\n  const success: any = useSelector<any>(selectSuccess);\r\n  const [openAddTitle, setOpenAddTitle] = useState<boolean>(false);\r\n  const [openUpdateTitle, setOpenUpdateTitle] = useState<boolean>(false);\r\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\r\n  const [idDelete, setIdDelete] = useState<string>('');\r\n  const [pagi, setPagi] = useState<any>(() => ({\r\n    rowsPerPage: _.first(rowsPerArray),\r\n    page: 0,\r\n  }));\r\n  const [keySearch, setKeySearch] = useState<string>('');\r\n  const [listRender, setListRender] = useState<any>({});\r\n\r\n  useEffect((): any => {\r\n    if (!_.isEmpty(groupServiceList) && groupServiceList.length) {\r\n      if (keySearch === '') {\r\n        AppHelper.setPagiClient(groupServiceList, pagi, setListRender);\r\n      } else {\r\n        AppHelper.setSearchPagiClient(\r\n          groupServiceList,\r\n          pagi,\r\n          keySearch,\r\n          setListRender,\r\n        );\r\n      }\r\n    }\r\n  }, [groupServiceList, pagi, keySearch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.resetAll());\r\n    dispatch(actions.getAllManageType(SettingManageType.Group));\r\n    dispatch(actions.getManageType(SettingManageType.Group));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(error)) {\r\n      notifyController.setNotifyMessage(error.message).setFailNotify();\r\n      dispatch(actions.clearError());\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(success)) {\r\n      notifyController.setNotifyMessage(success.message).setSuccessNotify();\r\n      dispatch(actions.clearSuccess());\r\n      dispatch(actions.getAllManageType(SettingManageType.Group));\r\n      closeDialog();\r\n    }\r\n  }, [success]);\r\n\r\n  const syncTitleData = () => {\r\n    dispatch(actions.getAllManageType(SettingManageType.Group));\r\n  };\r\n\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<any>('code');\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const changeStatusTitle = (e, id) => {\r\n    dispatch(\r\n      actions.changeManageTypeActive({\r\n        id,\r\n        isActive: e.target.checked,\r\n        manageType: SettingManageType.Group,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const deleteService = () => {\r\n    if (idDelete === '') return;\r\n    dispatch(\r\n      actions.deleteManageType({\r\n        id: idDelete,\r\n        manageType: SettingManageType.Group,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const openDeleteService = id => {\r\n    setIdDelete(id);\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const setOpenUpdateTitleModal = groupService => {\r\n    setOpenUpdateTitle(true);\r\n    dispatch(actions.setTempManageType(groupService));\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setOpenAddTitle(false);\r\n    setOpenUpdateTitle(false);\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const changeSearch = e => {\r\n    setKeySearch(e.target.value);\r\n    setPagi({\r\n      page: 0,\r\n      rowsPerPage: pagi.rowsPerPage,\r\n    });\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"btn-group\">\r\n            <button\r\n              className=\"btn btn-info mb-0\"\r\n              onClick={() => setOpenAddTitle(true)}\r\n            >\r\n              Thêm mới <i className=\"fa fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"btn-group ml-3\">\r\n            <button className=\"btn btn-info mb-0\" onClick={syncTitleData}>\r\n              Đồng bộ <i className=\"fa fa-refresh\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"btn-group ml-3\">\r\n            <label\r\n              style={{ alignItems: 'center', margin: '0px', display: 'flex' }}\r\n            >\r\n              <span style={{ display: 'block', width: '90px' }}>Tìm:</span>\r\n              <input\r\n                type=\"search\"\r\n                placeholder=\"Tìm nhóm dịch vụ\"\r\n                className=\"form-control form-control-sm\"\r\n                aria-controls=\"titleTable\"\r\n                value={keySearch}\r\n                onChange={changeSearch}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={tableGroupService}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!_.isEmpty(listRender) && listRender.data.length) {\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        listRender.data,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      return tableData.map((row, idx) => {\r\n        const title = _.cloneDeep(row);\r\n        return (\r\n          <TableRow key={row.id}>\r\n            {tableGroupService.map(column => {\r\n              const value = title[column.id];\r\n              if (column.id === 'no') {\r\n                const { page, rowsPerPage } = pagi;\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    {page * rowsPerPage + idx + 1}\r\n                  </TableCell>\r\n                );\r\n              } else if (column.id === 'is_active') {\r\n                if (value) {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#4caf50', fontSize: '16px' }}\r\n                        className=\"fa fa-check-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#ff0000', fontSize: '16px' }}\r\n                        className=\"fa fa-times-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                }\r\n              } else if (column.id === 'actions') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <Tooltip\r\n                      title={'Đổi Trạng thái'}\r\n                      enterDelay={500}\r\n                      leaveDelay={100}\r\n                    >\r\n                      <Switch\r\n                        checked={title.is_active}\r\n                        onChange={e => changeStatusTitle(e, title.id)}\r\n                        color=\"primary\"\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      />\r\n                    </Tooltip>\r\n                    <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs\"\r\n                        onClick={() => setOpenUpdateTitleModal(title)}\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                    <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-danger btn-xs mx-2\"\r\n                        onClick={() => openDeleteService(title.id)}\r\n                      >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={tableGroupService.length}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (e, page) => {\r\n    let changePage = Object.assign({}, pagi, { page });\r\n    setPagi(changePage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = e => {\r\n    let changeRowPerPage = Object.assign({}, pagi, {\r\n      rowsPerPage: +e.target.value,\r\n      page: 0,\r\n    });\r\n    setPagi(changeRowPerPage);\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(listRender)) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          count={listRender.total}\r\n          rowsPerPage={pagi.rowsPerPage}\r\n          page={pagi.page}\r\n          labelRowsPerPage={'Hiển Thị'}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {openAddTitle ? (\r\n        <ModalAddGroupService open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      {openUpdateTitle ? (\r\n        <ModalUpdateGroupService open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      <ModalConfirm\r\n        title={'Bạn có chắc chắn muốn xoá nhóm dịch vụ Này?'}\r\n        other={{\r\n          bodyText: '',\r\n        }}\r\n        keyConfirm={''}\r\n        open={openDelete}\r\n        onClose={() => closeDialog()}\r\n        confirmMethod={() => deleteService()}\r\n      />\r\n      {loading ? <AppLoading loading={true} /> : null}\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as SettingSelector from 'store/setting/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE, SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalAddService({ open, onClose }) {\r\n  const settingHttp = new SettingHttp();\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  const settingType = useSelector(SettingSelector.selectSettingType);\r\n  const [listGroupService, setListGroupSerice] = useState<any[]>([]);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    settingHttp.\r\n      getAllManageType(SettingManageType.Group)\r\n        .then(response => response.data)\r\n        .then(listGroupService => {\r\n          if (AppHelper.checkResponseData(listGroupService)) {\r\n            const result = _.get(listGroupService, 'result.data');\r\n            setListGroupSerice(result);\r\n          }\r\n        })\r\n        .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  const onSubmit = setting => { \r\n    const {code, description, isActive, isSystem, listValueId } = setting;\r\n    settingHttp.checkUniqueCode({\r\n      code: setting.code,\r\n      id: settingType.id,\r\n      manageType: SettingManageType.Service,\r\n    }).then(response => response.data)\r\n    .then(responseSetting => {\r\n      if (AppHelper.checkResponseData(responseSetting)) {\r\n        const result = _.get(responseSetting, 'result');\r\n        if (result) {\r\n          return dispatch(Settinglice.actions.setError({\r\n            id: AppHelper.generateUUID() + Date.now(),\r\n            key: RESPONSE_CONSTANT.SERVICE.CHECK_CODE_FAIL,\r\n            message: RESPONSE_MESSAGE.SERVICE.CHECK_CODE_FAIL,\r\n          }));\r\n        }\r\n        dispatch(Settinglice.actions.createManageType({\r\n          code,\r\n          description,\r\n          isActive,\r\n          isSystem,\r\n          settingTypeId: settingType.id,\r\n          manageType: SettingManageType.Service,\r\n          listValueId,\r\n        }));\r\n      }\r\n    })\r\n    .catch(error => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3\">Thêm Dịch Vụ</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control name\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                {errors.description && errors.description?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Nhóm dịch vụ\r\n              </label>\r\n                <select\r\n                  name=\"listValueId\"\r\n                  id=\"groupService\"\r\n                  className=\"form-control\"\r\n                  ref={register({ required: true })}\r\n                >\r\n                  <option value=\"\">Vui lòng chọn ...</option>\r\n                  {\r\n                    !_.isEmpty(listGroupService) && listGroupService.length\r\n                      ? listGroupService.map(ser => (\r\n                        <option key={ser.id} value={ser.id}>{ ser.description }</option>\r\n                      ))\r\n                      : null\r\n                  }\r\n                </select>\r\n                {errors.listValueId && errors.listValueId?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng chọn nhóm dịch vụ</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isActive\" defaultChecked={true} /> \r\n              Hoạt động\r\n            </label>\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isSystem\" defaultChecked={true} /> \r\n              Hệ thống\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as SettingSelector from 'store/setting/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE, SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalUpdateService({ open, onClose }) {\r\n  const settingHttp = new SettingHttp();\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  const settingType = useSelector(SettingSelector.selectSettingType);\r\n  const initSetting = useSelector(SettingSelector.selectSettingTemp);\r\n  const [listGroupService, setListGroupSerice] = useState<any[]>([]);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    settingHttp.\r\n      getAllManageType(SettingManageType.Group)\r\n        .then(response => response.data)\r\n        .then(listGroupService => {\r\n          if (AppHelper.checkResponseData(listGroupService)) {\r\n            const result = _.get(listGroupService, 'result.data');\r\n            setListGroupSerice(result);\r\n          }\r\n        })\r\n        .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  const onSubmit = setting => { \r\n    if (setting.code !== initSetting.code) {\r\n      settingHttp.checkUniqueCode({\r\n        code: setting.code,\r\n        id: settingType.id,\r\n        manageType: SettingManageType.Service,\r\n      }).then(response => response.data)\r\n      .then(responseSetting => {\r\n        if (AppHelper.checkResponseData(responseSetting)) {\r\n          const result = _.get(responseSetting, 'result');\r\n          if (result) {\r\n            return dispatch(Settinglice.actions.setError({\r\n              id: AppHelper.generateUUID() + Date.now(),\r\n              key: RESPONSE_CONSTANT.SERVICE.CHECK_CODE_FAIL,\r\n              message: RESPONSE_MESSAGE.SERVICE.CHECK_CODE_FAIL,\r\n            }));\r\n          }\r\n          updateSetting(setting);\r\n        }\r\n      })\r\n      .catch(error => console.error(error));\r\n    }\r\n    updateSetting(setting);\r\n  }\r\n\r\n  const updateSetting = setting => {\r\n    const {code, description, isActive, isSystem, listValueId } = setting;\r\n    dispatch(Settinglice.actions.updateManageType({\r\n      code,\r\n      description,\r\n      isActive,\r\n      isSystem,\r\n      settingTypeId: settingType.id,\r\n      id: initSetting.id,\r\n      manageType: SettingManageType.Service,\r\n      listValueId,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3\">Thêm Dịch Vụ</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                defaultValue={initSetting.code}\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control name\"\r\n                name=\"description\"\r\n                defaultValue={initSetting.description}\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                {errors.description && errors.description?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Nhóm dịch vụ\r\n              </label>\r\n                {\r\n                  !_.isEmpty(initSetting) && !_.isEmpty(listGroupService) && listGroupService.length  ? (\r\n                    <select\r\n                      name=\"listValueId\"\r\n                      id=\"listValueId\"\r\n                      className=\"form-control\"\r\n                      ref={register({ required: true })}\r\n                      defaultValue={initSetting.list_value_id}\r\n                    >\r\n                      <option value=\"\">Vui lòng chọn ...</option>\r\n                      {\r\n                        listGroupService.map(ser => (\r\n                          <option key={ser.id} value={ser.id}>{ ser.description }</option>\r\n                        ))\r\n                      }\r\n                    </select>\r\n                  ) : null\r\n                }\r\n                {errors.listValueId && errors.listValueId?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng chọn nhóm dịch vụ</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isActive\" defaultChecked={initSetting.is_active} /> \r\n              Hoạt động\r\n            </label>\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isSystem\" defaultChecked={initSetting.is_system} /> \r\n              Hệ thống\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sliceKey, reducer, actions } from 'store/setting/shared/slice';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport {\r\n  selectLoading,\r\n  selectSettingList,\r\n  selectError,\r\n  selectSuccess,\r\n} from 'store/setting/shared/selectors';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { tableValue } from 'store/setting/constants/setting.constant';\r\nimport { ModalAddService } from '../components/Service/ModalAddService';\r\nimport { ModalUpdateService } from '../components/Service/ModalUpdateService';\r\nimport { ModalConfirm } from 'app/components/Modal/Confirm';\r\nimport { SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport {\r\n  EMPTY_MESSAGE,\r\n  rowsPerArray,\r\n} from 'store/common/constants/common.constant';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    height: '100%',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport function Service() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({ key: sliceKey, reducer });\r\n  useInjectSaga({ key: sliceKey, saga: SettingSaga });\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const groupServiceList: any[] = useSelector(selectSettingList);\r\n  const loading: any = useSelector<any>(selectLoading);\r\n  const error: any = useSelector<any>(selectError);\r\n  const success: any = useSelector<any>(selectSuccess);\r\n  const [openAddTitle, setOpenAddTitle] = useState<boolean>(false);\r\n  const [openUpdateTitle, setOpenUpdateTitle] = useState<boolean>(false);\r\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\r\n  const [idDelete, setIdDelete] = useState<string>('');\r\n  const [pagi, setPagi] = useState<any>(() => ({\r\n    rowsPerPage: _.first(rowsPerArray),\r\n    page: 0,\r\n  }));\r\n  const [keySearch, setKeySearch] = useState<string>('');\r\n  const [listRender, setListRender] = useState<any>({});\r\n\r\n  useEffect((): any => {\r\n    if (!_.isEmpty(groupServiceList) && groupServiceList.length) {\r\n      if (keySearch === '') {\r\n        AppHelper.setPagiClient(groupServiceList, pagi, setListRender);\r\n      } else {\r\n        AppHelper.setSearchPagiClient(\r\n          groupServiceList,\r\n          pagi,\r\n          keySearch,\r\n          setListRender,\r\n        );\r\n      }\r\n    }\r\n  }, [groupServiceList, pagi, keySearch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.resetAll());\r\n    dispatch(actions.getAllManageType(SettingManageType.Service));\r\n    dispatch(actions.getManageType(SettingManageType.Service));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(error)) {\r\n      notifyController.setNotifyMessage(error.message).setFailNotify();\r\n      dispatch(actions.clearError());\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(success)) {\r\n      notifyController.setNotifyMessage(success.message).setSuccessNotify();\r\n      dispatch(actions.clearSuccess());\r\n      dispatch(actions.getAllManageType(SettingManageType.Service));\r\n      closeDialog();\r\n    }\r\n  }, [success]);\r\n\r\n  const syncTitleData = () => {\r\n    dispatch(actions.getAllManageType(SettingManageType.Service));\r\n  };\r\n\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<any>('code');\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const changeStatusTitle = (e, id) => {\r\n    dispatch(\r\n      actions.changeManageTypeActive({\r\n        id,\r\n        isActive: e.target.checked,\r\n        manageType: SettingManageType.Service,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const deleteTitle = () => {\r\n    if (idDelete === '') return;\r\n    dispatch(\r\n      actions.deleteManageType({\r\n        id: idDelete,\r\n        manageType: SettingManageType.Service,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const openDeleteTitle = id => {\r\n    setIdDelete(id);\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const setOpenUpdateTitleModal = groupService => {\r\n    setOpenUpdateTitle(true);\r\n    dispatch(actions.setTempManageType(groupService));\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setOpenAddTitle(false);\r\n    setOpenUpdateTitle(false);\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const changeSearch = e => {\r\n    setKeySearch(e.target.value);\r\n    setPagi({\r\n      page: 0,\r\n      rowsPerPage: pagi.rowsPerPage,\r\n    });\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"btn-group\">\r\n            <button\r\n              className=\"btn btn-info mb-0\"\r\n              onClick={() => setOpenAddTitle(true)}\r\n            >\r\n              Thêm mới <i className=\"fa fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"btn-group ml-3\">\r\n            <button className=\"btn btn-info mb-0\" onClick={syncTitleData}>\r\n              Đồng bộ <i className=\"fa fa-refresh\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"btn-group ml-3\">\r\n            <label\r\n              style={{ alignItems: 'center', margin: '0px', display: 'flex' }}\r\n            >\r\n              <span style={{ display: 'block', width: '90px' }}>Tìm:</span>\r\n              <input\r\n                type=\"search\"\r\n                placeholder=\"Tìm dịch vụ\"\r\n                className=\"form-control form-control-sm\"\r\n                aria-controls=\"titleTable\"\r\n                value={keySearch}\r\n                onChange={changeSearch}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={tableValue}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!_.isEmpty(listRender) && listRender.data.length) {\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        listRender.data,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      return tableData.map((row, idx) => {\r\n        const title = _.cloneDeep(row);\r\n        return (\r\n          <TableRow key={row.id}>\r\n            {tableValue.map(column => {\r\n              const value = title[column.id];\r\n              if (column.id === 'no') {\r\n                const { page, rowsPerPage } = pagi;\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    {page * rowsPerPage + idx + 1}\r\n                  </TableCell>\r\n                );\r\n              } else if (column.id === 'is_active') {\r\n                if (value) {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#4caf50', fontSize: '16px' }}\r\n                        className=\"fa fa-check-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#ff0000', fontSize: '16px' }}\r\n                        className=\"fa fa-times-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                }\r\n              } else if (column.id === 'actions') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <Tooltip\r\n                      title={'Đổi Trạng thái'}\r\n                      enterDelay={500}\r\n                      leaveDelay={100}\r\n                    >\r\n                      <Switch\r\n                        checked={title.is_active}\r\n                        onChange={e => changeStatusTitle(e, title.id)}\r\n                        color=\"primary\"\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      />\r\n                    </Tooltip>\r\n                    <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs\"\r\n                        onClick={() => setOpenUpdateTitleModal(title)}\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                    <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-danger btn-xs mx-2\"\r\n                        onClick={() => openDeleteTitle(title.id)}\r\n                      >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={tableValue.length}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (e, page) => {\r\n    let changePage = Object.assign({}, pagi, { page });\r\n    setPagi(changePage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = e => {\r\n    let changeRowPerPage = Object.assign({}, pagi, {\r\n      rowsPerPage: +e.target.value,\r\n      page: 0,\r\n    });\r\n    setPagi(changeRowPerPage);\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(listRender)) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          count={listRender.total}\r\n          rowsPerPage={pagi.rowsPerPage}\r\n          page={pagi.page}\r\n          labelRowsPerPage={'Hiển Thị'}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {openAddTitle ? (\r\n        <ModalAddService open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      {openUpdateTitle ? (\r\n        <ModalUpdateService open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      <ModalConfirm\r\n        title={'Bạn có chắc chắn muốn xoá dịch vụ này?'}\r\n        other={{\r\n          bodyText: '',\r\n        }}\r\n        keyConfirm={''}\r\n        open={openDelete}\r\n        onClose={() => closeDialog()}\r\n        confirmMethod={() => deleteTitle()}\r\n      />\r\n      {loading ? <AppLoading loading={true} /> : null}\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as SettingSelector from 'store/setting/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE, SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalAddDepartmentType({ open, onClose }) {\r\n  const settingHttp = new SettingHttp();\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  const settingType = useSelector(SettingSelector.selectSettingType);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = setting => { \r\n    const {code, description, isActive, isSystem } = setting;\r\n    settingHttp.checkUniqueCode({\r\n      code: setting.code,\r\n      id: settingType.id,\r\n      manageType: SettingManageType.DepartmentType,\r\n    }).then(response => response.data)\r\n    .then(responseSetting => {\r\n      if (AppHelper.checkResponseData(responseSetting)) {\r\n        const result = _.get(responseSetting, 'result');\r\n        if (result) {\r\n          return dispatch(Settinglice.actions.setError({\r\n            id: AppHelper.generateUUID() + Date.now(),\r\n            key: RESPONSE_CONSTANT.DEPARTMENT_TYPE.CHECK_CODE_FAIL,\r\n            message: RESPONSE_MESSAGE.DEPARTMENT_TYPE.CHECK_CODE_FAIL,\r\n          }));\r\n        }\r\n        dispatch(Settinglice.actions.createManageType({\r\n          code,\r\n          description,\r\n          isActive,\r\n          isSystem,\r\n          settingTypeId: settingType.id,\r\n          manageType: SettingManageType.Group\r\n        }));\r\n      }\r\n    })\r\n    .catch(error => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3\">Thêm Loại phòng khám</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control name\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                {errors.description && errors.description?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isActive\" defaultChecked={true} /> \r\n              Hoạt động\r\n            </label>\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isSystem\" defaultChecked={true} /> \r\n              Hệ thống\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as SettingSelector from 'store/setting/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE, SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalUpdateDepatureType({ open, onClose }) {\r\n  const settingHttp = new SettingHttp();\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  const settingType = useSelector(SettingSelector.selectSettingType);\r\n  const initSetting = useSelector(SettingSelector.selectSettingTemp);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = setting => { \r\n    if ((setting.code !== initSetting.code)) {\r\n      return settingHttp.checkUniqueCode({\r\n        code: setting.code,\r\n        id: settingType.id,\r\n        manageType: SettingManageType.DepartmentType,\r\n      }).then(response => response.data)\r\n      .then(responseSetting => {\r\n        if (AppHelper.checkResponseData(responseSetting)) {\r\n          const result = _.get(responseSetting, 'result');\r\n          if (result) {\r\n            return dispatch(Settinglice.actions.setError({\r\n              id: AppHelper.generateUUID() + Date.now(),\r\n              key: RESPONSE_CONSTANT.DEPARTMENT_TYPE.CHECK_CODE_FAIL,\r\n              message: RESPONSE_MESSAGE.DEPARTMENT_TYPE.CHECK_CODE_FAIL,\r\n            }));\r\n          }\r\n          updateSetting(setting);\r\n        }\r\n      })\r\n      .catch(error => console.error(error));\r\n    }\r\n    updateSetting(setting);\r\n  }\r\n\r\n  const updateSetting = (setting) => {\r\n    const {code, description, isActive, isSystem } = setting;\r\n    dispatch(Settinglice.actions.updateManageType({\r\n      code,\r\n      description,\r\n      isActive,\r\n      isSystem,\r\n      id: initSetting.id,\r\n      settingTypeId: settingType.id,\r\n      manageType: SettingManageType.Group\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        {\r\n          !_.isEmpty(initSetting) ? (\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <h4 className=\"modal-title pb-3\">Cập Nhật Thông Tin Loại phòng khám</h4>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"code\">\r\n                    Mã\r\n                  </label>\r\n                  <input\r\n                    id=\"code\"\r\n                    type=\"text\"\r\n                    className=\"form-control Code\"\r\n                    name=\"code\"\r\n                    defaultValue={initSetting.code}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Mã\" autoComplete=\"off\" />\r\n                    {errors.code && errors.code?.type === 'required' ? (\r\n                      <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                    ) : null}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">\r\n                  Tên\r\n                  </label>\r\n                  <input\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    className=\"form-control name\"\r\n                    name=\"description\"\r\n                    defaultValue={initSetting.description}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                    {errors.description && errors.description?.type === 'required' ? (\r\n                      <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                    ) : null}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"checkbox-inline\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    ref={register()}\r\n                    name=\"isActive\"\r\n                    defaultChecked={initSetting.is_active} /> \r\n                  Hoạt động\r\n                </label>\r\n                <label className=\"checkbox-inline\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    ref={register()}\r\n                    name=\"isSystem\"\r\n                    defaultChecked={initSetting.is_system} /> \r\n                  Hệ thống\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group d-flex justify-content-end\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n                <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n              </div>\r\n            </form>\r\n          ) : null\r\n        }\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sliceKey, reducer, actions } from 'store/setting/shared/slice';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport {\r\n  selectLoading,\r\n  selectSettingList,\r\n  selectError,\r\n  selectSuccess,\r\n} from 'store/setting/shared/selectors';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { tableValue } from 'store/setting/constants/setting.constant';\r\nimport { ModalAddDepartmentType } from '../components/DepartmentType/ModalAddDepatmentType';\r\nimport { ModalUpdateDepatureType } from '../components/DepartmentType/ModalUpdateDepartmentType';\r\nimport { ModalConfirm } from 'app/components/Modal/Confirm';\r\nimport { SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport {\r\n  EMPTY_MESSAGE,\r\n  rowsPerArray,\r\n} from 'store/common/constants/common.constant';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: '200px',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport function DepartmentType() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({ key: sliceKey, reducer });\r\n  useInjectSaga({ key: sliceKey, saga: SettingSaga });\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const groupServiceList: any[] = useSelector(selectSettingList);\r\n  const loading: any = useSelector<any>(selectLoading);\r\n  const error: any = useSelector<any>(selectError);\r\n  const success: any = useSelector<any>(selectSuccess);\r\n  const [openAddTitle, setOpenAddTitle] = useState<boolean>(false);\r\n  const [openUpdateTitle, setOpenUpdateTitle] = useState<boolean>(false);\r\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\r\n  const [idDelete, setIdDelete] = useState<string>('');\r\n  const [pagi, setPagi] = useState<any>(() => ({\r\n    rowsPerPage: _.first(rowsPerArray),\r\n    page: 0,\r\n  }));\r\n  const [keySearch, setKeySearch] = useState<string>('');\r\n  const [listRender, setListRender] = useState<any>({});\r\n\r\n  useEffect((): any => {\r\n    if (!_.isEmpty(groupServiceList) && groupServiceList.length) {\r\n      if (keySearch === '') {\r\n        AppHelper.setPagiClient(groupServiceList, pagi, setListRender);\r\n      } else {\r\n        AppHelper.setSearchPagiClient(\r\n          groupServiceList,\r\n          pagi,\r\n          keySearch,\r\n          setListRender,\r\n        );\r\n      }\r\n    }\r\n  }, [groupServiceList, pagi, keySearch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.resetAll());\r\n    dispatch(actions.getAllManageType(SettingManageType.DepartmentType));\r\n    dispatch(actions.getManageType(SettingManageType.DepartmentType));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(error)) {\r\n      notifyController.setNotifyMessage(error.message).setFailNotify();\r\n      dispatch(actions.clearError());\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(success)) {\r\n      notifyController.setNotifyMessage(success.message).setSuccessNotify();\r\n      dispatch(actions.clearSuccess());\r\n      dispatch(actions.getAllManageType(SettingManageType.DepartmentType));\r\n      closeDialog();\r\n    }\r\n  }, [success]);\r\n\r\n  const syncTitleData = () => {\r\n    dispatch(actions.getAllManageType(SettingManageType.DepartmentType));\r\n  };\r\n\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<any>('code');\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const changeStatusTitle = (e, id) => {\r\n    dispatch(\r\n      actions.changeManageTypeActive({\r\n        id,\r\n        isActive: e.target.checked,\r\n        manageType: SettingManageType.DepartmentType,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const deleteTitle = () => {\r\n    if (idDelete === '') return;\r\n    dispatch(\r\n      actions.deleteManageType({\r\n        id: idDelete,\r\n        manageType: SettingManageType.DepartmentType,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const openDeleteTitle = id => {\r\n    setIdDelete(id);\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const setOpenUpdateTitleModal = departmentType => {\r\n    setOpenUpdateTitle(true);\r\n    dispatch(actions.setTempManageType(departmentType));\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setOpenAddTitle(false);\r\n    setOpenUpdateTitle(false);\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const changeSearch = e => {\r\n    setKeySearch(e.target.value);\r\n    setPagi({\r\n      page: 0,\r\n      rowsPerPage: pagi.rowsPerPage,\r\n    });\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"btn-group\">\r\n            <button\r\n              className=\"btn btn-info\"\r\n              onClick={() => setOpenAddTitle(true)}\r\n            >\r\n              Thêm mới <i className=\"fa fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"btn-group ml-3\">\r\n            <button className=\"btn btn-info\" onClick={syncTitleData}>\r\n              Đồng bộ <i className=\"fa fa-refresh\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"btn-group ml-3\">\r\n            <label\r\n              style={{ alignItems: 'center', margin: '0px', display: 'flex' }}\r\n            >\r\n              <span style={{ display: 'block', width: '90px' }}>Tìm:</span>\r\n              <input\r\n                type=\"search\"\r\n                placeholder=\"Tìm loại phòng khám\"\r\n                className=\"form-control form-control-sm\"\r\n                aria-controls=\"titleTable\"\r\n                value={keySearch}\r\n                onChange={changeSearch}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={tableValue}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!_.isEmpty(listRender) && listRender.data.length) {\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        listRender.data,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      return tableData.map((row, idx) => {\r\n        const title = _.cloneDeep(row);\r\n        return (\r\n          <TableRow key={row.id}>\r\n            {tableValue.map(column => {\r\n              const value = title[column.id];\r\n              if (column.id === 'is_active') {\r\n                if (value) {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#4caf50', fontSize: '16px' }}\r\n                        className=\"fa fa-check-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#ff0000', fontSize: '16px' }}\r\n                        className=\"fa fa-times-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                }\r\n              } else if (column.id === 'actions') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <Tooltip\r\n                      title={'Đổi Trạng thái'}\r\n                      enterDelay={500}\r\n                      leaveDelay={100}\r\n                    >\r\n                      <Switch\r\n                        checked={title.is_active}\r\n                        onChange={e => changeStatusTitle(e, title.id)}\r\n                        color=\"primary\"\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      />\r\n                    </Tooltip>\r\n                    <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs\"\r\n                        onClick={() => setOpenUpdateTitleModal(title)}\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                    <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-danger btn-xs mx-2\"\r\n                        onClick={() => openDeleteTitle(title.id)}\r\n                      >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={tableValue.length}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (e, page) => {\r\n    let changePage = Object.assign({}, pagi, { page });\r\n    setPagi(changePage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = e => {\r\n    let changeRowPerPage = Object.assign({}, pagi, {\r\n      rowsPerPage: +e.target.value,\r\n      page: 0,\r\n    });\r\n    setPagi(changeRowPerPage);\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(listRender)) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          count={listRender.total}\r\n          rowsPerPage={pagi.rowsPerPage}\r\n          page={pagi.page}\r\n          labelRowsPerPage={'Hiển Thị'}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {openAddTitle ? (\r\n        <ModalAddDepartmentType open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      {openUpdateTitle ? (\r\n        <ModalUpdateDepatureType open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      <ModalConfirm\r\n        title={'Bạn có chắc chắn muốn xoá loại phòng khám này?'}\r\n        other={{\r\n          bodyText: '',\r\n        }}\r\n        keyConfirm={''}\r\n        open={openDelete}\r\n        onClose={() => closeDialog()}\r\n        confirmMethod={() => deleteTitle()}\r\n      />\r\n      {loading ? <AppLoading loading={true} /> : null}\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice } from 'store/core/@reduxjs/toolkit';\r\n\r\nexport interface DepartmentState {\r\n  loading?: boolean;\r\n  departments?: any;\r\n  department?: any;\r\n  error?: any;\r\n  success?: any;\r\n}\r\n\r\nexport const initialState: DepartmentState = {\r\n  loading: false,\r\n  departments: {},\r\n  department: {},\r\n  error: {},\r\n  success: {},\r\n};\r\n\r\nconst MedicineSlice = createSlice({\r\n  name: 'departments',\r\n  initialState,\r\n  reducers: {\r\n    getDepts(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getDeptsSuccess(state, action) {\r\n      state.loading = false;\r\n      state.departments = action.payload;\r\n    },\r\n\r\n    getDeptsFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getDeptById(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getDeptByIdSuccess(state, action) {\r\n      state.loading = false;\r\n      state.department = action.payload;\r\n    },\r\n\r\n    getDeptByIdFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    createDept(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    createDeptSuccess(state, action) {\r\n      state.loading = false;\r\n    },\r\n\r\n    createDeptFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    updateDept(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    updateDeptSuccess(state, action) {\r\n      state.loading = false;\r\n    },\r\n\r\n    updateDeptFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    deleteDept(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    deleteDeptSuccess(state, action) {\r\n      state.loading = false;\r\n    },\r\n\r\n    deleteDeptFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    clearDepartment(state) {\r\n      state.department = {};\r\n    },\r\n\r\n    resetAll(state) {\r\n      state.departments = {};\r\n      state.error = {};\r\n      state.success = {};\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions, reducer, name: sliceKey } = MedicineSlice;\r\n","import { call, put, takeLatest, all } from 'redux-saga/effects';\r\nimport { actions } from './slice';\r\nimport { configResponse } from 'utils/request';\r\nimport { get } from 'lodash';\r\nimport { DepartmentHttp } from '../services/department.http';\r\nconst api = new DepartmentHttp();\r\n\r\nexport function* getDepts(api, action) {\r\n  const response = yield call(api.getDepts, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getDeptsSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getDeptsFailure(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getDeptById(api, action) {\r\n  const response = yield call(api.getDeptById, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getDeptByIdSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getDeptByIdFailure(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* createDept(api, action) {\r\n  const response = yield call(api.createDept, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.createDeptSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.createDeptFailure(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* updateDept(api, action) {\r\n  const response = yield call(api.updateDept, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.updateDeptSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.updateDeptFailure(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* deleteDept(api, action) {\r\n  const response = yield call(api.deleteDept, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.deleteDeptSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.deleteDeptFailure(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* DepartmentSaga() {\r\n  yield all([\r\n    yield takeLatest(actions.getDepts.type, getDepts, api),\r\n    yield takeLatest(actions.getDeptById.type, getDeptById, api),\r\n    yield takeLatest(actions.createDept.type, createDept, api),\r\n    yield takeLatest(actions.updateDept.type, updateDept, api),\r\n    yield takeLatest(actions.deleteDept.type, deleteDept, api),\r\n  ]);\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nimport { RootState } from 'store/core/types';\r\nimport { initialState } from './slice';\r\n\r\nconst selectPatientState = (state: RootState) =>\r\n  state.departments || initialState;\r\n\r\nexport const selectListDept = createSelector(\r\n  [selectPatientState],\r\n  dept => dept.departments,\r\n);\r\n\r\nexport const selectDept = createSelector(\r\n  [selectPatientState],\r\n  dept => dept.department,\r\n);\r\n\r\nexport const selectLoading = createSelector(\r\n  [selectPatientState],\r\n  dept => dept.loading,\r\n);\r\n\r\nexport const selectError = createSelector(\r\n  [selectPatientState],\r\n  dept => dept.error,\r\n);\r\n\r\nexport const selectSuccess = createSelector(\r\n  [selectPatientState],\r\n  dept => dept.success,\r\n);\r\n","export const ApiRoutes = {\r\n  DEPT_SERVICE: '/api/DepartmentService',\r\n  CREATE_DEPT_SERVICE: '/api/DepartmentService/department/services',\r\n  UPDATE_DEPT_SERVICE: '/api/DepartmentService/department/services',\r\n  DEPT_GET_ID_SERVICE: '/api/DepartmentService/department',\r\n  VALUE_TYPE: '/api/ListValueType/get-list-value-type',\r\n  LIST_VALUE: '/api/ListValue/get-list-values-activated',\r\n  LIST_VALUE_EX: '/api/ListValueExtend',\r\n  GET_ALL_SERVICES: '/api/ListValueExtend/get-all-list-values/DV',\r\n  PERFORMANCE_ROOM: 'api/Department',\r\n};\r\n\r\nexport const RESPONSE_DEPARTMENT_CONSTANT = {\r\n  CREATE_DEPT_SERVICE_SUCCESS: 'CREATE_DEPT_SERVICE_SUCCESS',\r\n  CREATE_DEPT_SERVICE_FAIL: 'CREATE_DEPT_SERVICE_FAIL',\r\n  UPDATE_DEPT_SERVICE_SUCCESS: 'UPDATE_DEPT_SERVICE_SUCCESS',\r\n  UPDATE_DEPT_SERVICE_FAIL: 'UPDATE_DEPT_SERVICE_FAIL',\r\n  GET_LIST_DEP_SERVICE_SUCCESS: 'GET_LIST_DEP_SERVICE_SUCCESS',\r\n  GET_LIST_DEP_SERVICE_FAIL: 'GET_LIST_DEP_SERVICE_FAIL',\r\n  GET_DEPT_BY_ID_SUCCESS: 'GET_DEPT_BY_ID_SUCCESS',\r\n  GET_DEPT_BY_ID_FAIL: 'GET_DEPT_BY_ID_FAIL',\r\n};\r\n\r\nexport const RESPONSE_DEPARTMENT_MESSAGE = {\r\n  CREATE_DEPT_SERVICE_SUCCESS: 'Tạo Mới phòng khám - dịch vụ Thành Công',\r\n  CREATE_DEPT_SERVICE_FAIL: 'Tạo Mới phòng khám - dịch vụ Thất Bại',\r\n  UPDATE_DEPT_SERVICE_SUCCESS: 'Cập Nhật phòng khám - dịch vụ Thành Công',\r\n  UPDATE_DEPT_SERVICE_FAIL: 'Cập Nhật phòng khám - dịch vụ Thất Bại',\r\n  GET_LIST_DEP_SERVICE_SUCCESS: 'Lấy phòng ban - dịch vụ thành công',\r\n  GET_LIST_DEP_SERVICE_FAIL: 'Lấy phòng ban - dịch vụ thất Bại',\r\n};\r\n\r\nexport const TableGroups: any = [\r\n  { id: 'actions', label: 'Chức năng', minWidth: 130 },\r\n  { id: 'service_code', label: 'Mã PK Dịch vụ', minWidth: 130 },\r\n  { id: 'service_name', label: 'Tên PK Dịch vụ', minWidth: 300 },\r\n  { id: 'examination_code', label: 'Mã PK Chỉ định', minWidth: 150 },\r\n  { id: 'examination_name', label: 'Tên PK Chỉ định', minWidth: 250 },\r\n  { id: 'room_code', label: 'Mã PK Thực hiện', minWidth: 150 },\r\n  { id: 'room_name', label: 'Tên PK Thực hiện', minWidth: 300 },\r\n  { id: 'is_active', label: 'Trạng thái', minWidth: 150 },\r\n];\r\nexport enum FilterKey {\r\n  DEPARTMENT = 'DEPARTMENT',\r\n  SERVICE = 'SERVICE',\r\n  EXAMINATION = 'EXAMINATION',\r\n  DEFAULT = 'DEFAULT',\r\n  ACTIVE = 'ACTIVE',\r\n}\r\n\r\nexport const optionsDeptType = [\r\n  { id: 0, description: 'Thường' },\r\n  { id: 1, description: 'Dịch vụ' },\r\n  { id: 2, description: 'Nam' },\r\n  { id: 3, description: 'Nữ' },\r\n  { id: 4, description: 'LDLK (N)' },\r\n];\r\n\r\nexport const optionsCreateBy = [\r\n  { id: '', description: 'Tất cả' },\r\n  { id: 0, description: 'Website' },\r\n  { id: 1, description: 'Đồng bộ HIS' },\r\n  { id: 2, description: 'Excel' },\r\n];\r\n\r\nexport const typePatient = [\r\n  { value: '1', label: 'BHYT' },\r\n  { value: '2', label: 'Thu phí' },\r\n  { value: '3', label: 'Dịch vụ' },\r\n];\r\n\r\nexport const areaClinci = [\r\n  { code: 'B', label: 'Khu B' },\r\n  { code: 'D', label: 'Khu D' },\r\n];\r\n","import { TEKDateTimeService } from 'services/datetime.service';\r\n\r\nexport interface Time {\r\n  start: any;\r\n  end: any;\r\n}\r\n\r\nexport interface AutoNumber {\r\n  total: number;\r\n  AM: Time;\r\n  PM: Time;\r\n  msgError?: string;\r\n  setAutoNumber?: () => void;\r\n}\r\n\r\nconst listHours: any = TEKDateTimeService.createListTimeInDay();\r\nconst listHoursAM: any = listHours.slice(5, 13);\r\nconst listHoursPM: any = listHours.slice(13, 17);\r\nconst defaultError: string = 'Tổng số lượt lớn hơn tổng thời gian khám';\r\n\r\nexport class NumberService {\r\n  static autoGenerateNumber({\r\n    total,\r\n    AM,\r\n    PM,\r\n    msgError,\r\n  }: AutoNumber): any | Error {\r\n    if (!total || !AM || !PM || !AM.start || !AM.end || !PM.start || !PM.end) {\r\n      throw new Error('0');\r\n    }\r\n    const startAmMinutes = listHoursAM.findIndex(am => am.value === AM.start);\r\n    const endAmMinutes = listHoursAM.findIndex(am => am.value === AM.end);\r\n    const totalMinutesAm = (endAmMinutes - startAmMinutes) * 60;\r\n    const startPmMinutes = listHoursPM.findIndex(am => am.value === PM.start);\r\n    const endPmMinutes = listHoursPM.findIndex(am => am.value === PM.end);\r\n    const totalMinutesPm = (endPmMinutes - startPmMinutes) * 60;\r\n    const totalMinutes = totalMinutesAm + totalMinutesPm;\r\n    if (totalMinutes < total) {\r\n      throw new Error(\r\n        msgError !== '' ? msgError : `${defaultError} ${totalMinutes} phút`,\r\n      );\r\n    }\r\n    return {\r\n      totalMinutes,\r\n      timeOnMinute: Math.floor(totalMinutes / total),\r\n    };\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as DeptSelector from 'store/department/shared/selectors';\r\nimport { sliceKey, actions, reducer } from 'store/department/shared/slice';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { DepartmentSaga } from 'store/department/shared/saga';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { TEKDateTimeService } from 'services/datetime.service';\r\nimport { NumberService, Time } from 'services/number.service';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { areaClinci } from 'store/departmentService/constants/departmentService.constant';\r\n\r\nconst listHours: any = TEKDateTimeService.createListTimeInDay();\r\nconst listHoursAM: any = listHours.slice(5, 13);\r\nconst listHoursPM: any = listHours.slice(13, 17);\r\nconst selectHours = (start: number, end: number, listHours: any[]): any[] => {\r\n  return listHours.slice(start, end);\r\n};\r\n\r\nconst defaultValues = {\r\n  name: null,\r\n  code: null,\r\n  address: null,\r\n  areaCode: null,\r\n  totalNumber: 0,\r\n  startTimeActiveAM: null,\r\n  endTimeActiveAM: null,\r\n  startTimeActivePM: null,\r\n  endTimeActivePM: null,\r\n  isActive: true,\r\n  listValueId: null,\r\n};\r\n\r\nconst convertRequest = () => {\r\n  return {\r\n    type: 'TEK',\r\n    displayOrder: 0,\r\n    isSystem: true,\r\n    description: '',\r\n    ageTo: 90,\r\n    ageFrom: 0,\r\n    typeGender: 0,\r\n  };\r\n};\r\n\r\nexport function DeptActions({ open, onClose, valueRoomsType, valueNCK }) {\r\n  const dispatch = useDispatch();\r\n  useInjectReducer({ key: sliceKey, reducer });\r\n  useInjectSaga({ key: sliceKey, saga: DepartmentSaga });\r\n  const dept = useSelector(DeptSelector.selectDept);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    control,\r\n    setValue,\r\n    getValues,\r\n  } = useForm({ defaultValues });\r\n  const [timeEndAM, setTimeEndAM] = useState<any[]>(listHoursAM);\r\n  const [timeEndPM, setTimeEndPM] = useState<any[]>(listHoursPM);\r\n  const [minute, setMinute] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(actions.clearDepartment());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function initFormData(dept) {\r\n      if (!_.isEmpty(dept)) {\r\n        setValue('code', dept['code']);\r\n        setValue('name', dept['name']);\r\n        setValue('address', dept['address']);\r\n        setValue('areaCode', dept['areaCode']);\r\n        if (dept.department_config) {\r\n          const {\r\n            total_number,\r\n            start_time_active_am,\r\n            end_time_active_am,\r\n            start_time_active_pm,\r\n            end_time_active_pm,\r\n            time_on_minute,\r\n          } = dept['department_config'];\r\n          setValue('totalNumber', total_number);\r\n          setValue('isActive', dept?.is_active);\r\n          setValue('startTimeActiveAM', start_time_active_am);\r\n          setValue('endTimeActiveAM', end_time_active_am);\r\n          setValue('startTimeActivePM', start_time_active_pm);\r\n          setValue('endTimeActivePM', end_time_active_pm);\r\n          setValue('areaCode', dept?.area_code);\r\n          setValue('listValueId', dept?.list_value?.id);\r\n          setMinute(time_on_minute || 0);\r\n        }\r\n      }\r\n    }\r\n    setTimeout(() => initFormData(dept));\r\n  }, [dept]);\r\n\r\n  const onSubmit = (values: any) => {\r\n    if (_.isEmpty(dept)) {\r\n      return dispatch(\r\n        actions.createDept({\r\n          ...values,\r\n          ...convertRequest(),\r\n          listValueTypeId: valueRoomsType.id,\r\n          timeOnMinute: minute,\r\n        }),\r\n      );\r\n    }\r\n    dispatch(\r\n      actions.updateDept({\r\n        id: dept.id,\r\n        dept: {\r\n          ...values,\r\n          ...convertRequest(),\r\n          timeOnMinute: minute,\r\n          display_order: dept.display_order || 0,\r\n        },\r\n      }),\r\n    );\r\n  };\r\n\r\n  const autoMinutes = () => {\r\n    try {\r\n      const totalNumber = getValues('totalNumber');\r\n      const AM: Time = {\r\n        start: getValues('startTimeActiveAM'),\r\n        end: getValues('endTimeActiveAM'),\r\n      };\r\n      const PM: Time = {\r\n        start: getValues('startTimeActivePM'),\r\n        end: getValues('endTimeActivePM'),\r\n      };\r\n      const { timeOnMinute }: any | Error = NumberService.autoGenerateNumber({\r\n        total: totalNumber,\r\n        AM,\r\n        PM,\r\n        msgError: '',\r\n      });\r\n      setMinute(timeOnMinute === Infinity ? 0 : timeOnMinute);\r\n    } catch (error) {\r\n      setMinute(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3 font-weight-bold\">\r\n            {!_.isEmpty(dept) ? 'Cập nhật' : 'Thêm'} Phòng khám\r\n          </h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">Mã phòng khám</label>\r\n            <input\r\n              id=\"code\"\r\n              type=\"text\"\r\n              className=\"form-control Code\"\r\n              name=\"code\"\r\n              ref={register({ required: true })}\r\n              placeholder=\"Mã\"\r\n              autoComplete=\"off\"\r\n            />\r\n            {errors.code && errors.code?.type === 'required' ? (\r\n              <span style={{ color: ' #fb0606' }}>\r\n                Vui lòng nhập mã phòng khám\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Nơi thực hiện</label>\r\n            <input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"name\"\r\n              ref={register({ required: true })}\r\n              placeholder=\"Nhập nơi thực hiện\"\r\n              autoComplete=\"off\"\r\n            />\r\n            {errors.name && errors.name?.type === 'required' ? (\r\n              <span style={{ color: ' #fb0606' }}>\r\n                Vui lòng nhập nơi thực hiện\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"address\">Địa chỉ</label>\r\n            <input\r\n              id=\"address\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"address\"\r\n              ref={register({ required: true })}\r\n              placeholder=\"Nhập địa chỉ\"\r\n              autoComplete=\"off\"\r\n            />\r\n            {errors.address && errors.address?.type === 'required' ? (\r\n              <span style={{ color: ' #fb0606' }}>Vui lòng nhập địa chỉ</span>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"areaCode\">Khu phòng khám</label>\r\n            <select\r\n              id=\"areaCode\"\r\n              className=\"form-control\"\r\n              name=\"areaCode\"\r\n              ref={register({ required: true })}\r\n              placeholder=\"Nhập phòng khám\"\r\n            >\r\n              <option value=\"\">Chọn khu phòng khám</option>\r\n              {areaClinci.map(({ code, label }) => (\r\n                <option key={code} value={code}>\r\n                  {label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.areaCode && errors.areaCode?.type === 'required' ? (\r\n              <span style={{ color: ' #fb0606' }}>\r\n                Vui lòng chọn khu phòng khám\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"listValueId\">Nhóm chuyên khoa</label>\r\n            <select\r\n              id=\"listValueId\"\r\n              className=\"form-control\"\r\n              name=\"listValueId\"\r\n              ref={register({ required: true })}\r\n              placeholder=\"Nhập Nhóm chuyên khoa\"\r\n            >\r\n              <option value=\"\">Chọn nhóm chuyên khoa</option>\r\n              {!_.isEmpty(valueNCK) &&\r\n                valueNCK.length &&\r\n                valueNCK.map(({ id, description }) => (\r\n                  <option key={id} value={id}>\r\n                    {description}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n            {errors.listValueId && errors.listValueId?.type === 'required' ? (\r\n              <span style={{ color: ' #fb0606' }}>\r\n                Vui lòng chọn nhóm chuyên khoa\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"startTimeActiveAM\">Thời gian buổi sáng</label>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"d-block\" style={{ width: '47%' }}>\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"startTimeActiveAM\"\r\n                  ref={register({\r\n                    required: true,\r\n                  })}\r\n                  onChange={({\r\n                    target: { value },\r\n                  }: React.ChangeEvent<HTMLSelectElement>) => {\r\n                    autoMinutes();\r\n                    setValue('endTimeActiveAM', null);\r\n                    const startIndex = _.findIndex(\r\n                      listHoursAM,\r\n                      time => time.value === value,\r\n                    );\r\n                    if (startIndex > -1) {\r\n                      setTimeEndAM(\r\n                        selectHours(\r\n                          startIndex + 1,\r\n                          listHoursAM.length,\r\n                          listHoursAM,\r\n                        ),\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  <option value=\"\">Bắt đầu</option>\r\n                  {listHoursAM\r\n                    .slice(0, listHoursAM.length - 1)\r\n                    .map((hour, idx) => (\r\n                      <option value={hour.value} key={idx}>\r\n                        {TEKDateTimeService.formatRenderTime(hour.value)}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n                {errors.startTimeActiveAM &&\r\n                  errors.startTimeActiveAM?.type === 'required' && (\r\n                    <span style={{ color: ' #fb0606' }}>Chọn giờ bắt đầu</span>\r\n                  )}\r\n              </div>\r\n              <div className=\"d-block\" style={{ width: '47%' }}>\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"endTimeActiveAM\"\r\n                  ref={register({\r\n                    required: true,\r\n                  })}\r\n                  onChange={autoMinutes}\r\n                >\r\n                  <option value=\"\">Kết thúc</option>\r\n                  {timeEndAM.map((hour, idx) => (\r\n                    <option value={hour.value} key={idx}>\r\n                      {TEKDateTimeService.formatRenderTime(hour.value)}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                {errors.endTimeActiveAM &&\r\n                  errors.endTimeActiveAM?.type === 'required' && (\r\n                    <span style={{ color: ' #fb0606' }}>Chọn giờ kết thúc</span>\r\n                  )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Thời gian buổi chiều</label>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"d-block\" style={{ width: '47%' }}>\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"startTimeActivePM\"\r\n                  ref={register({\r\n                    required: true,\r\n                  })}\r\n                  onChange={({\r\n                    target: { value },\r\n                  }: React.ChangeEvent<HTMLSelectElement>) => {\r\n                    autoMinutes();\r\n                    setValue('endTimeActivePM', null);\r\n                    const startIndex = _.findIndex(\r\n                      listHoursPM,\r\n                      time => time.value === value,\r\n                    );\r\n                    if (startIndex > -1) {\r\n                      setTimeEndPM(\r\n                        selectHours(\r\n                          startIndex + 1,\r\n                          listHoursPM.length,\r\n                          listHoursPM,\r\n                        ),\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  <option value=\"\">Bắt đầu</option>\r\n                  {listHoursPM\r\n                    .slice(0, listHoursPM.length - 1)\r\n                    .map((hour, idx) => (\r\n                      <option value={hour.value} key={idx}>\r\n                        {TEKDateTimeService.formatRenderTime(hour.value)}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n                {errors.startTimeActivePM &&\r\n                  errors.startTimeActivePM?.type === 'required' && (\r\n                    <span style={{ color: ' #fb0606' }}>Chọn giờ bắt đầu</span>\r\n                  )}\r\n              </div>\r\n              <div className=\"d-block\" style={{ width: '47%' }}>\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"endTimeActivePM\"\r\n                  ref={register({\r\n                    required: true,\r\n                  })}\r\n                  onChange={autoMinutes}\r\n                >\r\n                  <option value=\"\">Kết thúc</option>\r\n                  {timeEndPM.map((hour, idx) => (\r\n                    <option value={hour.value} key={idx}>\r\n                      {TEKDateTimeService.formatRenderTime(hour.value)}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                {errors.endTimeActivePM &&\r\n                  errors.endTimeActivePM?.type === 'required' && (\r\n                    <span style={{ color: ' #fb0606' }}>Chọn giờ kết thúc</span>\r\n                  )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"d-block\" style={{ width: '47%' }}>\r\n                <label htmlFor=\"totalNumber\">Tổng số lượt</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"totalNumber\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tổng số lượt\"\r\n                  ref={register({\r\n                    required: true,\r\n                    //min: 1,\r\n                    max: 240,\r\n                  })}\r\n                  onChange={autoMinutes}\r\n                />\r\n                {errors.totalNumber &&\r\n                  errors.totalNumber?.type === 'required' && (\r\n                    <span style={{ color: ' #fb0606' }}>Nhập tổng số lượt</span>\r\n                  )}\r\n                {/* https://jira.tekmedi.com/browse/CRBTC-986\r\n                errors.totalNumber && errors.totalNumber?.type === 'min' && (\r\n                  <span style={{ color: ' #fb0606' }}>\r\n                    Tổng số lượt tối thiểu là 1 lượt\r\n                  </span>\r\n                )*/}\r\n                {errors.totalNumber && errors.totalNumber?.type === 'max' && (\r\n                  <span style={{ color: ' #fb0606' }}>\r\n                    Tổng số lượt tối đa là 240 lượt\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className=\"d-block\" style={{ width: '47%' }}>\r\n                <label htmlFor=\"timeOnMinute\">Số phút mỗi lượt</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"timeOnMinute\"\r\n                  className=\"form-control\"\r\n                  value={minute}\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-inline\" htmlFor=\"isActive\">\r\n              <Controller\r\n                name=\"isActive\"\r\n                control={control}\r\n                defaultValue={true}\r\n                render={({ ...input }) => {\r\n                  return (\r\n                    <Checkbox\r\n                      checked={input.value}\r\n                      color=\"primary\"\r\n                      onChange={({ target: { checked } }) =>\r\n                        setValue('isActive', checked)\r\n                      }\r\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                  );\r\n                }}\r\n              />\r\n              Trạng thái\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end py-3 mb-0\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              onClick={onClose}\r\n            >\r\n              Đóng\r\n            </button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">\r\n              {!_.isEmpty(dept) ? 'Cập nhật' : 'Thêm'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-fallthrough */\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AppLoading from 'app/components/Loading';\r\nimport { ModalConfirm } from 'app/components/Modal/Confirm';\r\nimport STableBody from 'app/components/STableBody';\r\nimport STableHead from 'app/components/STableHead';\r\nimport TableHeaderSort from 'app/components/STableHeaderSort';\r\nimport * as _ from 'lodash';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Unsubscribe } from 'redux';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport {\r\n  rowsPerArray,\r\n  useStyles,\r\n} from 'store/common/constants/common.constant';\r\nimport { RootStore } from 'store/configureStore';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport * as DeptConst from 'store/department/constants/department.constant';\r\nimport { TableGroups } from 'store/department/constants/department.constant';\r\nimport { DepartmentSaga } from 'store/department/shared/saga';\r\nimport * as DeptSelector from 'store/department/shared/selectors';\r\nimport * as DeptSlice from 'store/department/shared/slice';\r\nimport { SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport * as SettingSelector from 'store/setting/shared/selectors';\r\nimport * as SettingSlice from 'store/setting/shared/slice';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { DeptActions } from '../components/Department/DeptActions';\r\n\r\nexport class Config {\r\n  [key: string]: any;\r\n  constructor(config: any = null) {\r\n    this.AM = {\r\n      start_time_active_am: config ? config.start_time_active_am : '',\r\n      end_time_active_am: config ? config.end_time_active_am : '',\r\n    };\r\n    this.PM = {\r\n      start_time_active_pm: config ? config.start_time_active_pm : '',\r\n      end_time_active_pm: config ? config.end_time_active_pm : '',\r\n    };\r\n    this.time_on_minute = config ? config.time_on_minute : 0;\r\n    this.total_number = config?.total_number;\r\n    this.used_number = config?.used_number;\r\n    this.scheduler_number = config?.scheduler_number;\r\n  }\r\n}\r\n\r\nconst defaultPagi = {\r\n  pageSize: 10,\r\n  pageNumber: 1,\r\n};\r\n\r\nexport function Department() {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({ key: DeptSlice.sliceKey, reducer: DeptSlice.reducer });\r\n  useInjectSaga({ key: DeptSlice.sliceKey, saga: DepartmentSaga });\r\n  useInjectReducer({\r\n    key: SettingSlice.sliceKey,\r\n    reducer: SettingSlice.reducer,\r\n  });\r\n  useInjectSaga({ key: SettingSlice.sliceKey, saga: SettingSaga });\r\n  const { register, handleSubmit, getValues, setValue } = useForm();\r\n  const departments = useSelector(DeptSelector.selectListDept);\r\n  const valueRoomsType = useSelector(SettingSelector.selectSettingType);\r\n  const valueNCK = useSelector(SettingSelector.selectSpeciaList);\r\n  const loading = useSelector(DeptSelector.selectLoading);\r\n  const [openModal, setOpenModal] = useState<boolean>(false);\r\n  const [confirmDel, setConfirmDel] = useState<boolean>(false);\r\n  const [idDelete, setIdDelete] = useState<string>('');\r\n  const [pagi, setPagi] = useState(defaultPagi);\r\n  const pagiRef = useRef(pagi);\r\n  useEffect(() => {\r\n    pagiRef.current = pagi;\r\n  }, [pagi]);\r\n\r\n  const [order, setOrder] = useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = useState<any>('name');\r\n  const orderRef = useRef<Order>('asc');\r\n  const orderByRef = useRef<string>('time');\r\n\r\n  useEffect(() => {\r\n    const rootStore$: Unsubscribe = RootStore.subscribe(() => {\r\n      const { type, payload }: any = RootStore.getState().lastAction;\r\n      switch (type) {\r\n        case DeptSlice.actions.createDeptSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              DeptConst.RESPONSE_MESSAGE.CREATE_DEPARTMENT_SUCCESS,\r\n            )\r\n            .setSuccessNotify();\r\n          regetListDept();\r\n          break;\r\n        case DeptSlice.actions.updateDeptSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              DeptConst.RESPONSE_MESSAGE.UPDATE_DEPARTMENT_SUCCESS,\r\n            )\r\n            .setSuccessNotify();\r\n          dispatch(\r\n            DeptSlice.actions.getDepts({\r\n              ...getFormValue(),\r\n              ...pagiRef.current,\r\n              sort_field: orderByRef.current,\r\n              sort_type: orderRef.current,\r\n            }),\r\n          );\r\n          setOpenModal(false);\r\n          setIdDelete('');\r\n          setConfirmDel(false);\r\n          break;\r\n        case DeptSlice.actions.deleteDeptSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              DeptConst.RESPONSE_MESSAGE.DELETE_DEPARTMENT_SUCCESS,\r\n            )\r\n            .setSuccessNotify();\r\n          regetListDept();\r\n          break;\r\n        case DeptSlice.actions.createDeptFailure.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              payload\r\n                ? payload\r\n                : DeptConst.RESPONSE_MESSAGE.DELETE_DEPARTMENT_FAIL,\r\n            )\r\n            .setFailNotify();\r\n          break;\r\n        case DeptSlice.actions.updateDeptFailure.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              payload\r\n                ? payload\r\n                : DeptConst.RESPONSE_MESSAGE.UPDATE_DEPARTMENT_FAIL,\r\n            )\r\n            .setFailNotify();\r\n          break;\r\n        case DeptSlice.actions.deleteDeptFailure.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              payload\r\n                ? payload\r\n                : DeptConst.RESPONSE_MESSAGE.DELETE_DEPARTMENT_FAIL,\r\n            )\r\n            .setFailNotify();\r\n          regetListDept();\r\n          break;\r\n      }\r\n    });\r\n    dispatch(SettingSlice.actions.getManageType(SettingManageType.Department));\r\n    dispatch(SettingSlice.actions.getSpecialist(SettingManageType.Specialist));\r\n    dispatch(\r\n      DeptSlice.actions.getDepts({\r\n        ...getFormValue(),\r\n        sort_field: orderByRef.current,\r\n        sort_type: orderRef.current,\r\n      }),\r\n    );\r\n    return () => {\r\n      rootStore$();\r\n    };\r\n  }, []);\r\n\r\n  const getFormValue = () => {\r\n    return {\r\n      code: getValues('code'),\r\n      description: getValues('description'),\r\n      page_size: pagi.pageSize,\r\n      page_number: pagi.pageNumber,\r\n    };\r\n  };\r\n\r\n  const regetListDept = () => {\r\n    dispatch(DeptSlice.actions.getDepts({ ...getFormValue() }));\r\n    setOpenModal(false);\r\n    setIdDelete('');\r\n    setConfirmDel(false);\r\n  };\r\n\r\n  const deleteDept = () => {\r\n    if (idDelete === '') return;\r\n    dispatch(DeptSlice.actions.deleteDept(idDelete));\r\n  };\r\n\r\n  const submitSearch = (values: any) => {\r\n    dispatch(\r\n      DeptSlice.actions.getDepts({\r\n        code: values.code,\r\n        description: values.description,\r\n        page_size: pagi.pageSize,\r\n        page_number: 1,\r\n        sort_field: orderByRef.current,\r\n        sort_type: orderRef.current,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setPagi(defaultPagi);\r\n    setValue('code', null);\r\n    setValue('description', null);\r\n    setOrder('asc');\r\n    setOrderBy('name');\r\n    dispatch(\r\n      DeptSlice.actions.getDepts({\r\n        ...getFormValue(),\r\n        page_size: defaultPagi.pageSize,\r\n        page_number: defaultPagi.pageNumber,\r\n        sort_field: 'name',\r\n        sort_type: 'asc',\r\n      }),\r\n    );\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <form className=\"form-inline w-100\" onSubmit={handleSubmit(submitSearch)}>\r\n        <div className=\"row w-100\">\r\n          <div className=\"col-md-3 col-xl-3 pr-0\">\r\n            <input\r\n              className=\"form-control mr-sm-2 w-100\"\r\n              type=\"code\"\r\n              name=\"code\"\r\n              placeholder=\"Tìm theo mã phòng khám\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-xl-3 pr-0\">\r\n            <input\r\n              className=\"form-control mr-sm-2 w-100\"\r\n              type=\"description\"\r\n              name=\"description\"\r\n              placeholder=\"Tìm theo tên phòng khám\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6 col-xl-6 d-flex\">\r\n            <div className=\"btn-group\">\r\n              <button\r\n                className=\"btn btn-outline-success btn__config mr-3\"\r\n                type=\"submit\"\r\n              >\r\n                Tìm kiếm <i className=\"fa fa-search\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n              <button\r\n                className=\"btn btn-primary btn__config mr-3\"\r\n                type=\"button\"\r\n                onClick={() => setOpenModal(true)}\r\n              >\r\n                Thêm phòng khám <i className=\"fa fa-plus\"></i>\r\n              </button>\r\n              <button\r\n                className=\"btn btn-warning btn__config\"\r\n                type=\"button\"\r\n                onClick={handleReset}\r\n              >\r\n                Reset <i className=\"fa fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const renderData = useMemo(() => {\r\n    const { data = [], total_records, page_number, page_size } = departments;\r\n    return {\r\n      data,\r\n      total: total_records,\r\n      pageNumber: page_number,\r\n      pageSize: page_size,\r\n    };\r\n  }, [departments]);\r\n\r\n  const renderTable = () => {\r\n    if (!_.isEmpty(renderData) && renderData.data.length) {\r\n      /*\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        renderData.data,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      */\r\n      const tableData: any[] = renderData.data;\r\n      return tableData\r\n        .map(item => {\r\n          return {\r\n            ...item,\r\n            ...new Config(item?.department_config),\r\n          };\r\n        })\r\n        .map((row, idx) => {\r\n          const dept = _.cloneDeep(row);\r\n          return (\r\n            <TableRow key={idx} className=\"p-0\">\r\n              {TableGroups.map(column => {\r\n                const value = dept[column.id];\r\n                if (column.id === 'is_active') {\r\n                  return (\r\n                    <TableCell key={column.id} align=\"center\">\r\n                      <i\r\n                        style={{\r\n                          color: value ? '#4caf50' : '#ff0000',\r\n                          fontSize: '16px',\r\n                        }}\r\n                        className={`fa fa-${value ? 'check' : 'times'}-circle`}\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                }\r\n                if (column.id === 'AM') {\r\n                  if (\r\n                    value &&\r\n                    value['start_time_active_am'] === '' &&\r\n                    value['end_time_active_am'] === ''\r\n                  ) {\r\n                    return (\r\n                      <TableCell align=\"center\" key={column.id}>\r\n                        -\r\n                      </TableCell>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <TableCell key={column.id} align=\"center\">\r\n                      <Chip\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        label={AppHelper.formatTimeSlots(value, [\r\n                          'start_time_active_am',\r\n                          'end_time_active_am',\r\n                        ])}\r\n                      />\r\n                    </TableCell>\r\n                  );\r\n                }\r\n                if (column.id === 'PM') {\r\n                  if (\r\n                    value &&\r\n                    value['start_time_active_pm'] === '' &&\r\n                    value['end_time_active_pm'] === ''\r\n                  ) {\r\n                    return (\r\n                      <TableCell align=\"center\" key={column.id}>\r\n                        -\r\n                      </TableCell>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <TableCell key={column.id} align=\"center\">\r\n                      <Chip\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        label={AppHelper.formatTimeSlots(value, [\r\n                          'start_time_active_pm',\r\n                          'end_time_active_pm',\r\n                        ])}\r\n                      />\r\n                    </TableCell>\r\n                  );\r\n                }\r\n                if (column.id === 'code') {\r\n                  return (\r\n                    <TableCell align=\"left\" key={column.id}>\r\n                      {value ? value : '-'}\r\n                    </TableCell>\r\n                  );\r\n                }\r\n                if (column.id === 'time_on_minute') {\r\n                  return (\r\n                    <TableCell align=\"center\" key={column.id}>\r\n                      {value ? value : '-'}\r\n                    </TableCell>\r\n                  );\r\n                }\r\n                if (\r\n                  column.id === 'time_on_minute' ||\r\n                  column.id === 'total_number' ||\r\n                  column.id === 'used_number' ||\r\n                  column.id === 'scheduler_number' ||\r\n                  column.id === 'area_code'\r\n                ) {\r\n                  return (\r\n                    <TableCell align=\"center\" key={column.id}>\r\n                      {value ?? '-'}\r\n                    </TableCell>\r\n                  );\r\n                }\r\n                if (column.id === 'actions') {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                        <button\r\n                          className=\"btn btn-primary btn-xs\"\r\n                          onClick={() => {\r\n                            setOpenModal(true);\r\n                            dispatch(DeptSlice.actions.getDeptById(dept.id));\r\n                          }}\r\n                        >\r\n                          <i className=\"fa fa-pencil\"></i>\r\n                        </button>\r\n                      </Tooltip>\r\n                      <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100}>\r\n                        <button\r\n                          className=\"btn btn-danger btn-xs mx-2\"\r\n                          onClick={() => {\r\n                            setConfirmDel(true);\r\n                            setIdDelete(dept.id);\r\n                          }}\r\n                        >\r\n                          <i className=\"fa fa-trash-o\"></i>\r\n                        </button>\r\n                      </Tooltip>\r\n                    </TableCell>\r\n                  );\r\n                }\r\n                if (column.id === 'queue_number') {\r\n                  return (\r\n                    <TableCell align=\"center\" key={column.id}>\r\n                      {value}\r\n                    </TableCell>\r\n                  );\r\n                }\r\n                return (\r\n                  <TableCell key={column.id} align=\"left\">\r\n                    {value ? value : '-'}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          );\r\n        });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={TableGroups.length}\r\n          >\r\n            Không có dữ liệu\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n    orderRef.current = isAsc ? 'desc' : 'asc';\r\n    orderByRef.current = property;\r\n    dispatch(\r\n      DeptSlice.actions.getDepts({\r\n        ...getFormValue(),\r\n        ...pagiRef.current,\r\n        sort_field: orderByRef.current,\r\n        sort_type: orderRef.current,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={TableGroups}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, page: number) => {\r\n    let changePage = Object.assign({}, pagi, {\r\n      pageNumber: page + 1,\r\n    });\r\n    setPagi(changePage);\r\n    dispatch(\r\n      DeptSlice.actions.getDepts({\r\n        ...getFormValue(),\r\n        ...changePage,\r\n        sort_field: orderByRef.current,\r\n        sort_type: orderRef.current,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    let changeRowPerPage = Object.assign({}, pagi, {\r\n      pageSize: +event.target.value,\r\n      pageNumber: 1,\r\n    });\r\n    setPagi(changeRowPerPage);\r\n    dispatch(\r\n      DeptSlice.actions.getDepts({\r\n        ...getFormValue(),\r\n        ...changeRowPerPage,\r\n        sort_field: orderByRef.current,\r\n        sort_type: orderRef.current,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(renderData) && renderData.data.length) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          labelRowsPerPage=\"Hiển Thị\"\r\n          count={renderData.total}\r\n          rowsPerPage={renderData.pageSize}\r\n          page={renderData.pageNumber - 1}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {loading ? <AppLoading loading={true} /> : null}\r\n      <ModalConfirm\r\n        title={'Bạn có chắc chắn muốn xoá phòng khám không?'}\r\n        other={{\r\n          bodyText: '',\r\n        }}\r\n        keyConfirm={''}\r\n        open={confirmDel}\r\n        onClose={() => setConfirmDel(false)}\r\n        confirmMethod={() => deleteDept()}\r\n      />\r\n      {openModal && (\r\n        <DeptActions\r\n          valueRoomsType={valueRoomsType}\r\n          valueNCK={valueNCK}\r\n          open={openModal}\r\n          onClose={() => setOpenModal(false)}\r\n        />\r\n      )}\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-color-default\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <STableHead>{renderColumns()}</STableHead>\r\n                    <STableBody>{renderTable()}</STableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const MedicineApiRoutes = {\r\n  GET_ALL: '/api/Medicine/all',\r\n  GET_BY_ID: '/api/Medicine/find',\r\n  CREATE: '/api/Medicine/add',\r\n  CHANGE_STATUS: '/api/Medicine/change-active',\r\n  UPDATE: '/api/Medicine/update',\r\n  DELETE: '/api/Medicine/delete',\r\n  CHECK_UNIQUE_CODE: '/api/Medicine/check-code-unique',\r\n};\r\n\r\nexport const RESPONSE_CONSTANT = {\r\n  CHANGE_STATUS_MEDICINE_SUCCESS: 'CHANGE_STATUS_MEDICINE_SUCCESS',\r\n  CHANGE_STATUS_MEDICINE_FAIL: 'CHANGE_STATUS_MEDICINE_FAIL',\r\n  CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n  CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n  DELETE_MEDICINE_SUCCESS: 'DELETE_MEDICINE_SUCCESS',\r\n  DELETE_MEDICINE_FAIL: 'DELETE_MEDICINE_FAIL',\r\n  CREATE_MEDICINE_SUCCESS: 'CREATE_MEDICINE_SUCCESS',\r\n  CREATE_MEDICINE_FAIL: 'CREATE_MEDICINE_FAIL',\r\n  UPDATE_MEDICINE_SUCCESS: 'UPDATE_MEDICINE_SUCCESS',\r\n  UPDATE_MEDICINE_FAIL: 'UPDATE_MEDICINE_TYPE_FAIL',\r\n};\r\n\r\nexport const RESPONSE_MESSAGE = {\r\n  CHANGE_STATUS_MEDICINE_SUCCESS: 'Thay đổi trạng thái Thuốc-Vật Tư thành công',\r\n  CHANGE_STATUS_MEDICINE_FAIL: 'Thay đổi trạng thái Thuốc-Vật Tư thất bại',\r\n  CHECK_CODE_SUCCESS: 'Mã Thuốc-Vật Tư Có Thể Sử Dụng',\r\n  CHECK_CODE_FAIL: 'Mã Thuốc-Vật Tư Đã Tồn Tại',\r\n  DELETE_MEDICINE_SUCCESS: 'Xoá Thuốc-Vật Tư thành công',\r\n  DELETE_MEDICINE_FAIL: 'Xoá Thuốc-Vật Tư thất bại',\r\n  CREATE_MEDICINE_SUCCESS: 'Tạo mới Thuốc-Vật Tư thành công',\r\n  CREATE_MEDICINE_FAIL: 'Tạo mới Thuốc-Vật Tư thất bại',\r\n  UPDATE_MEDICINE_SUCCESS: 'Cập nhật Thuốc-Vật Tư thành công',\r\n  UPDATE_MEDICINE_FAIL: 'Cập nhật Thuốc-Vật Tư thất bại',\r\n};\r\n\r\nexport const tableMedicine: any[] = [\r\n  { id: 'no', label: '#', minWidth: 50 },\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'name', label: 'Tên', minWidth: 120 },\r\n  { id: 'usage_scope', label: 'Phạm vi sử dụng', minWidth: 150 },\r\n  { id: 'type', label: 'Loại vật tư', minWidth: 150 },\r\n  { id: 'data_type', label: 'Loại', minWidth: 120 },\r\n  { id: 'actions', label: 'Chức năng', minWidth: 170 },\r\n];\r\n","import { createSlice } from 'store/core/@reduxjs/toolkit';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport {\r\n  RESPONSE_CONSTANT,\r\n  RESPONSE_MESSAGE,\r\n} from '../constants/medicine.constant';\r\n\r\nexport interface MedicineState {\r\n  loading?: boolean;\r\n  error?: any;\r\n  success?: any;\r\n  medicines?: any;\r\n  medicine?: any;\r\n}\r\n\r\nexport const initialState: MedicineState = {\r\n  loading: false,\r\n  error: {},\r\n  success: {},\r\n  medicines: {},\r\n  medicine: {},\r\n};\r\n\r\nconst DeptServiceSlice = createSlice({\r\n  name: 'medicine',\r\n  initialState,\r\n  reducers: {\r\n    getAllMedicine(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getAllMedicineSuccess(state, action) {\r\n      state.medicines = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getAllMedicineFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getMedicineById(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getMedicineByIdSuccess(state, action) {\r\n      state.medicine = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getMedicineByIdFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getMedicine(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getMedicineSuccess(state, action) {\r\n      state.medicine = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getMedicineFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    createMedicine(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    createMedicineSuccess(state, action: any) {\r\n      state.loading = false;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.CREATE_MEDICINE_SUCCESS,\r\n        message: RESPONSE_MESSAGE.CREATE_MEDICINE_SUCCESS,\r\n      };\r\n    },\r\n\r\n    createMedicineFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    deleteMedicine(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    deleteMedicineSuccess(state, action: any) {\r\n      state.loading = false;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.DELETE_MEDICINE_SUCCESS,\r\n        message: RESPONSE_MESSAGE.DELETE_MEDICINE_SUCCESS,\r\n      };\r\n    },\r\n\r\n    deleteMedicineFailure(state, action) {\r\n      state.error = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.DELETE_MEDICINE_FAIL,\r\n        message: RESPONSE_MESSAGE.DELETE_MEDICINE_FAIL,\r\n      };\r\n      state.loading = false;\r\n    },\r\n\r\n    updateMedicine(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    updateMedicineSuccess(state, action: any) {\r\n      state.loading = false;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.UPDATE_MEDICINE_SUCCESS,\r\n        message: RESPONSE_MESSAGE.UPDATE_MEDICINE_SUCCESS,\r\n      };\r\n    },\r\n\r\n    updateMedicineFailure(state, action: any) {\r\n      state.error = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.UPDATE_MEDICINE_FAIL,\r\n        message: RESPONSE_MESSAGE.UPDATE_MEDICINE_FAIL,\r\n      };\r\n      state.loading = false;\r\n    },\r\n\r\n    changeMedicineActive(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    changeMedicineActiveSuccess(state, action) {\r\n      state.loading = false;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.CHANGE_STATUS_MEDICINE_SUCCESS,\r\n        message: RESPONSE_MESSAGE.CHANGE_STATUS_MEDICINE_SUCCESS,\r\n      };\r\n    },\r\n\r\n    changeMedicineActiveFailure(state, action) {\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.CHANGE_STATUS_MEDICINE_FAIL,\r\n        message: RESPONSE_MESSAGE.CHANGE_STATUS_MEDICINE_FAIL,\r\n      };\r\n      state.loading = false;\r\n    },\r\n\r\n    clearMedicine(state) {\r\n      state.medicine = {};\r\n    },\r\n\r\n    setError(state, action) {\r\n      state.error = action.payload;\r\n    },\r\n\r\n    setSuccess(state, action) {\r\n      state.success = action.payload;\r\n    },\r\n\r\n    clearSuccess(state) {\r\n      state.success = {};\r\n    },\r\n\r\n    clearError(state) {\r\n      state.error = {};\r\n    },\r\n\r\n    resetAll(state) {\r\n      state.loading = false;\r\n      state.error = {};\r\n      state.success = {};\r\n      state.medicines = {};\r\n      state.medicine = {};\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions, reducer, name: sliceKey } = DeptServiceSlice;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nimport { RootState } from 'store/core/types';\r\nimport { initialState } from './slice';\r\n\r\nconst medicine = (state: RootState) => state.medicine || initialState;\r\n\r\nexport const selectMedicines = createSelector(\r\n  [medicine],\r\n  medicineState => medicineState.medicines,\r\n);\r\n\r\nexport const selectMedicine = createSelector(\r\n  [medicine],\r\n  medicineState => medicineState.medicine,\r\n);\r\n\r\nexport const selectLoading = createSelector(\r\n  [medicine],\r\n  medicineState => medicineState.loading,\r\n);\r\n\r\nexport const selectError = createSelector(\r\n  [medicine],\r\n  medicineState => medicineState.error,\r\n);\r\n\r\nexport const selectSuccess = createSelector(\r\n  [medicine],\r\n  medicineState => medicineState.success,\r\n);\r\n","import { HttpRequest } from 'utils//request';\r\nimport { APP_CONSTANT } from 'store/common/constants/common.constant';\r\nimport { MedicineApiRoutes } from '../constants/medicine.constant';\r\n\r\nexport class MedicineHttp {\r\n  request: any;\r\n  constructor(endPoint = APP_CONSTANT.API.ENDPOINT) {\r\n    this.request = new HttpRequest(endPoint).request;\r\n  }\r\n\r\n  public getAllMedicine = (): Promise<any> => {\r\n    return this.request.get(MedicineApiRoutes.GET_ALL);\r\n  };\r\n\r\n  public getMedicineById = (id: string) => {\r\n    return this.request.get(MedicineApiRoutes.GET_BY_ID + '?id=' + id);\r\n  };\r\n\r\n  public changeMedicineActive = ({ id, isActive }): Promise<any> => {\r\n    return this.request.post(MedicineApiRoutes.CHANGE_STATUS, {\r\n      id,\r\n      is_active: isActive ? !isActive : true,\r\n    });\r\n  };\r\n\r\n  public createMedicine = ({\r\n    code,\r\n    isActive,\r\n    name,\r\n    usageScope,\r\n    type,\r\n  }): Promise<any> => {\r\n    return this.request.post(MedicineApiRoutes.CREATE, {\r\n      code,\r\n      name,\r\n      usage_scope: usageScope,\r\n      is_active: isActive,\r\n      type,\r\n      data_type: 'TEK',\r\n    });\r\n  };\r\n\r\n  public updateMedicine = ({\r\n    code,\r\n    isActive,\r\n    name,\r\n    stores,\r\n    type,\r\n    usageScope,\r\n    id,\r\n  }): Promise<any> => {\r\n    return this.request.post(MedicineApiRoutes.UPDATE + '?id=' + id, {\r\n      code,\r\n      name,\r\n      stores,\r\n      usage_scope: usageScope,\r\n      type,\r\n      is_active: isActive,\r\n    });\r\n  };\r\n\r\n  public deleteMedicine = ({ id }): Promise<any> => {\r\n    return this.request.post(MedicineApiRoutes.DELETE + '?id=' + id);\r\n  };\r\n\r\n  public checkUniqueCodeMedicine = ({ id, code }): Promise<any> => {\r\n    return this.request.post(MedicineApiRoutes.CHECK_UNIQUE_CODE, {\r\n      code,\r\n      id,\r\n    });\r\n  };\r\n}\r\n","import { call, put, takeLatest, all } from 'redux-saga/effects';\r\nimport { actions } from './slice';\r\nimport { MedicineHttp } from '../services/medicine.http';\r\nconst medicineHttp = new MedicineHttp();\r\n\r\nexport function* getAllMedicine(api) {\r\n  const response = yield call(api.getAllMedicine);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getAllMedicineSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.getAllMedicineFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getAllMedicineFailure(err));\r\n  }\r\n}\r\n\r\nexport function* getMedicineById(api, action) {\r\n  const response = yield call(api.getMedicineById, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getMedicineByIdSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.getMedicineByIdFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getMedicineByIdFailure(err));\r\n  }\r\n}\r\n\r\nexport function* getMedicine(api, action) {\r\n  const response = yield call(api.getMedicine, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getMedicineSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.getMedicineFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getMedicineFailure(err));\r\n  }\r\n}\r\n\r\nexport function* changeMedicineActive(api, action) {\r\n  const response = yield call(api.changeMedicineActive, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.changeMedicineActiveSuccess(action.payload));\r\n    } else {\r\n      yield put(actions.changeMedicineActiveFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.changeMedicineActiveFailure(err));\r\n  }\r\n}\r\n\r\nexport function* createMedicine(api, action) {\r\n  const response = yield call(api.createMedicine, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.createMedicineSuccess(action.payload));\r\n    } else {\r\n      yield put(actions.createMedicineFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.createMedicineFailure(err));\r\n  }\r\n}\r\n\r\nexport function* deleteMedicine(api, action) {\r\n  const response = yield call(api.deleteMedicine, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.deleteMedicineSuccess(action.payload));\r\n    } else {\r\n      yield put(actions.deleteMedicineFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.deleteMedicineFailure(err));\r\n  }\r\n}\r\n\r\nexport function* updateMedicine(api, action) {\r\n  const response = yield call(api.updateMedicine, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.updateMedicineSuccess(action.payload));\r\n    } else {\r\n      yield put(\r\n        actions.updateMedicineFailure({\r\n          ...response,\r\n          manageType: action.payload.manageType,\r\n        }),\r\n      );\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.updateMedicineFailure(err));\r\n  }\r\n}\r\n\r\nexport function* MedicineSaga() {\r\n  yield all([\r\n    yield takeLatest(actions.getAllMedicine.type, getAllMedicine, medicineHttp),\r\n    yield takeLatest(\r\n      actions.getMedicineById.type,\r\n      getMedicineById,\r\n      medicineHttp,\r\n    ),\r\n    yield takeLatest(actions.createMedicine.type, createMedicine, medicineHttp),\r\n    yield takeLatest(actions.updateMedicine.type, updateMedicine, medicineHttp),\r\n    yield takeLatest(actions.deleteMedicine.type, deleteMedicine, medicineHttp),\r\n    yield takeLatest(actions.getMedicine.type, getMedicine, medicineHttp),\r\n    yield takeLatest(\r\n      actions.changeMedicineActive.type,\r\n      changeMedicineActive,\r\n      medicineHttp,\r\n    ),\r\n  ]);\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as MedicineSlice from 'store/medicine/shared/slice';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch } from 'react-redux';\r\nimport { MedicineSaga } from 'store/medicine/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { MedicineHttp } from 'store/medicine/services/medicine.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE } from 'store/medicine/constants/medicine.constant';\r\nimport { DEFAULT_ID } from 'store/common/constants/common.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalAddMedicine\r\n({ open, onClose }) {\r\n  const medicineHttp = new MedicineHttp();\r\n  useInjectReducer({ key: MedicineSlice.sliceKey, reducer: MedicineSlice.reducer });\r\n  useInjectSaga({ key: MedicineSlice.sliceKey, saga: MedicineSaga });\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = medicine => { \r\n    medicineHttp.checkUniqueCodeMedicine({\r\n      code: medicine.code,\r\n      id: DEFAULT_ID,\r\n    }).then(response => response.data)\r\n    .then(resMedicine => {\r\n      if (AppHelper.checkResponseData(resMedicine)) {\r\n        const result = _.get(resMedicine, 'result');\r\n        if (result) {\r\n          return dispatch(MedicineSlice.actions.setError({\r\n            id: AppHelper.generateUUID() + Date.now(),\r\n            key: RESPONSE_CONSTANT.CHECK_CODE_FAIL,\r\n            message: RESPONSE_MESSAGE.CHECK_CODE_FAIL,\r\n          }));\r\n        }\r\n      dispatch(MedicineSlice.actions.createMedicine(medicine));  \r\n      }\r\n    })\r\n    .catch(error => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3\">Thêm Thuốc-vật tư</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                {errors.name && errors.name?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"usageScope\">\r\n              Phạm vi sử dụng\r\n              </label>\r\n              <input\r\n                id=\"usageScope\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"usageScope\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Phạm vi sử dụng\" autoComplete=\"off\" />\r\n                {errors.usageScope && errors.usageScope?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Phạm vi sử dụng</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"type\">\r\n            Loại vật tư\r\n              </label>\r\n              <input\r\n                id=\"type\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"type\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Loại vật tư\" autoComplete=\"off\" />\r\n                {errors.type && errors.type?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Loại vật tư</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isActive\" defaultChecked={true} /> \r\n              Hoạt động\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useEffect } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as MedicineSlice from 'store/medicine/shared/slice';\r\nimport * as MedicineSelector from 'store/medicine/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MedicineSaga } from 'store/medicine/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { MedicineHttp } from 'store/medicine/services/medicine.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE } from 'store/medicine/constants/medicine.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalUpdateMedicine\r\n({ open, onClose }) {\r\n  const medicineHttp = new MedicineHttp();\r\n  useInjectReducer({ key: MedicineSlice.sliceKey, reducer: MedicineSlice.reducer });\r\n  useInjectSaga({ key: MedicineSlice.sliceKey, saga: MedicineSaga });\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n  const initMedicine = useSelector(MedicineSelector.selectMedicine);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(MedicineSlice.actions.clearMedicine());  \r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = medicine => { \r\n    if (initMedicine.code !== medicine.code) {\r\n      medicineHttp.checkUniqueCodeMedicine({\r\n        code: medicine.code,\r\n        id: initMedicine.id,\r\n      })\r\n      .then(response => response.data)\r\n      .then(resMedicine => {\r\n        if (AppHelper.checkResponseData(resMedicine)) {\r\n          const result = _.get(resMedicine, 'result');\r\n          if (result) {\r\n            dispatch(MedicineSlice.actions.setError({\r\n              id: AppHelper.generateUUID() + Date.now(),\r\n              key: RESPONSE_CONSTANT.CHECK_CODE_FAIL,\r\n              message: RESPONSE_MESSAGE.CHECK_CODE_FAIL,\r\n            }));\r\n          } else {\r\n            updateMedicine(medicine);\r\n          }\r\n        }\r\n      })\r\n      .catch(error => console.error(error));\r\n    } else {\r\n      updateMedicine(medicine);\r\n    }\r\n    onClose();\r\n  }\r\n\r\n  const updateMedicine = medicine => {\r\n    dispatch(MedicineSlice.actions.updateMedicine({\r\n      ...medicine,\r\n      id: initMedicine.id,\r\n    }));  \r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3\">Cập Nhật Thuốc-vật tư</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                defaultValue={initMedicine.code}\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                defaultValue={initMedicine.name}\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                {errors.name && errors.name?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"usageScope\">\r\n              Phạm vi sử dụng\r\n              </label>\r\n              <input\r\n                id=\"usageScope\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"usageScope\"\r\n                defaultValue={initMedicine.usage_scope}\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Phạm vi sử dụng\" autoComplete=\"off\" />\r\n                {errors.usageScope && errors.usageScope?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Phạm vi sử dụng</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"type\">\r\n            Loại vật tư\r\n              </label>\r\n              <input\r\n                id=\"type\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"type\"\r\n                defaultValue={initMedicine.type}\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Loại vật tư\" autoComplete=\"off\" />\r\n                {errors.type && errors.type?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Loại vật tư</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isActive\" defaultChecked={initMedicine.is_active} /> \r\n              Hoạt động\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as MedicineSlice from 'store/medicine/shared/slice';\r\nimport * as MedicineSelectors from 'store/medicine/shared/selectors';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { MedicineSaga } from 'store/medicine/shared/saga';\r\nimport { tableMedicine } from 'store/medicine/constants/medicine.constant';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { ModalAddMedicine } from '../components/Medicine/ModalAddMedicine';\r\nimport { ModalUpdateMedicine } from '../components/Medicine/ModalUpdateMedicine';\r\nimport { ModalConfirm } from 'app/components/Modal/Confirm';\r\nimport {\r\n  EMPTY_MESSAGE,\r\n  rowsPerArray,\r\n} from 'store/common/constants/common.constant';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: '200px',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport function Medicine() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({\r\n    key: MedicineSlice.sliceKey,\r\n    reducer: MedicineSlice.reducer,\r\n  });\r\n  useInjectSaga({ key: MedicineSlice.sliceKey, saga: MedicineSaga });\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const medicineList: any[] = useSelector(MedicineSelectors.selectMedicines);\r\n  const loading: any = useSelector<any>(MedicineSelectors.selectLoading);\r\n  const error: any = useSelector<any>(MedicineSelectors.selectError);\r\n  const success: any = useSelector<any>(MedicineSelectors.selectSuccess);\r\n  const [openAddMedicine, setOpenAddMedicine] = useState<boolean>(false);\r\n  const [openUpdateMedicine, setOpenUpdateMedicine] = useState<boolean>(false);\r\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\r\n  const [idDelete, setIdDelete] = useState<string>('');\r\n  const [pagi, setPagi] = useState<any>(() => ({\r\n    rowsPerPage: _.first(rowsPerArray),\r\n    page: 0,\r\n  }));\r\n  const [keySearch, setKeySearch] = useState<string>('');\r\n  const [listRender, setListRender] = useState<any>({});\r\n\r\n  useEffect((): any => {\r\n    if (!_.isEmpty(medicineList) && medicineList.length) {\r\n      if (keySearch === '') {\r\n        AppHelper.setPagiClient(medicineList, pagi, setListRender);\r\n      } else {\r\n        AppHelper.setSearchPagiClient(\r\n          medicineList,\r\n          pagi,\r\n          keySearch,\r\n          setListRender,\r\n        );\r\n      }\r\n    }\r\n  }, [medicineList, pagi, keySearch]);\r\n\r\n  const useEffectOnMount = (effect: React.EffectCallback) => {\r\n    useEffect(effect, []);\r\n  };\r\n\r\n  useEffectOnMount(() => {\r\n    dispatch(MedicineSlice.actions.getAllMedicine());\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(MedicineSlice.actions.resetAll());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(error)) {\r\n      notifyController.setNotifyMessage(error.message).setFailNotify();\r\n      dispatch(MedicineSlice.actions.clearError());\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(success)) {\r\n      notifyController.setNotifyMessage(success.message).setSuccessNotify();\r\n      dispatch(MedicineSlice.actions.clearSuccess());\r\n      syncTitleData();\r\n      closeDialog();\r\n    }\r\n  }, [success]);\r\n\r\n  const syncTitleData = () => {\r\n    dispatch(MedicineSlice.actions.getAllMedicine());\r\n  };\r\n\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<any>('code');\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const changeStatusMedicine = (e, id) => {\r\n    dispatch(\r\n      MedicineSlice.actions.changeMedicineActive({\r\n        id,\r\n        isActive: e.target.checked,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const deleteTitle = () => {\r\n    if (idDelete === '') return;\r\n    dispatch(\r\n      MedicineSlice.actions.deleteMedicine({\r\n        id: idDelete,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const openDeleteTitle = id => {\r\n    setIdDelete(id);\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const setOpenUpdateMedicineModal = medicine => {\r\n    setOpenUpdateMedicine(true);\r\n    dispatch(MedicineSlice.actions.getMedicineById(medicine.id));\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setOpenAddMedicine(false);\r\n    setOpenUpdateMedicine(false);\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const changeSearch = e => {\r\n    setKeySearch(e.target.value);\r\n    setPagi({\r\n      page: 0,\r\n      rowsPerPage: pagi.rowsPerPage,\r\n    });\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2 from-group\">\r\n          <label className=\"font-weight-bold\">Tên thuốc / vật tư :</label>\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Tìm thuốc-vật tư\"\r\n            className=\"form-control\"\r\n            value={keySearch}\r\n            onChange={changeSearch}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <button\r\n            className=\"btn btn-info btn__config mg-t-22 mr-1\"\r\n            onClick={() => setOpenAddMedicine(true)}\r\n          >\r\n            Thêm mới <i className=\"fa fa-plus\"></i>\r\n          </button>\r\n          <button\r\n            className=\"btn btn-info btn__config mg-t-22\"\r\n            onClick={syncTitleData}\r\n          >\r\n            Đồng bộ <i className=\"fa fa-refresh\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={tableMedicine}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!_.isEmpty(listRender) && listRender.data.length) {\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        listRender.data,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      return tableData.map((row, idx) => {\r\n        const medicine = _.cloneDeep(row);\r\n        return (\r\n          <TableRow key={row.id}>\r\n            {tableMedicine.map(column => {\r\n              const value = medicine[column.id];\r\n              if (column.id === 'no') {\r\n                const { page, rowsPerPage } = pagi;\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    {page * rowsPerPage + idx + 1}\r\n                  </TableCell>\r\n                );\r\n              } else if (column.id === 'is_active') {\r\n                if (value) {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#4caf50', fontSize: '16px' }}\r\n                        className=\"fa fa-check-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#ff0000', fontSize: '16px' }}\r\n                        className=\"fa fa-times-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                }\r\n              } else if (column.id === 'actions') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <Tooltip\r\n                      title={'Đổi Trạng thái'}\r\n                      enterDelay={500}\r\n                      leaveDelay={100}\r\n                    >\r\n                      <Switch\r\n                        checked={medicine.is_active}\r\n                        onChange={e => changeStatusMedicine(e, medicine.id)}\r\n                        color=\"primary\"\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      />\r\n                    </Tooltip>\r\n                    <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs\"\r\n                        onClick={() => setOpenUpdateMedicineModal(medicine)}\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                    <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-danger btn-xs mx-2\"\r\n                        onClick={() => openDeleteTitle(medicine.id)}\r\n                      >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={tableMedicine.length}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (e, page) => {\r\n    let changePage = Object.assign({}, pagi, { page });\r\n    setPagi(changePage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = e => {\r\n    let changeRowPerPage = Object.assign({}, pagi, {\r\n      rowsPerPage: +e.target.value,\r\n      page: 0,\r\n    });\r\n    setPagi(changeRowPerPage);\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(listRender)) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          count={listRender.total}\r\n          rowsPerPage={pagi.rowsPerPage}\r\n          page={pagi.page}\r\n          labelRowsPerPage={'Hiển Thị'}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {openAddMedicine ? (\r\n        <ModalAddMedicine open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      {openUpdateMedicine ? (\r\n        <ModalUpdateMedicine open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      <ModalConfirm\r\n        title={'Bạn có chắc chắn muốn xoá thuốc-vật tư này?'}\r\n        other={{\r\n          bodyText: '',\r\n        }}\r\n        keyConfirm={''}\r\n        open={openDelete}\r\n        onClose={() => closeDialog()}\r\n        confirmMethod={() => deleteTitle()}\r\n      />\r\n      {loading ? <AppLoading loading={true} /> : null}\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const PharmacyApiRoute = {\r\n  GET_ALL: '/api/Pharmacy/all',\r\n  GET_BY_ID: '/api/Pharmacy/find',\r\n  CREATE: '/api/Pharmacy/add',\r\n  CHANGE_STATUS: '/api/Pharmacy/change-active',\r\n  UPDATE: '/api/Pharmacy/update',\r\n  DELETE: '/api/Pharmacy/delete',\r\n  CHECK_UNIQUE_CODE: '/api/Pharmacy/check-code-unique',\r\n};\r\n\r\nexport const RESPONSE_CONSTANT = {\r\n  CHANGE_STATUS_PHARMACY_SUCCESS: 'CHANGE_STATUS_PHARMACY_SUCCESS',\r\n  CHANGE_STATUS_PHARMACY_FAIL: 'CHANGE_STATUS_PHARMACY_FAIL',\r\n  CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n  CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n  DELETE_PHARMACY_SUCCESS: 'DELETE_PHARMACY_SUCCESS',\r\n  DELETE_PHARMACY_FAIL: 'DELETE_PHARMACY_FAIL',\r\n  CREATE_PHARMACY_SUCCESS: 'CREATE_PHARMACY_SUCCESS',\r\n  CREATE_PHARMACY_FAIL: 'CREATE_PHARMACY_FAIL',\r\n  UPDATE_PHARMACY_SUCCESS: 'UPDATE_PHARMACY_SUCCESS',\r\n  UPDATE_PHARMACY_FAIL: 'UPDATE_PHARMACY_FAIL',\r\n};\r\n\r\nexport const RESPONSE_MESSAGE = {\r\n  CHANGE_STATUS_PHARMACY_SUCCESS: 'Thay Đổi Trạng Thái Nhà Thuốc Thành Công',\r\n  CHANGE_STATUS_PHARMACY_FAIL: 'Thay Đổi Trạng Thái Nhà Thuốc Thất Bại',\r\n  CHECK_CODE_SUCCESS: 'Mã Nhà Thuốc Có Thể Sử Dụng',\r\n  CHECK_CODE_FAIL: 'Mã Nhà Thuốc Đã Tồn Tại',\r\n  DELETE_PHARMACY_SUCCESS: 'Xoá Nhà Thuốc Thành Công',\r\n  DELETE_PHARMACY_FAIL: 'Xoá Nhà Thuốc Thất Bại',\r\n  CREATE_PHARMACY_SUCCESS: 'Tạo Mới Nhà Thuốc Thành Công',\r\n  CREATE_PHARMACY_FAIL: 'Tạo Mới Nhà Thuốc Thất Bại',\r\n  UPDATE_PHARMACY_SUCCESS: 'Cập Nhật Nhà Thuốc Thành Công',\r\n  UPDATE_PHARMACY_FAIL: 'Cập Nhật Nhà Thuốc Thất Bại',\r\n};\r\n\r\nexport const tablePharmacy: any[] = [\r\n  { id: 'no', label: '#', minWidth: 50 },\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'name', label: 'Tên', minWidth: 120 },\r\n  { id: 'type', label: 'Loại', minWidth: 150 },\r\n  { id: 'stores', label: 'Quầy thuốc', minWidth: 120 },\r\n  { id: 'actions', label: 'Chức năng', minWidth: 170 },\r\n];\r\n","import { createSlice } from 'store/core/@reduxjs/toolkit';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport {\r\n  RESPONSE_CONSTANT,\r\n  RESPONSE_MESSAGE,\r\n} from '../constants/pharmarcy.constant';\r\n\r\nexport interface PharmacyState {\r\n  loading?: boolean;\r\n  error?: any;\r\n  success?: any;\r\n  pharmacies?: any;\r\n  pharmacy?: any;\r\n}\r\n\r\nexport const initialState: PharmacyState = {\r\n  loading: false,\r\n  error: {},\r\n  success: {},\r\n  pharmacies: {},\r\n  pharmacy: {},\r\n};\r\n\r\nconst PharmacySlice = createSlice({\r\n  name: 'pharmacy',\r\n  initialState,\r\n  reducers: {\r\n    getAllPharmacy(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getAllPharmacySuccess(state, action) {\r\n      state.pharmacies = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getAllPharmacyFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getPharmacyById(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getPharmacyByIdSuccess(state, action) {\r\n      state.pharmacy = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getPharmacyByIdFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getPharmacy(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getPharmacySuccess(state, action) {\r\n      state.pharmacy = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getPharmacyFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    createPharmacy(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    createPharmacySuccess(state, action: any) {\r\n      state.loading = false;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.CREATE_PHARMACY_SUCCESS,\r\n        message: RESPONSE_MESSAGE.CREATE_PHARMACY_SUCCESS,\r\n      };\r\n    },\r\n\r\n    createPharmacyFailure(state, action) {\r\n      state.error = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.CREATE_PHARMACY_FAIL,\r\n        message: RESPONSE_MESSAGE.CREATE_PHARMACY_FAIL,\r\n      };\r\n      state.loading = false;\r\n    },\r\n\r\n    deletePharmacy(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    deletePharmacySuccess(state, action: any) {\r\n      state.loading = false;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.DELETE_PHARMACY_SUCCESS,\r\n        message: RESPONSE_MESSAGE.DELETE_PHARMACY_SUCCESS,\r\n      };\r\n    },\r\n\r\n    deletePharmacyFailure(state, action) {\r\n      state.error = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.DELETE_PHARMACY_FAIL,\r\n        message: RESPONSE_MESSAGE.DELETE_PHARMACY_FAIL,\r\n      };\r\n      state.loading = false;\r\n    },\r\n\r\n    updatePharmacy(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    updatePharmacySuccess(state, action: any) {\r\n      state.loading = false;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.UPDATE_PHARMACY_SUCCESS,\r\n        message: RESPONSE_MESSAGE.UPDATE_PHARMACY_SUCCESS,\r\n      };\r\n    },\r\n\r\n    updatePharmacyFailure(state, action: any) {\r\n      state.error = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.UPDATE_PHARMACY_FAIL,\r\n        message: RESPONSE_MESSAGE.UPDATE_PHARMACY_FAIL,\r\n      };\r\n      state.loading = false;\r\n    },\r\n\r\n    changePharmacyActive(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    changePharmacyActiveSuccess(state, action) {\r\n      state.loading = false;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.CHANGE_STATUS_PHARMACY_SUCCESS,\r\n        message: RESPONSE_MESSAGE.CHANGE_STATUS_PHARMACY_SUCCESS,\r\n      };\r\n    },\r\n\r\n    changePharmacyActiveFailure(state, action) {\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.CHANGE_STATUS_PHARMACY_FAIL,\r\n        message: RESPONSE_MESSAGE.CHANGE_STATUS_PHARMACY_FAIL,\r\n      };\r\n      state.loading = false;\r\n    },\r\n\r\n    clearPharmacy(state) {\r\n      state.pharmacy = {};\r\n    },\r\n\r\n    setError(state, action) {\r\n      state.error = action.payload;\r\n    },\r\n\r\n    setSuccess(state, action) {\r\n      state.success = action.payload;\r\n    },\r\n\r\n    clearSuccess(state) {\r\n      state.success = {};\r\n    },\r\n\r\n    clearError(state) {\r\n      state.error = {};\r\n    },\r\n\r\n    resetAll(state) {\r\n      state.loading = false;\r\n      state.error = {};\r\n      state.success = {};\r\n      state.pharmacies = {};\r\n      state.pharmacy = {};\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions, reducer, name: sliceKey } = PharmacySlice;\r\n","import { HttpRequest } from 'utils//request';\r\nimport { APP_CONSTANT } from 'store/common/constants/common.constant';\r\nimport { PharmacyApiRoute } from '../constants/pharmarcy.constant';\r\n\r\nexport class PharmacyHttp {\r\n  request: any;\r\n  constructor(endPoint = APP_CONSTANT.API.ENDPOINT) {\r\n    this.request = new HttpRequest(endPoint).request;\r\n  }\r\n\r\n  public getAllPharmacy = (): Promise<any> => {\r\n    return this.request.get(PharmacyApiRoute.GET_ALL);\r\n  };\r\n\r\n  public getPharmacyById = (id: string) => {\r\n    return this.request.get(PharmacyApiRoute.GET_BY_ID + '?id=' + id);\r\n  };\r\n\r\n  public changePharmacyActive = ({ id, isActive }): Promise<any> => {\r\n    return this.request.post(PharmacyApiRoute.CHANGE_STATUS, {\r\n      id,\r\n      is_active: isActive ? !isActive : true,\r\n    });\r\n  };\r\n\r\n  public createPharmacy = ({\r\n    code,\r\n    isActive,\r\n    name,\r\n    stores,\r\n    type,\r\n  }): Promise<any> => {\r\n    return this.request.post(PharmacyApiRoute.CREATE, {\r\n      code,\r\n      name,\r\n      stores,\r\n      type,\r\n      is_active: isActive,\r\n    });\r\n  };\r\n\r\n  public updatePharmacy = ({\r\n    code,\r\n    isActive,\r\n    name,\r\n    stores,\r\n    type,\r\n    id,\r\n  }): Promise<any> => {\r\n    return this.request.post(PharmacyApiRoute.UPDATE + '?id=' + id, {\r\n      code,\r\n      name,\r\n      stores,\r\n      type,\r\n      is_active: isActive,\r\n    });\r\n  };\r\n\r\n  public deletePharmacy = ({ id }): Promise<any> => {\r\n    return this.request.post(PharmacyApiRoute.DELETE + '?id=' + id);\r\n  };\r\n\r\n  public checkUniqueCodePharmacy = ({ id, code }): Promise<any> => {\r\n    return this.request.post(PharmacyApiRoute.CHECK_UNIQUE_CODE, {\r\n      code,\r\n      id,\r\n    });\r\n  };\r\n}\r\n","import { call, put, takeLatest, all } from 'redux-saga/effects';\r\nimport { actions } from './slice';\r\nimport { PharmacyHttp } from '../services/pharmarcy.http';\r\nconst pharmacyHttp = new PharmacyHttp();\r\n\r\nexport function* getAllPharmacy(api) {\r\n  const response = yield call(api.getAllPharmacy);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getAllPharmacySuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.getAllPharmacyFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getAllPharmacyFailure(err));\r\n  }\r\n}\r\n\r\nexport function* getPharmacyById(api, action) {\r\n  const response = yield call(api.getPharmacyById, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getPharmacyByIdSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.getPharmacyByIdFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getPharmacyByIdFailure(err));\r\n  }\r\n}\r\n\r\nexport function* getPharmacy(api, action) {\r\n  const response = yield call(api.getPharmacy, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getPharmacySuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.getPharmacyFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getPharmacyFailure(err));\r\n  }\r\n}\r\n\r\nexport function* changePharmacyActive(api, action) {\r\n  const response = yield call(api.changePharmacyActive, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.changePharmacyActiveSuccess(action.payload));\r\n    } else {\r\n      yield put(actions.changePharmacyActiveFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.changePharmacyActiveFailure(err));\r\n  }\r\n}\r\n\r\nexport function* createPharmacy(api, action) {\r\n  const response = yield call(api.createPharmacy, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.createPharmacySuccess(action.payload));\r\n    } else {\r\n      yield put(actions.createPharmacyFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.createPharmacyFailure(err));\r\n  }\r\n}\r\n\r\nexport function* deletePharmacy(api, action) {\r\n  const response = yield call(api.deletePharmacy, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.deletePharmacySuccess(action.payload));\r\n    } else {\r\n      yield put(actions.deletePharmacyFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.deletePharmacyFailure(err));\r\n  }\r\n}\r\n\r\nexport function* updatePharmacy(api, action) {\r\n  const response = yield call(api.updatePharmacy, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.updatePharmacySuccess(response.data));\r\n    } else {\r\n      yield put(actions.updatePharmacyFailure(response.data));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.updatePharmacyFailure(err));\r\n  }\r\n}\r\n\r\nexport function* PharmacySaga() {\r\n  yield all([\r\n    yield takeLatest(actions.getAllPharmacy.type, getAllPharmacy, pharmacyHttp),\r\n    yield takeLatest(\r\n      actions.getPharmacyById.type,\r\n      getPharmacyById,\r\n      pharmacyHttp,\r\n    ),\r\n    yield takeLatest(actions.createPharmacy.type, createPharmacy, pharmacyHttp),\r\n    yield takeLatest(actions.updatePharmacy.type, updatePharmacy, pharmacyHttp),\r\n    yield takeLatest(actions.deletePharmacy.type, deletePharmacy, pharmacyHttp),\r\n    yield takeLatest(actions.getPharmacy.type, getPharmacy, pharmacyHttp),\r\n    yield takeLatest(\r\n      actions.changePharmacyActive.type,\r\n      changePharmacyActive,\r\n      pharmacyHttp,\r\n    ),\r\n  ]);\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nimport { RootState } from 'store/core/types';\r\nimport { initialState } from './slice';\r\n\r\nconst pharmacy = (state: RootState) => state.pharmacy || initialState;\r\n\r\nexport const selectPharmacies = createSelector(\r\n  [pharmacy],\r\n  pharmacyState => pharmacyState.pharmacies,\r\n);\r\n\r\nexport const selectPharmacy = createSelector(\r\n  [pharmacy],\r\n  pharmacyState => pharmacyState.pharmacy,\r\n);\r\n\r\nexport const selectLoading = createSelector(\r\n  [pharmacy],\r\n  pharmacyState => pharmacyState.loading,\r\n);\r\n\r\nexport const selectError = createSelector(\r\n  [pharmacy],\r\n  pharmacyState => pharmacyState.error,\r\n);\r\n\r\nexport const selectSuccess = createSelector(\r\n  [pharmacy],\r\n  pharmacyState => pharmacyState.success,\r\n);\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Pharmacylice from 'store/pharmacy/shared/slice';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch } from 'react-redux';\r\nimport { PharmacySaga } from 'store/pharmacy/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { PharmacyHttp } from 'store/pharmacy/services/pharmarcy.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE } from 'store/pharmacy/constants/pharmarcy.constant';\r\nimport { DEFAULT_ID } from 'store/common/constants/common.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalAddPharmacy\r\n({ open, onClose }) {\r\n  const pharmacyHttp = new PharmacyHttp();\r\n  useInjectReducer({ key: Pharmacylice.sliceKey, reducer: Pharmacylice.reducer });\r\n  useInjectSaga({ key: Pharmacylice.sliceKey, saga: PharmacySaga });\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = pharmacy => { \r\n    pharmacyHttp.checkUniqueCodePharmacy({\r\n      code: pharmacy.code,\r\n      id: DEFAULT_ID,\r\n    }).then(response => response.data)\r\n    .then(resPharmacy => {\r\n      if (AppHelper.checkResponseData(resPharmacy)) {\r\n        const result = _.get(resPharmacy, 'result');\r\n        if (result) {\r\n          return dispatch(Pharmacylice.actions.setError({\r\n            id: AppHelper.generateUUID() + Date.now(),\r\n            key: RESPONSE_CONSTANT.CHECK_CODE_FAIL,\r\n            message: RESPONSE_MESSAGE.CHECK_CODE_FAIL,\r\n          }));\r\n        }\r\n      dispatch(Pharmacylice.actions.createPharmacy(pharmacy));  \r\n      }\r\n    })\r\n    .catch(error => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3\">Thêm Nhà thuốc</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                {errors.name && errors.name?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"type\">\r\n            Loại\r\n              </label>\r\n              <input\r\n                id=\"type\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"type\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Loại\" autoComplete=\"off\" />\r\n                {errors.type && errors.type?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Loại</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"stores\">\r\n              Quầy thuốc\r\n              </label>\r\n              <input\r\n                id=\"stores\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"stores\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Quầy thuốc\" autoComplete=\"off\" />\r\n                {errors.stores && errors.stores?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Quầy thuốc</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isActive\" defaultChecked={true} /> \r\n              Hoạt động\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Pharmacylice from 'store/pharmacy/shared/slice';\r\nimport * as PharmacySelectors from 'store/pharmacy/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PharmacySaga } from 'store/pharmacy/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { PharmacyHttp } from 'store/pharmacy/services/pharmarcy.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE } from 'store/pharmacy/constants/pharmarcy.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalUpdatePharmacy\r\n({ open, onClose }) {\r\n  const pharmacyHttp = new PharmacyHttp();\r\n  useInjectReducer({ key: Pharmacylice.sliceKey, reducer: Pharmacylice.reducer });\r\n  useInjectSaga({ key: Pharmacylice.sliceKey, saga: PharmacySaga });\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n  const initPharmacy = useSelector(PharmacySelectors.selectPharmacy);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(Pharmacylice.actions.clearPharmacy());\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = pharmacy => { \r\n    if (initPharmacy.code !== pharmacy.code) {\r\n      pharmacyHttp.checkUniqueCodePharmacy({\r\n        code: pharmacy.code,\r\n        id: initPharmacy.id,\r\n      })\r\n      .then(response => response.data)\r\n      .then(resPharmacy => {\r\n        if (AppHelper.checkResponseData(resPharmacy)) {\r\n          const result = _.get(resPharmacy, 'result');\r\n          if (result) {\r\n            dispatch(Pharmacylice.actions.setError({\r\n              id: AppHelper.generateUUID() + Date.now(),\r\n              key: RESPONSE_CONSTANT.CHECK_CODE_FAIL,\r\n              message: RESPONSE_MESSAGE.CHECK_CODE_FAIL,\r\n            }));\r\n          } else {\r\n            updatePharmary(pharmacy);\r\n          }\r\n        }\r\n      })\r\n      .catch(error => console.error(error));\r\n    } else {\r\n      updatePharmary(pharmacy);\r\n    }\r\n    onClose(); \r\n  }\r\n\r\n  const updatePharmary = pharmacy => {\r\n    dispatch(Pharmacylice.actions.updatePharmacy({\r\n      ...pharmacy,\r\n      id: initPharmacy.id,\r\n    }));  \r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3\">Thêm Nhà thuốc</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                defaultValue={initPharmacy.code}\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                defaultValue={initPharmacy.name}\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                {errors.name && errors.name?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"type\">\r\n            Loại\r\n              </label>\r\n              <input\r\n                id=\"type\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"type\"\r\n                defaultValue={initPharmacy.type}\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Loại\" autoComplete=\"off\" />\r\n                {errors.type && errors.type?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Loại</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"stores\">\r\n              Quầy thuốc\r\n              </label>\r\n              <input\r\n                id=\"stores\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"stores\"\r\n                defaultValue={initPharmacy.stores}\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Quầy thuốc\" autoComplete=\"off\" />\r\n                {errors.stores && errors.stores?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Quầy thuốc</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isActive\" defaultChecked={initPharmacy.is_active} /> \r\n              Hoạt động\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sliceKey, reducer, actions } from 'store/pharmacy/shared/slice';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { PharmacySaga } from 'store/pharmacy/shared/saga';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport {\r\n  selectLoading,\r\n  selectPharmacies,\r\n  selectError,\r\n  selectSuccess,\r\n} from 'store/pharmacy/shared/selectors';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { tablePharmacy } from 'store/pharmacy/constants/pharmarcy.constant';\r\nimport { ModalAddPharmacy } from '../components/Pharmacy/ModalAddPharmacy';\r\nimport { ModalUpdatePharmacy } from '../components/Pharmacy/ModalUpdatePharmacy';\r\nimport { ModalConfirm } from 'app/components/Modal/Confirm';\r\nimport {\r\n  EMPTY_MESSAGE,\r\n  rowsPerArray,\r\n} from 'store/common/constants/common.constant';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: '200px',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport function Pharmacy() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({ key: sliceKey, reducer });\r\n  useInjectSaga({ key: sliceKey, saga: PharmacySaga });\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const pharmacyList: any[] = useSelector(selectPharmacies);\r\n  const loading: any = useSelector<any>(selectLoading);\r\n  const error: any = useSelector<any>(selectError);\r\n  const success: any = useSelector<any>(selectSuccess);\r\n  const [openAddPharmacy, setOpenAddPharmacy] = useState<boolean>(false);\r\n  const [openUpdatePharmacy, setOpenUpdatePharmacy] = useState<boolean>(false);\r\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\r\n  const [idDelete, setIdDelete] = useState<string>('');\r\n  const [pagi, setPagi] = useState<any>(() => ({\r\n    rowsPerPage: _.first(rowsPerArray),\r\n    page: 0,\r\n  }));\r\n  const [keySearch, setKeySearch] = useState<string>('');\r\n  const [listRender, setListRender] = useState<any>({});\r\n\r\n  useEffect((): any => {\r\n    if (!_.isEmpty(pharmacyList) && pharmacyList.length) {\r\n      if (keySearch === '') {\r\n        AppHelper.setPagiClient(pharmacyList, pagi, setListRender);\r\n      } else {\r\n        AppHelper.setSearchPagiClient(\r\n          pharmacyList,\r\n          pagi,\r\n          keySearch,\r\n          setListRender,\r\n        );\r\n      }\r\n    }\r\n  }, [pharmacyList, pagi, keySearch]);\r\n\r\n  const useEffectOnMount = (effect: React.EffectCallback) => {\r\n    useEffect(effect, []);\r\n  };\r\n\r\n  useEffectOnMount(() => {\r\n    dispatch(actions.getAllPharmacy());\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(actions.resetAll());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(error)) {\r\n      notifyController.setNotifyMessage(error.message).setFailNotify();\r\n      dispatch(actions.clearError());\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(success)) {\r\n      notifyController.setNotifyMessage(success.message).setSuccessNotify();\r\n      dispatch(actions.clearSuccess());\r\n      syncTitleData();\r\n      closeDialog();\r\n    }\r\n  }, [success]);\r\n\r\n  const syncTitleData = () => {\r\n    dispatch(actions.getAllPharmacy());\r\n  };\r\n\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<any>('code');\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const changeStatusPharmacy = (e, id) => {\r\n    dispatch(\r\n      actions.changePharmacyActive({\r\n        id,\r\n        isActive: e.target.checked,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const deleteTitle = () => {\r\n    if (idDelete === '') return;\r\n    dispatch(\r\n      actions.deletePharmacy({\r\n        id: idDelete,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const openDeleteTitle = id => {\r\n    setIdDelete(id);\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const setOpenUpdatePharmacyModal = pharmacy => {\r\n    setOpenUpdatePharmacy(true);\r\n    dispatch(actions.getPharmacyById(pharmacy.id));\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setOpenAddPharmacy(false);\r\n    setOpenUpdatePharmacy(false);\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const changeSearch = e => {\r\n    setKeySearch(e.target.value);\r\n    setPagi({\r\n      page: 0,\r\n      rowsPerPage: pagi.rowsPerPage,\r\n    });\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"btn-group\">\r\n            <button\r\n              className=\"btn btn-info btn__config\"\r\n              onClick={() => setOpenAddPharmacy(true)}\r\n            >\r\n              Thêm mới <i className=\"fa fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"btn-group ml-3\">\r\n            <button\r\n              className=\"btn btn-info btn__config\"\r\n              onClick={syncTitleData}\r\n            >\r\n              Đồng bộ <i className=\"fa fa-refresh\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"btn-group ml-3\">\r\n            <label\r\n              style={{ alignItems: 'center', margin: '0px', display: 'flex' }}\r\n            >\r\n              <span style={{ display: 'block', width: '90px' }}>Tìm:</span>\r\n              <input\r\n                type=\"search\"\r\n                placeholder=\"Tìm nhà thuốc\"\r\n                className=\"form-control form-control-sm\"\r\n                aria-controls=\"titleTable\"\r\n                value={keySearch}\r\n                onChange={changeSearch}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={tablePharmacy}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!_.isEmpty(listRender) && listRender.data.length) {\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        listRender.data,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      return tableData.map((row, idx) => {\r\n        const pharmacy = _.cloneDeep(row);\r\n        return (\r\n          <TableRow key={row.id}>\r\n            {tablePharmacy.map(column => {\r\n              const value = pharmacy[column.id];\r\n              if (column.id === 'no') {\r\n                const { page, rowsPerPage } = pagi;\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    {page * rowsPerPage + idx + 1}\r\n                  </TableCell>\r\n                );\r\n              } else if (column.id === 'is_active') {\r\n                if (value) {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#4caf50', fontSize: '16px' }}\r\n                        className=\"fa fa-check-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#ff0000', fontSize: '16px' }}\r\n                        className=\"fa fa-times-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                }\r\n              } else if (column.id === 'actions') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <Tooltip\r\n                      title={'Đổi Trạng thái'}\r\n                      enterDelay={500}\r\n                      leaveDelay={100}\r\n                    >\r\n                      <Switch\r\n                        checked={pharmacy.is_active}\r\n                        onChange={e => changeStatusPharmacy(e, pharmacy.id)}\r\n                        color=\"primary\"\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      />\r\n                    </Tooltip>\r\n                    <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs\"\r\n                        onClick={() => setOpenUpdatePharmacyModal(pharmacy)}\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                    <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-danger btn-xs mx-2\"\r\n                        onClick={() => openDeleteTitle(pharmacy.id)}\r\n                      >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={tablePharmacy.length}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (e, page) => {\r\n    let changePage = Object.assign({}, pagi, { page });\r\n    setPagi(changePage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = e => {\r\n    let changeRowPerPage = Object.assign({}, pagi, {\r\n      rowsPerPage: +e.target.value,\r\n      page: 0,\r\n    });\r\n    setPagi(changeRowPerPage);\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(listRender)) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          count={listRender.total}\r\n          rowsPerPage={pagi.rowsPerPage}\r\n          page={pagi.page}\r\n          labelRowsPerPage={'Hiển Thị'}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {openAddPharmacy ? (\r\n        <ModalAddPharmacy open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      {openUpdatePharmacy ? (\r\n        <ModalUpdatePharmacy open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      <ModalConfirm\r\n        title={'Bạn có chắc chắn muốn xoá nhà thuốc này?'}\r\n        other={{\r\n          bodyText: '',\r\n        }}\r\n        keyConfirm={''}\r\n        open={openDelete}\r\n        onClose={() => closeDialog()}\r\n        confirmMethod={() => deleteTitle()}\r\n      />\r\n      {loading ? <AppLoading loading={true} /> : null}\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const DeviceApiRoutes = {\r\n  GET_ALL_DEVICE: '/api/Device/all',\r\n  GET_BY_ID: '/api/Device',\r\n  CREATE_DEVICE: '/api/Device/add',\r\n  UPDATE_DEVICE: '/api/Device/update',\r\n  DELETE_DEVICE: '/api/Device/delete',\r\n};\r\n\r\nexport const RESPONSE_CONSTANT = {\r\n  CREATE_DEVICE_SUCCESS: 'CREATE_DEVICE_SUCCESS',\r\n  CREATE_DEVICE_FAIL: 'CREATE_DEVICE_FAIL',\r\n  UPDATE_DEVICE_SUCCESS: 'UPDATE_DEVICE_SUCCESS',\r\n  UPDATE_DEVICE_FAIL: 'UPDATE_DEVICE_FAIL',\r\n  DELETE_DEVICE_SUCCESS: 'DELETE_DEVICE_SUCCESS',\r\n  DELETE_DEVICE_FAIL: 'DELETE_DEVICE_FAIL',\r\n};\r\n\r\nexport const RESPONSE_MESSAGE = {\r\n  CREATE_DEVICE_SUCCESS: 'Tạo mới thông tin thiết bị thành công',\r\n  CREATE_DEVICE_FAIL: 'Tạo mới thông tin thiết bị thất bại',\r\n  UPDATE_DEVICE_SUCCESS: 'Cập nhật thông tin thiết Bị thành công',\r\n  UPDATE_DEVICE_FAIL: 'Cập nhật thông tin thiết Bị thất bại',\r\n  DELETE_DEVICE_SUCCESS: 'Xoá thông tin thiết bị thành công',\r\n  DELETE_DEVICE_FAIL: 'Xoá thông tin thiết bị thất bại',\r\n};\r\n\r\nexport const tableDevice: any[] = [\r\n  { id: 'name', label: 'Tên', minWidth: 120 },\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'roomName', label: 'Khu Vực', minWidth: 120 },\r\n  { id: 'type', label: 'Loại Thiết Bị', minWidth: 120 },\r\n  { id: 'ip', label: 'IP', minWidth: 120 },\r\n  { id: 'status', label: 'Bật tắt', minWidth: 120 }, // remove\r\n  { id: 'updated_date', label: 'Ngày Cập Nhật', minWidth: 120 }, // remove\r\n  { id: 'actions', label: 'Chức năng', minWidth: 170 },\r\n];\r\n\r\nexport const defaultFilterDevice = [\r\n  {\r\n    data: '',\r\n    name: '',\r\n    searchable: true,\r\n    orderable: true,\r\n    search: {\r\n      value: '',\r\n      regex: true,\r\n    },\r\n  },\r\n];\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { createSlice } from 'store/core/@reduxjs/toolkit';\r\nimport {\r\n  RESPONSE_CONSTANT,\r\n  RESPONSE_MESSAGE,\r\n} from '../constants/device.constant';\r\nimport { AppHelper } from 'utils/app.helper';\r\n\r\nexport interface DeviceState {\r\n  cacheDeviceData?: any;\r\n  cacheSetting?: any;\r\n  loading?: boolean;\r\n  success?: any;\r\n  error?: any;\r\n  devices?: any;\r\n  device: any;\r\n}\r\n\r\nexport const initialState: DeviceState = {\r\n  cacheDeviceData: null,\r\n  loading: false,\r\n  success: null,\r\n  error: null,\r\n  devices: {},\r\n  device: {},\r\n};\r\n\r\nconst deviceFormSlice = createSlice({\r\n  name: 'device',\r\n  initialState,\r\n  reducers: {\r\n    getDeviceAll(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getDeviceAllSuccess(state, action) {\r\n      state.devices = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getDeviceAllFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getDeviceById(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getDeviceByIdSuccess(state, action) {\r\n      state.device = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getDeviceByIdFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    createDevice(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    createDeviceSuccess(state, action) {\r\n      state.loading = false;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.CREATE_DEVICE_SUCCESS,\r\n        message: RESPONSE_MESSAGE.CREATE_DEVICE_SUCCESS,\r\n      };\r\n    },\r\n\r\n    createDeviceFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.CREATE_DEVICE_FAIL,\r\n        message: action.payload,\r\n      };\r\n    },\r\n\r\n    updateDevice(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    updateDeviceSuccess(state, action) {\r\n      state.loading = false;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.UPDATE_DEVICE_SUCCESS,\r\n        message: RESPONSE_MESSAGE.UPDATE_DEVICE_SUCCESS,\r\n      };\r\n    },\r\n\r\n    updateDeviceFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.UPDATE_DEVICE_FAIL,\r\n        message: RESPONSE_MESSAGE.UPDATE_DEVICE_FAIL,\r\n      };\r\n    },\r\n\r\n    deleteDevice(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    deleteDeviceSuccess(state, action) {\r\n      state.loading = false;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.DELETE_DEVICE_SUCCESS,\r\n        message: RESPONSE_MESSAGE.DELETE_DEVICE_SUCCESS,\r\n      };\r\n    },\r\n\r\n    deleteDeviceFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.DELETE_DEVICE_FAIL,\r\n        message: RESPONSE_MESSAGE.DELETE_DEVICE_FAIL,\r\n      };\r\n    },\r\n\r\n    setError(state, action) {\r\n      state.error = action.payload;\r\n    },\r\n\r\n    setSuccess(state, action) {\r\n      state.success = action.payload;\r\n    },\r\n\r\n    clearError(state) {\r\n      state.error = {};\r\n    },\r\n\r\n    clearSuccess(state) {\r\n      state.success = {};\r\n    },\r\n\r\n    clearDevice(state) {\r\n      state.device = {};\r\n    },\r\n\r\n    resetAll(state) {\r\n      state.cacheDeviceData = null;\r\n      state.loading = false;\r\n      state.success = null;\r\n      state.error = null;\r\n      state.devices = {};\r\n    }\r\n  }\r\n\r\n});\r\n\r\nexport const { actions, reducer, name: sliceKey } = deviceFormSlice;","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nimport { RootState } from 'store/core/types';\r\nimport { initialState } from './slice';\r\n\r\nconst selectSettingState = (state: RootState) => state.device || initialState;\r\n\r\nexport const selectError = createSelector(\r\n  [selectSettingState],\r\n  deviceState => deviceState.error,\r\n);\r\n\r\nexport const selectSuccess = createSelector(\r\n  [selectSettingState],\r\n  deviceState => deviceState.success,\r\n);\r\n\r\nexport const selectLoading = createSelector(\r\n  [selectSettingState],\r\n  deviceState => deviceState.loading,\r\n);\r\n\r\nexport const selectDevices = createSelector(\r\n  [selectSettingState],\r\n  deviceState => deviceState.devices,\r\n);\r\n\r\nexport const selectDevice = createSelector(\r\n  [selectSettingState],\r\n  deviceState => deviceState.device,\r\n);\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { HttpRequest } from 'utils//request';\r\nimport { APP_CONSTANT } from 'store/common/constants/common.constant';\r\nimport * as _ from 'lodash';\r\nimport {\r\n  DeviceApiRoutes,\r\n  defaultFilterDevice,\r\n} from '../constants/device.constant';\r\n\r\nexport interface FilterDevice {\r\n  page: number;\r\n  rowsPerPage: number;\r\n}\r\n\r\nexport interface DeviceModel {\r\n  id?: string;\r\n  name: string;\r\n  code: string;\r\n  type: string;\r\n  ip: string;\r\n  roomId: string;\r\n}\r\n\r\nexport class DeviceHttp {\r\n  request: any;\r\n  constructor(endPoint = APP_CONSTANT.API.ENDPOINT) {\r\n    this.request = new HttpRequest(endPoint).request;\r\n  }\r\n\r\n  private configRequestBody = (device: DeviceModel) => {\r\n    let body = {\r\n      name: device.name,\r\n      code: device.code,\r\n      type: device.type,\r\n      ip: device.ip,\r\n      room_id: device.roomId,\r\n    };\r\n    if (device.id) {\r\n      return {\r\n        ...body,\r\n        id: device.id,\r\n      };\r\n    }\r\n    return body;\r\n  };\r\n\r\n  public getDeviceAll = (filter: FilterDevice): Promise<any> => {\r\n    return this.request.post(DeviceApiRoutes.GET_ALL_DEVICE, {\r\n      draw: 0,\r\n      start: filter.page * filter.rowsPerPage,\r\n      length: filter.rowsPerPage,\r\n      order: [\r\n        {\r\n          column: 0,\r\n          dir: '',\r\n        },\r\n      ],\r\n      columns: defaultFilterDevice,\r\n      search: {\r\n        value: '',\r\n        regex: true,\r\n      },\r\n    });\r\n  };\r\n\r\n  public getDeviceById = (id: string): Promise<any> => {\r\n    return this.request.get(DeviceApiRoutes.GET_BY_ID + '/' + id);\r\n  };\r\n\r\n  public createDevice = (device: DeviceModel): Promise<any> => {\r\n    return this.request.post(DeviceApiRoutes.CREATE_DEVICE, {\r\n      ...this.configRequestBody(device),\r\n    });\r\n  };\r\n\r\n  public updateDevice = (device: any): Promise<any> => {\r\n    return this.request.post(\r\n      DeviceApiRoutes.UPDATE_DEVICE + '/' + device.id,\r\n      device,\r\n    );\r\n  };\r\n\r\n  public deleteDevice = (id: string): Promise<any> => {\r\n    return this.request.post(DeviceApiRoutes.DELETE_DEVICE + '/' + id);\r\n  };\r\n}\r\n","import { call, put, takeLatest, all } from 'redux-saga/effects';\r\nimport { actions } from './slice';\r\nimport { DeviceHttp } from '../services/device.http';\r\nconst deviceRequest = new DeviceHttp();\r\n\r\nexport function* getDeviceAll(api, action) {\r\n  const response = yield call(api.getDeviceAll, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getDeviceAllSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.getDeviceAllFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getDeviceAllFailure(err));\r\n  }\r\n}\r\n\r\nexport function* getDeviceById(api, action) {\r\n  const response = yield call(api.getDeviceById, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getDeviceByIdSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.getDeviceByIdFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getDeviceByIdFailure(err));\r\n  }\r\n}\r\n\r\nexport function* createDevice(api, action) {\r\n  const response = yield call(api.createDevice, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.createDeviceSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.createDeviceFailure(response.data.message));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.createDeviceFailure(err));\r\n  }\r\n}\r\n\r\nexport function* updateDevice(api, action) {\r\n  const response = yield call(api.updateDevice, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.updateDeviceSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.updateDeviceFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.updateDeviceFailure(err));\r\n  }\r\n}\r\n\r\nexport function* deleteDevice(api, action) {\r\n  const response = yield call(api.deleteDevice, action.payload);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.deleteDeviceSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.deleteDeviceFailure(response.error));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.deleteDeviceFailure(err));\r\n  }\r\n}\r\n\r\nexport function* DeviceSaga() {\r\n  yield all([\r\n    yield takeLatest(actions.getDeviceAll.type, getDeviceAll, deviceRequest),\r\n    yield takeLatest(actions.getDeviceById.type, getDeviceById, deviceRequest),\r\n    yield takeLatest(actions.createDevice.type, createDevice, deviceRequest),\r\n    yield takeLatest(actions.updateDevice.type, updateDevice, deviceRequest),\r\n    yield takeLatest(actions.deleteDevice.type, deleteDevice, deviceRequest),\r\n  ]);\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as DeviceSlice from 'store/device/shared/slice';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { DeviceSaga } from 'store/device/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { selectRooms } from 'store/room/shared/selectors';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalAddDevice({ open, onClose }) {\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  useInjectReducer({ key: DeviceSlice.sliceKey, reducer: DeviceSlice.reducer });\r\n  useInjectSaga({ key: DeviceSlice.sliceKey, saga: DeviceSaga });\r\n\r\n  const rooms = useSelector(selectRooms);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = device => {  \r\n    dispatch(DeviceSlice.actions.createDevice(device));\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3\">Thêm Mới Thiết Bị </h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n            Phòng\r\n              </label>\r\n                <select\r\n                  name=\"roomId\"\r\n                  id=\"groupService\"\r\n                  className=\"form-control\"\r\n                  ref={register({ required: true })}\r\n                >\r\n                  <option value=\"\">Vui lòng chọn phòng...</option>\r\n                  {\r\n                    !_.isEmpty(rooms) && rooms.length\r\n                      ? rooms.map(room => (\r\n                        <option key={room.id} value={room.id}>{ room.description }</option>\r\n                      ))\r\n                      : null\r\n                  }\r\n                </select>\r\n                {errors.roomId && errors.roomId?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng chọn phòng</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control name\"\r\n                name=\"name\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                {errors.name && errors.name?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"ip\">\r\n              IP\r\n              </label>\r\n              <input\r\n                id=\"ip\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"ip\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập IP\" autoComplete=\"off\" />\r\n                {errors.ip && errors.ip?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Ip thiết bị</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"type\">\r\n              Loại Thiết Bị\r\n              </label>\r\n              <input\r\n                id=\"type\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"type\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập loại thiết bị\" autoComplete=\"off\" />\r\n                {errors.type && errors.type?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập loại thiết bị</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as DeviceSlice from 'store/device/shared/slice';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { DeviceSaga } from 'store/device/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { selectRooms } from 'store/room/shared/selectors';\r\nimport { selectDevice } from 'store/device/shared/selectors';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalEditDevice({ open, onClose }) {\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  useInjectReducer({ key: DeviceSlice.sliceKey, reducer: DeviceSlice.reducer });\r\n  useInjectSaga({ key: DeviceSlice.sliceKey, saga: DeviceSaga });\r\n\r\n  const rooms = useSelector(selectRooms);\r\n  const initDevice = useSelector(selectDevice);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(DeviceSlice.actions.clearDevice());\r\n  }, []);\r\n\r\n  const onSubmit = device => {  \r\n    dispatch(DeviceSlice.actions.updateDevice({\r\n      ...device,\r\n      id: initDevice.id\r\n    }));\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        { !_.isEmpty(initDevice) ? (\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <h4 className=\"modal-title pb-3\">Thêm Mới Thiết Bị </h4>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">\r\n              Phòng\r\n                </label>\r\n                  <select\r\n                    name=\"room_id\"\r\n                    id=\"groupService\"\r\n                    className=\"form-control\"\r\n                    defaultValue={initDevice.room_id}\r\n                    ref={register({ required: true })}\r\n                  >\r\n                    <option value=\"\">Vui lòng chọn phòng...</option>\r\n                    {\r\n                      !_.isEmpty(rooms) && rooms.length\r\n                        ? rooms.map(room => (\r\n                          <option key={room.id} value={room.id}>{ room.description }</option>\r\n                        ))\r\n                        : null\r\n                    }\r\n                  </select>\r\n                  {errors.room_id && errors.room_id?.type === 'required' ? (\r\n                    <span style={{ color: ' #fb0606' }}>Vui lòng chọn phòng</span>\r\n                  ) : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"code\">\r\n                  Mã\r\n                </label>\r\n                <input\r\n                  id=\"code\"\r\n                  type=\"text\"\r\n                  className=\"form-control Code\"\r\n                  name=\"code\"\r\n                  ref={register({ required: true })}\r\n                  placeholder=\"Mã\" autoComplete=\"off\"\r\n                  defaultValue={initDevice.code}\r\n              />\r\n                  {errors.code && errors.code?.type === 'required' ? (\r\n                    <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                  ) : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">\r\n                Tên\r\n                </label>\r\n                <input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  className=\"form-control name\"\r\n                  name=\"name\"\r\n                  ref={register({ required: true })}\r\n                  placeholder=\"Nhập Tên\" autoComplete=\"off\"\r\n                  defaultValue={initDevice.name}\r\n                />\r\n                  {errors.name && errors.name?.type === 'required' ? (\r\n                    <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                  ) : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"ip\">\r\n                IP\r\n                </label>\r\n                <input\r\n                  id=\"ip\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"ip\"\r\n                  ref={register({ required: true })}\r\n                  placeholder=\"Nhập IP\" autoComplete=\"off\"\r\n                  defaultValue={initDevice.ip}\r\n                />\r\n                  {errors.ip && errors.ip?.type === 'required' ? (\r\n                    <span style={{ color: ' #fb0606' }}>Vui lòng nhập Ip thiết bị</span>\r\n                  ) : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"type\">\r\n                Loại Thiết Bị\r\n                </label>\r\n                <input\r\n                  id=\"type\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"type\"\r\n                  ref={register({ required: true })}\r\n                  placeholder=\"Nhập loại thiết bị\" autoComplete=\"off\"\r\n                  defaultValue={initDevice.type}\r\n                />\r\n                  {errors.type && errors.type?.type === 'required' ? (\r\n                    <span style={{ color: ' #fb0606' }}>Vui lòng nhập loại thiết bị</span>\r\n                  ) : null}\r\n            </div>\r\n            <div className=\"form-group d-flex justify-content-end\">\r\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n              <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n            </div>\r\n          </form>\r\n        ) : null}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as RoomSlice from 'store/room/shared/slice';\r\nimport * as RoomSelector from 'store/room/shared/selectors';\r\nimport * as DeviceSlice from 'store/device/shared/slice';\r\nimport * as DeviceSelector from 'store/device/shared/selectors';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sliceKey, reducer, actions } from 'store/device/shared/slice';\r\nimport { RoomSaga } from 'store/room/shared/saga';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { DeviceSaga } from 'store/device/shared/saga';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { tableDevice } from 'store/device/constants/device.constant';\r\nimport { ModalAddDevice } from '../components/Device/AddDeviceModal';\r\nimport { ModalEditDevice } from '../components/Device/EditDeviceModal';\r\nimport { ModalConfirm } from 'app/components/Modal/Confirm';\r\nimport {\r\n  EMPTY_MESSAGE,\r\n  rowsPerArray,\r\n} from 'store/common/constants/common.constant';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nconst unlimitFilter = {\r\n  page: 0,\r\n  rowsPerPage: 999999999,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: '80vh',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport function Device() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({ key: sliceKey, reducer });\r\n  useInjectSaga({ key: sliceKey, saga: DeviceSaga });\r\n  useInjectReducer({ key: RoomSlice.sliceKey, reducer: RoomSlice.reducer });\r\n  useInjectSaga({ key: RoomSlice.sliceKey, saga: RoomSaga });\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const devices: any = useSelector<any>(DeviceSelector.selectDevices);\r\n  const loading: any = useSelector<any>(DeviceSelector.selectLoading);\r\n  const error: any = useSelector<any>(DeviceSelector.selectError);\r\n  const success: any = useSelector<any>(DeviceSelector.selectSuccess);\r\n  const rooms: any = useSelector<any>(RoomSelector.selectRooms);\r\n  const [addDevice, setAddDevice] = useState<boolean>(false);\r\n  const [editDevice, setEditDevice] = useState<boolean>(false);\r\n  const [deleteDevice, setDeleteDevice] = useState<boolean>(false);\r\n  const [idDelete, setIdDelete] = useState<string>('');\r\n  const [listDevice, setListDevice] = useState<any[]>([]);\r\n  const [filter, setFilter] = useState<any>({\r\n    page: 0,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [searchKey, setSearchKey] = useState<string>('');\r\n\r\n  const filteredData = useMemo(() => {\r\n    if (!Array.isArray(devices?.data)) return [];\r\n    return AppHelper.searchListByKey(\r\n      devices.data,\r\n      ['code', 'name', 'ip'],\r\n      searchKey,\r\n    );\r\n  }, [devices, searchKey]);\r\n  useEffect(() => {\r\n    setFilter({\r\n      ...filter,\r\n      page: 0,\r\n    });\r\n  }, [filteredData]);\r\n  const pagedData = useMemo(() => {\r\n    const start = filter.page * filter.rowsPerPage;\r\n    return filteredData.slice(start, start + filter.rowsPerPage);\r\n  }, [filteredData, filter]);\r\n\r\n  useEffect(() => {\r\n    dispatch(RoomSlice.actions.getRoomAll());\r\n    dispatch(actions.getDeviceAll(unlimitFilter));\r\n    return () => {\r\n      dispatch(DeviceSlice.actions.resetAll());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(error)) {\r\n      notifyController.setNotifyMessage(error.message).setFailNotify();\r\n      dispatch(DeviceSlice.actions.clearError());\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(success)) {\r\n      notifyController.setNotifyMessage(success.message).setSuccessNotify();\r\n      dispatch(DeviceSlice.actions.clearSuccess());\r\n      dispatch(actions.getDeviceAll(unlimitFilter));\r\n    }\r\n  }, [success]);\r\n\r\n  useEffect(() => {\r\n    if (rooms && rooms.length) {\r\n      let deviceFormat: any[] = pagedData.map(device => {\r\n        const room = rooms.find(room => room.id === device.room_id);\r\n        if (room) {\r\n          return {\r\n            ...device,\r\n            roomName: room.description,\r\n          };\r\n        }\r\n        return device;\r\n      });\r\n      setListDevice(deviceFormat);\r\n    }\r\n  }, [pagedData, rooms]);\r\n\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<any>('name');\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const openAddDevice = () => setAddDevice(true);\r\n\r\n  const openEditDevice = id => {\r\n    setEditDevice(true);\r\n    dispatch(DeviceSlice.actions.getDeviceById(id));\r\n  };\r\n\r\n  const openDeleteDevice = id => {\r\n    setIdDelete(id);\r\n    setDeleteDevice(true);\r\n  };\r\n\r\n  const handleDeleteDevice = () => {\r\n    if (idDelete === '') return;\r\n    dispatch(DeviceSlice.actions.deleteDevice(idDelete));\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setAddDevice(false);\r\n    setEditDevice(false);\r\n    setDeleteDevice(false);\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <div className=\"row p-0 pl-3 pr-3\">\r\n        <div className=\"col-12 col-sm-2 p-0\">\r\n          <div className=\"btn-group w-100\">\r\n            <a\r\n              id=\"addRow\"\r\n              className=\"btn btn-info m-0 btn__config w-100\"\r\n              onClick={openAddDevice}\r\n            >\r\n              Thêm mới <i className=\"fa fa-plus\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 col-sm-10 p-0 pl-sm-2\">\r\n          <div className=\"btn-group w-100\">\r\n            <input\r\n              type=\"search\"\r\n              placeholder=\"Tìm thiết bị\"\r\n              className=\"form-control form-control-sm\"\r\n              aria-controls=\"titleTable\"\r\n              value={searchKey}\r\n              onChange={e => setSearchKey(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={tableDevice}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (listDevice && listDevice.length) {\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        listDevice,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      return tableData.map((row, idx) => {\r\n        const device = _.cloneDeep(row);\r\n        return (\r\n          <TableRow key={row.id}>\r\n            {tableDevice.map(column => {\r\n              const value = device[column.id];\r\n              if (column.id === 'no') {\r\n                const { page, rowsPerPage } = filter;\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    {page * rowsPerPage + idx + 1}\r\n                  </TableCell>\r\n                );\r\n              } else if (column.id === 'actions') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs\"\r\n                        onClick={() => openEditDevice(device.id)}\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                    <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-danger btn-xs mx-2\"\r\n                        onClick={() => openDeleteDevice(device.id)}\r\n                      >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={tableDevice.length}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(pagedData)) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          count={filteredData.length}\r\n          rowsPerPage={filter.rowsPerPage}\r\n          page={filter.page}\r\n          labelRowsPerPage={'Hiển Thị'}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (e, page) => {\r\n    let changePage = Object.assign({}, filter, { page });\r\n    setFilter(changePage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = e => {\r\n    let changeRowPerPage = Object.assign({}, filter, {\r\n      rowsPerPage: +e.target.value,\r\n      page: 0,\r\n    });\r\n    setFilter(changeRowPerPage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {loading ? <AppLoading loading={true} /> : null}\r\n      <div className=\"col-md-12\">\r\n        {addDevice ? <ModalAddDevice open={true} onClose={closeModal} /> : null}\r\n        {editDevice ? (\r\n          <ModalEditDevice open={true} onClose={closeModal} />\r\n        ) : null}\r\n        <ModalConfirm\r\n          title={'Bạn có chắc chắn muốn xoá thiết bị này?'}\r\n          other={{\r\n            bodyText: '',\r\n          }}\r\n          keyConfirm={''}\r\n          open={deleteDevice}\r\n          onClose={() => closeModal()}\r\n          confirmMethod={() => handleDeleteDevice()}\r\n        />\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useEffect } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as TableSlice from 'store/table/shared/slice';\r\nimport * as SettingSelector from 'store/table/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TableSaga } from 'store/table/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { tableTypes } from 'store/table/constants/table.constant';\r\nimport { DEFAULT_ID } from 'store/common/constants/common.constant';\r\nimport { TableHttp } from 'store/table/services/table.http';\r\nimport { configResponse } from 'utils/request';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalTable({ open, onClose }) {\r\n  useInjectReducer({ key: TableSlice.sliceKey, reducer: TableSlice.reducer });\r\n  useInjectSaga({ key: TableSlice.sliceKey, saga: TableSaga });\r\n  const tableHttp = new TableHttp() ;\r\n  const initTable: any = useSelector(SettingSelector.selectTableInfo);\r\n  const { register, handleSubmit, errors, setError, setValue } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(TableSlice.actions.clearTableInfo());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function initFormData(table: any) {\r\n      for (let i in table) {\r\n        const key = _.camelCase(i);\r\n        if (key !== 'pcIP' || key !== 'deviceType' || key !== 'device') {\r\n          setValue(key, table[i]);\r\n        } \r\n        setValue('deviceCode', table['device']);\r\n        setValue('computerIP', table['pc_ip']);\r\n        setValue('deviceType', table['device_type']);\r\n      }\r\n    }\r\n    if (!_.isEmpty(initTable)) {\r\n      setTimeout(() => initFormData(initTable));\r\n    }\r\n  }, [initTable]);\r\n\r\n  const onSubmit = async (tableInfo: any) => {\r\n    const msg = 'Mã bàn tiếp nhận đã tồn tại';\r\n    try {\r\n      let checkCodeRes: any = {};\r\n      if (_.isEmpty(initTable) || initTable.code !== tableInfo.code) {\r\n        const checkCode: any = await tableHttp.checkUniqueTable({\r\n          id: DEFAULT_ID,\r\n          code: tableInfo.code,\r\n        });\r\n        checkCodeRes = await configResponse(checkCode);\r\n      }\r\n      if (_.isBoolean(checkCodeRes)) {\r\n        throw new Error(msg);\r\n      }\r\n      if (_.isEmpty(initTable)) {\r\n        dispatch(TableSlice.actions.createTable(tableInfo));\r\n      } else {\r\n        dispatch(TableSlice.actions.updateTable({ table: tableInfo, id: initTable.id }))\r\n      }\r\n    } catch (err) {\r\n      const errMsg = _.get(err, 'message');\r\n      return setError('code', {\r\n        type: 'exist',\r\n        message: errMsg ? errMsg : msg,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title\">Thêm Mới thông tin bàn tiếp nhận</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n                Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control Name\"\r\n                name=\"name\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Tên\" autoComplete=\"off\" />\r\n                {errors.name && errors.name?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' && (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                )}\r\n                {errors.code && errors.code?.type === 'exist' && (\r\n                  <span style={{ color: ' #fb0606' }}>{ errors?.code?.message ? errors.code.message : 'Error' }</span>\r\n                )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"device\">\r\n                Thiết bị\r\n              </label>\r\n              <input\r\n                id=\"device\"\r\n                type=\"text\"\r\n                name=\"deviceCode\"\r\n                ref={register({ required: true })}\r\n                className=\"form-control DeviceCode\"\r\n                placeholder=\"Thiết bị\" autoComplete=\"off\" />\r\n                {errors.deviceCode && errors.deviceCode?.type === 'required' ? (\r\n                <span style={{ color: ' #fb0606' }}>Vui lòng nhập thiết bị</span>\r\n              ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"table-type\">\r\n              Loại bàn\r\n            </label>\r\n            <select\r\n              id=\"table-type\"\r\n              className=\"form-control\"\r\n              name=\"type\"\r\n              ref={register({ required: true })}\r\n              >\r\n                <option value=\"\">Loại bàn</option>\r\n                { tableTypes.map(({ value, label }) => (\r\n                  <option key={value} value={value}>{ label }</option>\r\n                ))}\r\n              </select>\r\n              {errors.type && errors.type?.type === 'required' ? (\r\n                <span style={{ color: ' #fb0606' }}>Vui lòng chọn loại bàn</span>\r\n              ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"table\">\r\n              Loại thiết bị\r\n            </label>\r\n            <select id=\"table\"\r\n              className=\"form-control\"\r\n              name=\"deviceType\"\r\n              ref={register({ required: true })}\r\n              >\r\n              <option value=\"\">Loại Thiết Bị</option>\r\n              <option value=\"0\">Bàn</option>\r\n              <option value=\"1\">CPS</option>\r\n            </select>\r\n            {errors.device_type && errors.device_type?.type === 'required' ? (\r\n                <span style={{ color: ' #fb0606' }}>Vui lòng chọn loại thiết Bị</span>\r\n              ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"pc-ip\">\r\n              PC IP\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"PC IP\"\r\n              name=\"computerIP\"\r\n              ref={register({ required: true })}\r\n            />\r\n             {errors.computerIP && errors.computerIP?.type === 'required' ? (\r\n                <span style={{ color: ' #fb0606' }}>Vui lòng nhập PC IP</span>\r\n              ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"table\">\r\n              Mã Khu\r\n            </label>\r\n            <select id=\"areaCode\" className=\"form-control DeviceType\" autoComplete=\"off\" \r\n              name=\"areaCode\"\r\n              ref={register({ required: true })}>\r\n              <option value=\"\">Mã Khu</option>\r\n              <option value=\"B\">Khu B</option>\r\n              <option value=\"D\">Khu D</option>\r\n            </select>\r\n            {errors.areaCode && errors.areaCode?.type === 'required' ? (\r\n                <span style={{ color: ' #fb0606' }}>Vui lòng chọn loại mã khu</span>\r\n              ) : null}\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as TableSelectors from 'store/table/shared/selectors';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sliceKey, reducer, actions } from 'store/table/shared/slice';\r\nimport { TableSaga } from 'store/table/shared/saga';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { tablePatientReceiption } from 'store/table/constants/table.constant';\r\nimport { ModalTable } from '../components/TablePatientReceition/ModalTable';\r\nimport { ModalConfirm } from 'app/components/Modal/Confirm';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { deviceTypes, tableTypes } from 'store/table/constants/table.constant';\r\nimport {\r\n  EMPTY_MESSAGE,\r\n  rowsPerArray,\r\n} from 'store/common/constants/common.constant';\r\nimport { RootStore } from 'store/configureStore';\r\nimport { Unsubscribe } from 'redux';\r\nimport { RESPONSE_MESSAGE } from 'store/table/constants/table.constant';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: '200px',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport function TablePatientReceition() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({ key: sliceKey, reducer: reducer });\r\n  useInjectSaga({ key: sliceKey, saga: TableSaga });\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const tables: any = useSelector<any>(TableSelectors.selectTable);\r\n  const loading: any = useSelector<any>(TableSelectors.selectLoading);\r\n  const [openModal, setOpenModal] = useState<boolean>(false);\r\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\r\n  const [idDelete, setIdDelete] = useState<string>('');\r\n  const [filter, setFilter] = useState<any>(() => ({\r\n    rowsPerPage: _.first(rowsPerArray),\r\n    page: 0,\r\n    search: '',\r\n  }));\r\n  const searchRef = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.getTableAll(filter));\r\n    const storeSub$: Unsubscribe = RootStore.subscribe(() => {\r\n      const { type, payload } = RootStore.getState().lastAction;\r\n      switch (type) {\r\n        case actions.getTableWithIdSuccess.type:\r\n          setOpenModal(true);\r\n          break;\r\n        case actions.createTableSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(RESPONSE_MESSAGE.CREATE_TABLE_SUCCESS)\r\n            .setSuccessNotify();\r\n          setOpenModal(false);\r\n          dispatch(actions.getTableAll(filter));\r\n          break;\r\n        case actions.updateTableSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(RESPONSE_MESSAGE.UPDATE_TABLE_SUCCESS)\r\n            .setSuccessNotify();\r\n          setOpenModal(false);\r\n          dispatch(actions.getTableAll(filter));\r\n          break;\r\n        case actions.deleteTableSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(RESPONSE_MESSAGE.DELETE_TABLE_SUCCESS)\r\n            .setSuccessNotify();\r\n          dispatch(actions.getTableAll(filter));\r\n          break;\r\n        case actions.createTableFailure.type:\r\n        case actions.updateTableFailure.type:\r\n        case actions.deleteTableFailure.type:\r\n          notifyController\r\n            .setNotifyMessage(payload ? payload : 'Đã xảy ra lỗi')\r\n            .setFailNotify();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return () => {\r\n      storeSub$();\r\n    };\r\n  }, []);\r\n\r\n  const deleteTable = () => {\r\n    if (idDelete === '') return;\r\n    dispatch(actions.deleteTable(idDelete));\r\n  };\r\n\r\n  const openDeleteTable = table => {\r\n    setOpenDelete(true);\r\n    setIdDelete(table.id);\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<any>('tekmedi_card_number');\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (e, page) => {\r\n    let changePage = Object.assign({}, filter, { page });\r\n    setFilter(changePage);\r\n    dispatch(actions.getTableAll(changePage));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = e => {\r\n    let changeRowPerPage = Object.assign({}, filter, {\r\n      rowsPerPage: +e.target.value,\r\n      page: 0,\r\n    });\r\n    dispatch(actions.getTableAll(changeRowPerPage));\r\n  };\r\n\r\n  const searchTable = e => {\r\n    let changeSearch = Object.assign({}, filter, {\r\n      search: e.target.value,\r\n    });\r\n    setFilter(changeSearch);\r\n    if (searchRef.current) {\r\n      clearTimeout(searchRef.current);\r\n    }\r\n    searchRef.current = setTimeout(() => {\r\n      dispatch(actions.getTableAll(changeSearch));\r\n    }, 500);\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"btn-group\">\r\n            <a\r\n              id=\"addRow\"\r\n              className=\"btn btn-info btn__config\"\r\n              onClick={() => setOpenModal(true)}\r\n            >\r\n              Thêm mới <i className=\"fa fa-plus\"></i>\r\n            </a>\r\n          </div>\r\n          <div className=\"btn-group ml-3\">\r\n            <label\r\n              style={{\r\n                alignItems: 'center',\r\n                margin: 0,\r\n                display: 'flex',\r\n              }}\r\n            >\r\n              <span style={{ display: 'block', width: '90px' }}>Tìm:</span>\r\n              <input\r\n                value={filter.search}\r\n                onChange={searchTable}\r\n                type=\"search\"\r\n                placeholder=\"Tìm bàn tiếp nhận\"\r\n                className=\"form-control form-control-sm\"\r\n                aria-controls=\"titleTable\"\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={tablePatientReceiption}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!_.isEmpty(tables) && tables.data.length) {\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        tables.data,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      return tableData.map((row, idx) => {\r\n        const card = _.cloneDeep(row);\r\n        return (\r\n          <TableRow key={row.id}>\r\n            {tablePatientReceiption.map(column => {\r\n              const value = card[column.id];\r\n              if (column.id === 'no') {\r\n                const { page, rowsPerPage } = filter;\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    {page * rowsPerPage + idx + 1}\r\n                  </TableCell>\r\n                );\r\n              } else if (column.id === 'device_type') {\r\n                const device: any = deviceTypes.find(\r\n                  dev => dev.value === value,\r\n                );\r\n                if (device) {\r\n                  return <TableCell key={column.id}>{device.label}</TableCell>;\r\n                } else {\r\n                  return <TableCell key={column.id}>{value}</TableCell>;\r\n                }\r\n              } else if (column.id === 'type') {\r\n                const table: any = tableTypes.find(tab => tab.value === value);\r\n                if (table) {\r\n                  return <TableCell key={column.id}>{table.label}</TableCell>;\r\n                } else {\r\n                  return <TableCell key={column.id}>{value}</TableCell>;\r\n                }\r\n              } else if (column.id === 'actions') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs\"\r\n                        onClick={() => dispatch(actions.getTableWithId(row.id))}\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                    <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-danger btn-xs mx-2\"\r\n                        onClick={() => openDeleteTable(row)}\r\n                      >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={tablePatientReceiption.length}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(tables)) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          count={tables.recordsTotal}\r\n          rowsPerPage={filter.rowsPerPage}\r\n          page={filter.page}\r\n          labelRowsPerPage={'Hiển Thị'}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {loading && <AppLoading loading={true} />}\r\n      {openModal && (\r\n        <ModalTable open={true} onClose={() => setOpenModal(false)} />\r\n      )}\r\n      <ModalConfirm\r\n        title={'Bạn có chắc chắn muốn xoá bàn này?'}\r\n        other={{\r\n          bodyText: '',\r\n        }}\r\n        keyConfirm={''}\r\n        open={openDelete}\r\n        onClose={() => closeDialog()}\r\n        confirmMethod={() => deleteTable()}\r\n      />\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice } from 'store/core/@reduxjs/toolkit';\r\n\r\nexport interface DepartmentServiceState {\r\n  loading?: boolean;\r\n  deptServices?: any;\r\n  deptService?: any;\r\n  serviceName?: any;\r\n  deptServiceValueTypeId?: any;\r\n  deptServiceListValueId?: any;\r\n  listPerRoom: any;\r\n  error?: any;\r\n  success?: any;\r\n  services: any;\r\n}\r\n\r\nexport const initialState: DepartmentServiceState = {\r\n  loading: false,\r\n  deptServices: {},\r\n  deptService: {},\r\n  serviceName: {},\r\n  deptServiceValueTypeId: '',\r\n  deptServiceListValueId: '',\r\n  listPerRoom: {},\r\n  error: {},\r\n  success: {},\r\n  services: {},\r\n};\r\n\r\nconst DeptServiceSlice = createSlice({\r\n  name: 'departmentService',\r\n  initialState,\r\n  reducers: {\r\n    getDeptServiceValueType(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getDeptServiceValueTypeSuccess(state, action) {\r\n      state.loading = false;\r\n      state.deptServiceValueTypeId = action.payload;\r\n    },\r\n\r\n    getDeptServiceValueTypeFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getDeptServiceListValue(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getDeptServiceListValueSuccess(state, action) {\r\n      state.loading = false;\r\n      state.deptServiceListValueId = action.payload;\r\n    },\r\n\r\n    getDeptServiceListValueFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getListDeptServices(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getListDeptServicesSuccess(state, action) {\r\n      state.loading = false;\r\n      state.deptServices = action.payload;\r\n    },\r\n\r\n    getListDeptServicesFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    addDeptServicesInDept(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    addDeptServicesInDeptSuccess(state, action) {\r\n      state.loading = false;\r\n    },\r\n\r\n    addDeptServicesInDeptFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    updateDeptServicesInDept(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    updateDeptServicesInDeptSuccess(state, action) {\r\n      state.loading = false;\r\n    },\r\n\r\n    updateDeptServicesInDeptFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getDeptServicesById(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getDeptServicesByIdSuccess(state, action) {\r\n      state.loading = false;\r\n      state.deptService = action.payload;\r\n    },\r\n\r\n    getDeptServicesByIdFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getAllServices(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getAllServicesSuccess(state, action) {\r\n      state.loading = false;\r\n      state.services = action.payload;\r\n    },\r\n\r\n    getAllServicesFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getPerformanceRoom(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getPerformanceRoomSuccess(state, action) {\r\n      state.loading = false;\r\n      state.listPerRoom = action.payload;\r\n    },\r\n\r\n    getPerformanceRoomFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    clearDeptService(state) {\r\n      state.deptService = {};\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions, reducer, name: sliceKey } = DeptServiceSlice;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nimport { RootState } from 'store/core/types';\r\nimport { initialState } from './slice';\r\n\r\nconst departmentService = (state: RootState) =>\r\n  state.departmentService || initialState;\r\n\r\nexport const selectDeptServices = createSelector(\r\n  [departmentService],\r\n  state => state.deptServices,\r\n);\r\n\r\nexport const selectDeptService = createSelector(\r\n  [departmentService],\r\n  state => state.deptService,\r\n);\r\n\r\nexport const selectListValues = createSelector(\r\n  [departmentService],\r\n  state => state.deptServiceListValueId,\r\n);\r\n\r\nexport const selectValueType = createSelector(\r\n  [departmentService],\r\n  state => state.deptServiceValueTypeId,\r\n);\r\n\r\nexport const selectLoading = createSelector(\r\n  [departmentService],\r\n  state => state.loading,\r\n);\r\n\r\nexport const selectError = createSelector(\r\n  [departmentService],\r\n  state => state.error,\r\n);\r\n\r\nexport const selectSuccess = createSelector(\r\n  [departmentService],\r\n  state => state.success,\r\n);\r\n\r\nexport const selectServices = createSelector(\r\n  [departmentService],\r\n  state => state.services,\r\n);\r\n\r\nexport const selectListPerRoom = createSelector(\r\n  [departmentService],\r\n  state => state.listPerRoom,\r\n);\r\n","/* eslint-disable no-useless-concat */\r\nimport { HttpRequest } from 'utils//request';\r\nimport {\r\n  APP_CONSTANT,\r\n  valuePerRoom,\r\n} from 'store/common/constants/common.constant';\r\nimport { ApiRoutes } from '../constants/departmentService.constant';\r\n\r\nexport class DepartmentServiceHttp {\r\n  request: any;\r\n  constructor(endPoint = APP_CONSTANT.API.DEPT) {\r\n    this.request = new HttpRequest(endPoint).request;\r\n  }\r\n  public getDeptServiceValueType = (): Promise<any> => {\r\n    return this.request.get(ApiRoutes.VALUE_TYPE + '/DV');\r\n  };\r\n\r\n  public getPerformanceRoom = (): Promise<any> => {\r\n    return this.request.get(ApiRoutes.PERFORMANCE_ROOM + valuePerRoom);\r\n  };\r\n\r\n  public getDeptServiceListValue = (): Promise<any> => {\r\n    return this.request.get(ApiRoutes.LIST_VALUE + '/NDV');\r\n  };\r\n\r\n  public getListDeptServices = ({\r\n    serviceCode,\r\n    roomCode,\r\n    pageSize,\r\n    pageNumber,\r\n    examinationCode,\r\n  }): Promise<any> => {\r\n    return this.request.get(ApiRoutes.DEPT_SERVICE, {\r\n      serviceCode,\r\n      roomCode,\r\n      examinationCode,\r\n      page_number: pageNumber,\r\n      page_size: pageSize,\r\n    });\r\n  };\r\n\r\n  public getDeptServicesById = (id: any): Promise<any> => {\r\n    return this.request.get(\r\n      `${ApiRoutes.DEPT_GET_ID_SERVICE}/${id}` + '/services',\r\n    );\r\n  };\r\n\r\n  public addDeptServicesInDept = (deptService): Promise<any> => {\r\n    return this.request.put(ApiRoutes.CREATE_DEPT_SERVICE, deptService);\r\n  };\r\n\r\n  public updateDeptServicesInDept = (reqquest): Promise<any> => {\r\n    return this.request.put(ApiRoutes.UPDATE_DEPT_SERVICE, reqquest);\r\n  };\r\n\r\n  getAllServices = (): Promise<any> => {\r\n    return this.request.get(ApiRoutes.GET_ALL_SERVICES);\r\n  };\r\n}\r\n","import { call, put, takeLatest, all } from 'redux-saga/effects';\r\nimport { actions } from './slice';\r\nimport { configResponse } from 'utils/request';\r\nimport { get } from 'lodash';\r\nimport { DepartmentServiceHttp } from '../services/departmentService.http';\r\nconst api = new DepartmentServiceHttp();\r\n\r\nexport function* getDeptServiceValueType(api) {\r\n  const response = yield call(api.getDeptServiceValueType);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getDeptServiceValueTypeSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getDeptServiceValueTypeFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getDeptServiceListValue(api) {\r\n  const response = yield call(api.getDeptServiceListValue);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getDeptServiceListValueSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getDeptServiceListValueFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getListDeptServices(api, action) {\r\n  const response = yield call(api.getListDeptServices, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getListDeptServicesSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getListDeptServicesFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* addDeptServicesInDept(api, action) {\r\n  const response = yield call(api.addDeptServicesInDept, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.addDeptServicesInDeptSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.addDeptServicesInDeptFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* updateDeptServicesInDept(api, action) {\r\n  const response = yield call(api.updateDeptServicesInDept, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.updateDeptServicesInDeptSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.updateDeptServicesInDeptFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getDeptServicesById(api, action) {\r\n  const response = yield call(api.getDeptServicesById, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getDeptServicesByIdSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getDeptServicesByIdFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getAllServices(api) {\r\n  const response = yield call(api.getAllServices);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getAllServicesSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getAllServicesFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getPerformanceRoom(api) {\r\n  const response = yield call(api.getPerformanceRoom);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getPerformanceRoomSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getPerformanceRoomFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* DepartmentServiceSaga() {\r\n  yield all([\r\n    yield takeLatest(\r\n      actions.getDeptServiceValueType.type,\r\n      getDeptServiceValueType,\r\n      api,\r\n    ),\r\n    yield takeLatest(\r\n      actions.getDeptServiceListValue.type,\r\n      getDeptServiceListValue,\r\n      api,\r\n    ),\r\n    yield takeLatest(\r\n      actions.getListDeptServices.type,\r\n      getListDeptServices,\r\n      api,\r\n    ),\r\n    yield takeLatest(\r\n      actions.addDeptServicesInDept.type,\r\n      addDeptServicesInDept,\r\n      api,\r\n    ),\r\n    yield takeLatest(\r\n      actions.updateDeptServicesInDept.type,\r\n      updateDeptServicesInDept,\r\n      api,\r\n    ),\r\n    yield takeLatest(\r\n      actions.getDeptServicesById.type,\r\n      getDeptServicesById,\r\n      api,\r\n    ),\r\n    yield takeLatest(actions.getAllServices.type, getAllServices, api),\r\n    yield takeLatest(actions.getPerformanceRoom.type, getPerformanceRoom, api),\r\n  ]);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nexport default function useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme();\n  var props = getThemeProps({\n    theme: theme,\n    name: 'MuiUseMediaQuery',\n    props: {}\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['Material-UI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.\n  // All the browsers Material-UI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _props$options = _extends({}, props, options),\n      _props$options$defaul = _props$options.defaultMatches,\n      defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul,\n      _props$options$matchM = _props$options.matchMedia,\n      matchMedia = _props$options$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _props$options$matchM,\n      _props$options$noSsr = _props$options.noSsr,\n      noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr,\n      _props$options$ssrMat = _props$options.ssrMatchMedia,\n      ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;\n\n  var _React$useState = React.useState(function () {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  }),\n      match = _React$useState[0],\n      setMatch = _React$useState[1];\n\n  React.useEffect(function () {\n    var active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query: query,\n      match: match\n    });\n  }\n\n  return match;\n}","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","// @flow\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow\n  ? () => performance.now()\n  : () => Date.now();\n\nexport type TimeoutID = {|\n  id: AnimationFrameID,\n|};\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick),\n  };\n\n  return timeoutID;\n}\n","// @flow\n\nlet size: number = -1;\n\n// This utility copied from \"dom-helpers\" package.\nexport function getScrollbarSize(recalculate?: boolean = false): number {\n  if (size === -1 || recalculate) {\n    const div = document.createElement('div');\n    const style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n\n    ((document.body: any): HTMLBodyElement).appendChild(div);\n\n    size = div.offsetWidth - div.clientWidth;\n\n    ((document.body: any): HTMLBodyElement).removeChild(div);\n  }\n\n  return size;\n}\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate?: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    ((document.body: any): HTMLBodyElement).appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    ((document.body: any): HTMLBodyElement).removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\ntype Direction = 'ltr' | 'rtl';\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n\ntype RenderComponentProps<T> = {|\n  columnIndex: number,\n  data: T,\n  isScrolling?: boolean,\n  rowIndex: number,\n  style: Object,\n|};\nexport type RenderComponent<T> = React$ComponentType<\n  $Shape<RenderComponentProps<T>>\n>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype OnItemsRenderedCallback = ({\n  overscanColumnStartIndex: number,\n  overscanColumnStopIndex: number,\n  overscanRowStartIndex: number,\n  overscanRowStopIndex: number,\n  visibleColumnStartIndex: number,\n  visibleColumnStopIndex: number,\n  visibleRowStartIndex: number,\n  visibleRowStopIndex: number,\n}) => void;\ntype OnScrollCallback = ({\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [key: string]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  columnCount: number,\n  columnWidth: itemSize,\n  direction: Direction,\n  height: number,\n  initialScrollLeft?: number,\n  initialScrollTop?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemData: T,\n  itemKey?: (params: {|\n    columnIndex: number,\n    data: T,\n    rowIndex: number,\n  |}) => any,\n  onItemsRendered?: OnItemsRenderedCallback,\n  onScroll?: OnScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanColumnCount?: number,\n  overscanColumnsCount?: number, // deprecated\n  overscanCount?: number, // deprecated\n  overscanRowCount?: number,\n  overscanRowsCount?: number, // deprecated\n  rowCount: number,\n  rowHeight: itemSize,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n|};\n\ntype getItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForItemAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any,\n  scrollbarSize: number\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = ({ columnIndex, data, rowIndex }) =>\n  `${rowIndex}:${columnIndex}`;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsOverscanCount = null;\nlet devWarningsOverscanRowsColumnsCount = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = new WeakSet();\n    devWarningsOverscanRowsColumnsCount = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createGridComponent({\n  getColumnOffset,\n  getColumnStartIndexForOffset,\n  getColumnStopIndexForStartIndex,\n  getColumnWidth,\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment,\n  getOffsetForRowAndAlignment,\n  getRowHeight,\n  getRowOffset,\n  getRowStartIndexForOffset,\n  getRowStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getColumnOffset: getItemOffset,\n  getColumnStartIndexForOffset: GetStartIndexForOffset,\n  getColumnStopIndexForStartIndex: GetStopIndexForStartIndex,\n  getColumnWidth: getItemSize,\n  getEstimatedTotalHeight: getEstimatedTotalSize,\n  getEstimatedTotalWidth: getEstimatedTotalSize,\n  getOffsetForColumnAndAlignment: GetOffsetForItemAndAlignment,\n  getOffsetForRowAndAlignment: GetOffsetForItemAndAlignment,\n  getRowOffset: getItemOffset,\n  getRowHeight: getItemSize,\n  getRowStartIndexForOffset: GetStartIndexForOffset,\n  getRowStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class Grid<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n    _outerRef: ?HTMLDivElement;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      horizontalScrollDirection: 'forward',\n      scrollLeft:\n        typeof this.props.initialScrollLeft === 'number'\n          ? this.props.initialScrollLeft\n          : 0,\n      scrollTop:\n        typeof this.props.initialScrollTop === 'number'\n          ? this.props.initialScrollTop\n          : 0,\n      scrollUpdateWasRequested: false,\n      verticalScrollDirection: 'forward',\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo({\n      scrollLeft,\n      scrollTop,\n    }: {\n      scrollLeft: number,\n      scrollTop: number,\n    }): void {\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(prevState => {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem({\n      align = 'auto',\n      columnIndex,\n      rowIndex,\n    }: {\n      align: ScrollToAlign,\n      columnIndex?: number,\n      rowIndex?: number,\n    }): void {\n      const { columnCount, height, rowCount, width } = this.props;\n      const { scrollLeft, scrollTop } = this.state;\n      const scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      const horizontalScrollbarSize =\n        estimatedTotalWidth > width ? scrollbarSize : 0;\n      const verticalScrollbarSize =\n        estimatedTotalHeight > height ? scrollbarSize : 0;\n\n      this.scrollTo({\n        scrollLeft:\n          columnIndex !== undefined\n            ? getOffsetForColumnAndAlignment(\n                this.props,\n                columnIndex,\n                align,\n                scrollLeft,\n                this._instanceProps,\n                verticalScrollbarSize\n              )\n            : scrollLeft,\n        scrollTop:\n          rowIndex !== undefined\n            ? getOffsetForRowAndAlignment(\n                this.props,\n                rowIndex,\n                align,\n                scrollTop,\n                this._instanceProps,\n                horizontalScrollbarSize\n              )\n            : scrollTop,\n      });\n    }\n\n    componentDidMount() {\n      const { initialScrollLeft, initialScrollTop } = this.props;\n\n      if (this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction } = this.props;\n      const { scrollLeft, scrollTop, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n            default:\n              const { clientWidth, scrollWidth } = outerRef;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        columnCount,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemData,\n        itemKey = defaultItemKey,\n        outerElementType,\n        outerTagName,\n        rowCount,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      const [\n        columnStartIndex,\n        columnStopIndex,\n      ] = this._getHorizontalRangeToRender();\n      const [rowStartIndex, rowStopIndex] = this._getVerticalRangeToRender();\n\n      const items = [];\n      if (columnCount > 0 && rowCount) {\n        for (\n          let rowIndex = rowStartIndex;\n          rowIndex <= rowStopIndex;\n          rowIndex++\n        ) {\n          for (\n            let columnIndex = columnStartIndex;\n            columnIndex <= columnStopIndex;\n            columnIndex++\n          ) {\n            items.push(\n              createElement(children, {\n                columnIndex,\n                data: itemData,\n                isScrolling: useIsScrolling ? isScrolling : undefined,\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\n                rowIndex,\n                style: this._getItemStyle(rowIndex, columnIndex),\n              })\n            );\n          }\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll: this._onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: estimatedTotalHeight,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: estimatedTotalWidth,\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanColumnStartIndex: number,\n      overscanColumnStopIndex: number,\n      overscanRowStartIndex: number,\n      overscanRowStopIndex: number,\n      visibleColumnStartIndex: number,\n      visibleColumnStopIndex: number,\n      visibleRowStartIndex: number,\n      visibleRowStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanColumnStartIndex: number,\n        overscanColumnStopIndex: number,\n        overscanRowStartIndex: number,\n        overscanRowStopIndex: number,\n        visibleColumnStartIndex: number,\n        visibleColumnStopIndex: number,\n        visibleRowStartIndex: number,\n        visibleRowStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): OnItemsRenderedCallback)({\n          overscanColumnStartIndex,\n          overscanColumnStopIndex,\n          overscanRowStartIndex,\n          overscanRowStopIndex,\n          visibleColumnStartIndex,\n          visibleColumnStopIndex,\n          visibleRowStartIndex,\n          visibleRowStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollLeft: number,\n      scrollTop: number,\n      horizontalScrollDirection: ScrollDirection,\n      verticalScrollDirection: ScrollDirection,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollLeft: number,\n        scrollTop: number,\n        horizontalScrollDirection: ScrollDirection,\n        verticalScrollDirection: ScrollDirection,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): OnScrollCallback)({\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          verticalScrollDirection,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      const { columnCount, onItemsRendered, onScroll, rowCount } = this.props;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          const [\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n          ] = this._getHorizontalRangeToRender();\n          const [\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex,\n          ] = this._getVerticalRangeToRender();\n          this._callOnItemsRendered(\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex\n          );\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        const {\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          scrollUpdateWasRequested,\n          verticalScrollDirection,\n        } = this.state;\n        this._callOnScroll(\n          scrollLeft,\n          scrollTop,\n          horizontalScrollDirection,\n          verticalScrollDirection,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (rowIndex: number, columnIndex: number) => Object;\n    _getItemStyle = (rowIndex: number, columnIndex: number): Object => {\n      const { columnWidth, direction, rowHeight } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && columnWidth,\n        shouldResetStyleCacheOnItemSizeChange && direction,\n        shouldResetStyleCacheOnItemSizeChange && rowHeight\n      );\n\n      const key = `${rowIndex}:${columnIndex}`;\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(key)) {\n        style = itemStyleCache[key];\n      } else {\n        const offset = getColumnOffset(\n          this.props,\n          columnIndex,\n          this._instanceProps\n        );\n        const isRtl = direction === 'rtl';\n        itemStyleCache[key] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offset,\n          right: isRtl ? offset : undefined,\n          top: getRowOffset(this.props, rowIndex, this._instanceProps),\n          height: getRowHeight(this.props, rowIndex, this._instanceProps),\n          width: getColumnWidth(this.props, columnIndex, this._instanceProps),\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getHorizontalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanColumnCount,\n        overscanColumnsCount,\n        overscanCount,\n        rowCount,\n      } = this.props;\n      const { horizontalScrollDirection, isScrolling, scrollLeft } = this.state;\n\n      const overscanCountResolved: number =\n        overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getColumnStartIndexForOffset(\n        this.props,\n        scrollLeft,\n        this._instanceProps\n      );\n      const stopIndex = getColumnStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollLeft,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || horizontalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || horizontalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _getVerticalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanCount,\n        overscanRowCount,\n        overscanRowsCount,\n        rowCount,\n      } = this.props;\n      const { isScrolling, verticalScrollDirection, scrollTop } = this.state;\n\n      const overscanCountResolved: number =\n        overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getRowStartIndexForOffset(\n        this.props,\n        scrollTop,\n        this._instanceProps\n      );\n      const stopIndex = getRowStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollTop,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || verticalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || verticalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScroll = (event: ScrollEvent): void => {\n      const {\n        clientHeight,\n        clientWidth,\n        scrollLeft,\n        scrollTop,\n        scrollHeight,\n        scrollWidth,\n      } = event.currentTarget;\n      this.setState(prevState => {\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n        let calculatedScrollLeft = scrollLeft;\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              calculatedScrollLeft = -scrollLeft;\n              break;\n            case 'positive-descending':\n              calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        calculatedScrollLeft = Math.max(\n          0,\n          Math.min(calculatedScrollLeft, scrollWidth - clientWidth)\n        );\n        const calculatedScrollTop = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: calculatedScrollTop,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1);\n      });\n    };\n  };\n}\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    innerTagName,\n    outerTagName,\n    overscanColumnsCount,\n    overscanCount,\n    overscanRowsCount,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn(\n          'The overscanCount prop has been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (\n      typeof overscanColumnsCount === 'number' ||\n      typeof overscanRowsCount === 'number'\n    ) {\n      if (\n        devWarningsOverscanRowsColumnsCount &&\n        !devWarningsOverscanRowsColumnsCount.has(instance)\n      ) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn(\n          'The overscanColumnsCount and overscanRowsCount props have been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    if (typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Grids must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    }\n\n    if (typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Grids must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n// TODO Deprecate directions \"horizontal\" and \"vertical\"\ntype Direction = 'ltr' | 'rtl' | 'horizontal' | 'vertical';\ntype Layout = 'horizontal' | 'vertical';\n\ntype RenderComponentProps<T> = {|\n  data: T,\n  index: number,\n  isScrolling?: boolean,\n  style: Object,\n|};\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype onItemsRenderedCallback = ({\n  overscanStartIndex: number,\n  overscanStopIndex: number,\n  visibleStartIndex: number,\n  visibleStopIndex: number,\n}) => void;\ntype onScrollCallback = ({\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [index: number]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  direction: Direction,\n  height: number | string,\n  initialScrollOffset?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemCount: number,\n  itemData: T,\n  itemKey?: (index: number, data: T) => any,\n  itemSize: itemSize,\n  layout: Layout,\n  onItemsRendered?: onItemsRenderedCallback,\n  onScroll?: onScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanCount: number,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number | string,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n|};\n\ntype GetItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForIndexAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = (index: number, data: any) => index;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsDirection = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createListComponent({\n  getItemOffset,\n  getEstimatedTotalSize,\n  getItemSize,\n  getOffsetForIndexAndAlignment,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getItemOffset: GetItemOffset,\n  getEstimatedTotalSize: GetEstimatedTotalSize,\n  getItemSize: GetItemSize,\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\n  getStartIndexForOffset: GetStartIndexForOffset,\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class List<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _outerRef: ?HTMLDivElement;\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      layout: 'vertical',\n      overscanCount: 2,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.props.initialScrollOffset === 'number'\n          ? this.props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo(scrollOffset: number): void {\n      scrollOffset = Math.max(0, scrollOffset);\n\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true,\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\n      const { itemCount } = this.props;\n      const { scrollOffset } = this.state;\n\n      index = Math.max(0, Math.min(index, itemCount - 1));\n\n      this.scrollTo(\n        getOffsetForIndexAndAlignment(\n          this.props,\n          index,\n          align,\n          scrollOffset,\n          this._instanceProps\n        )\n      );\n    }\n\n    componentDidMount() {\n      const { direction, initialScrollOffset, layout } = this.props;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction, layout } = this.props;\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n              default:\n                const { clientWidth, scrollWidth } = outerRef;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        layout,\n        outerElementType,\n        outerTagName,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      // TODO Deprecate direction \"horizontal\"\n      const isHorizontal =\n        direction === 'horizontal' || layout === 'horizontal';\n\n      const onScroll = isHorizontal\n        ? this._onScrollHorizontal\n        : this._onScrollVertical;\n\n      const [startIndex, stopIndex] = this._getRangeToRender();\n\n      const items = [];\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          items.push(\n            createElement(children, {\n              data: itemData,\n              key: itemKey(index, itemData),\n              index,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              style: this._getItemStyle(index),\n            })\n          );\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalSize = getEstimatedTotalSize(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: isHorizontal ? '100%' : estimatedTotalSize,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: isHorizontal ? estimatedTotalSize : '100%',\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanStartIndex: number,\n      overscanStopIndex: number,\n      visibleStartIndex: number,\n      visibleStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanStartIndex: number,\n        overscanStopIndex: number,\n        visibleStartIndex: number,\n        visibleStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollDirection: ScrollDirection,\n      scrollOffset: number,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollDirection: ScrollDirection,\n        scrollOffset: number,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): onScrollCallback)({\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        const { itemCount } = this.props;\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex,\n          ] = this._getRangeToRender();\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          );\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        const {\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        } = this.state;\n        this._callOnScroll(\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (index: number) => Object;\n    _getItemStyle = (index: number): Object => {\n      const { direction, itemSize, layout } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\n        shouldResetStyleCacheOnItemSizeChange && layout,\n        shouldResetStyleCacheOnItemSizeChange && direction\n      );\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(index)) {\n        style = itemStyleCache[index];\n      } else {\n        const offset = getItemOffset(this.props, index, this._instanceProps);\n        const size = getItemSize(this.props, index, this._instanceProps);\n\n        // TODO Deprecate direction \"horizontal\"\n        const isHorizontal =\n          direction === 'horizontal' || layout === 'horizontal';\n\n        const isRtl = direction === 'rtl';\n        const offsetHorizontal = isHorizontal ? offset : 0;\n        itemStyleCache[index] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offsetHorizontal,\n          right: isRtl ? offsetHorizontal : undefined,\n          top: !isHorizontal ? offset : 0,\n          height: !isHorizontal ? size : '100%',\n          width: isHorizontal ? size : '100%',\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getRangeToRender(): [number, number, number, number] {\n      const { itemCount, overscanCount } = this.props;\n      const { isScrolling, scrollDirection, scrollOffset } = this.state;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getStartIndexForOffset(\n        this.props,\n        scrollOffset,\n        this._instanceProps\n      );\n      const stopIndex = getStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollOffset,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || scrollDirection === 'backward'\n          ? Math.max(1, overscanCount)\n          : 1;\n      const overscanForward =\n        !isScrolling || scrollDirection === 'forward'\n          ? Math.max(1, overscanCount)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScrollHorizontal = (event: ScrollEvent): void => {\n      const { clientWidth, scrollLeft, scrollWidth } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollLeft) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        let scrollOffset = scrollLeft;\n        if (direction === 'rtl') {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              scrollOffset = -scrollLeft;\n              break;\n            case 'positive-descending':\n              scrollOffset = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _onScrollVertical = (event: ScrollEvent): void => {\n      const { clientHeight, scrollHeight, scrollTop } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollTop) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1, null);\n      });\n    };\n  };\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    layout,\n    innerTagName,\n    outerTagName,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn(\n            'The direction prop should be either \"ltr\" (default) or \"rtl\". ' +\n              'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.'\n          );\n        }\n        break;\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"layout\" prop has been specified. ' +\n            'Value should be either \"horizontal\" or \"vertical\". ' +\n            `\"${layout}\" was specified.`\n        );\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Horizontal lists must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Vertical lists must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedItemSize: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype InstanceProps = {|\n  itemMetadataMap: { [index: number]: ItemMetadata },\n  estimatedItemSize: number,\n  lastMeasuredIndex: number,\n|};\n\nconst getItemMetadata = (\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  const { itemSize } = ((props: any): VariableSizeProps);\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = ((itemSize: any): itemSizeGetter)(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const { itemCount } = props;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getEstimatedTotalSize = (\n  { itemCount }: Props<any>,\n  { itemMetadataMap, estimatedItemSize, lastMeasuredIndex }: InstanceProps\n) => {\n  let totalSizeOfMeasuredItems = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nconst VariableSizeList = createListComponent({\n  getItemOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata(props, index, instanceProps).offset,\n\n  getItemSize: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.itemMetadataMap[index].size,\n\n  getEstimatedTotalSize,\n\n  getOffsetForIndexAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\n\n    // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n\n    const maxOffset = Math.max(\n      0,\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\n    );\n    const minOffset = Math.max(\n      0,\n      itemMetadata.offset - size + itemMetadata.size\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    props: Props<any>,\n    offset: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem(props, instanceProps, offset),\n\n  getStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, itemCount, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\n    const maxOffset = scrollOffset + size;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const { estimatedItemSize } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredIndex: -1,\n    };\n\n    instance.resetAfterIndex = (\n      index: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instanceProps.lastMeasuredIndex = Math.min(\n        instanceProps.lastMeasuredIndex,\n        index - 1\n      );\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeList;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as DeptServiceSelector from 'store/departmentService/shared/selectors';\r\nimport * as DeptServiceSlice from 'store/departmentService/shared/slice';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { DepartmentServiceSaga } from 'store/departmentService/shared/saga';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { VariableSizeList, ListChildComponentProps } from 'react-window';\r\n\r\nconst LISTBOX_PADDING = 8;\r\n\r\nfunction renderRow(props: ListChildComponentProps) {\r\n  const { data, index, style } = props;\r\n  return React.cloneElement(data[index], {\r\n    style: {\r\n      ...style,\r\n      top: (style.top as number) + LISTBOX_PADDING,\r\n    },\r\n  });\r\n}\r\n\r\nconst OuterElementContext = React.createContext({});\r\n\r\nconst OuterElementType = React.forwardRef<HTMLDivElement>((props, ref) => {\r\n  const outerProps = React.useContext(OuterElementContext);\r\n  return <div ref={ref} {...props} {...outerProps} />;\r\n});\r\n\r\nfunction useResetCache(data: any) {\r\n  const ref = React.useRef<VariableSizeList>(null);\r\n  React.useEffect(() => {\r\n    if (ref.current != null) {\r\n      ref.current.resetAfterIndex(0, true);\r\n    }\r\n  }, [data]);\r\n  return ref;\r\n}\r\n\r\nconst ListboxComponent = React.forwardRef<HTMLDivElement>(\r\n  function ListboxComponent(props, ref) {\r\n    const { children, ...other } = props;\r\n    const itemData = React.Children.toArray(children);\r\n    const theme = useTheme();\r\n    const smUp = useMediaQuery(theme.breakpoints.up('sm'), { noSsr: true });\r\n    const itemCount = itemData.length;\r\n    const itemSize = smUp ? 36 : 48;\r\n\r\n    const getChildSize = (child: React.ReactNode) => {\r\n      if (React.isValidElement(child) && child.type === ListSubheader) {\r\n        return 48;\r\n      }\r\n\r\n      return itemSize;\r\n    };\r\n\r\n    const getHeight = () => {\r\n      if (itemCount > 8) {\r\n        return 8 * itemSize;\r\n      }\r\n      return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    const gridRef = useResetCache(itemCount);\r\n\r\n    return (\r\n      <div ref={ref}>\r\n        <OuterElementContext.Provider value={other}>\r\n          <VariableSizeList\r\n            itemData={itemData}\r\n            height={getHeight() + 2 * LISTBOX_PADDING}\r\n            width=\"100%\"\r\n            ref={gridRef}\r\n            outerElementType={OuterElementType}\r\n            innerElementType=\"ul\"\r\n            itemSize={index => getChildSize(itemData[index])}\r\n            overscanCount={5}\r\n            itemCount={itemCount}\r\n          >\r\n            {renderRow}\r\n          </VariableSizeList>\r\n        </OuterElementContext.Provider>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport function DeptServiceActions({ open, onClose }) {\r\n  const dispatch = useDispatch();\r\n  useInjectReducer({\r\n    key: DeptServiceSlice.sliceKey,\r\n    reducer: DeptServiceSlice.reducer,\r\n  });\r\n  useInjectSaga({\r\n    key: DeptServiceSlice.sliceKey,\r\n    saga: DepartmentServiceSaga,\r\n  });\r\n  const services: any[] = useSelector(DeptServiceSelector.selectServices);\r\n  const deptService: any = useSelector(DeptServiceSelector.selectDeptService);\r\n  const listPerRoom: any = useSelector(DeptServiceSelector.selectListPerRoom);\r\n  const {\r\n    handleSubmit,\r\n    errors,\r\n    control,\r\n    clearErrors,\r\n    setValue,\r\n    setError,\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(DeptServiceSlice.actions.clearDeptService());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function initFormData(deptService) {\r\n      if (!_.isEmpty(deptService)) {\r\n        const {\r\n          room_code,\r\n          room_name,\r\n          examination_code,\r\n          examination_name,\r\n        } = deptService;\r\n        setValue('room_code', {\r\n          code: room_code,\r\n          name: room_name,\r\n        });\r\n        setValue('examination_code', {\r\n          code: examination_code,\r\n          name: examination_name,\r\n        });\r\n      }\r\n    }\r\n    setTimeout(() => initFormData(deptService));\r\n  }, [deptService]);\r\n\r\n  const onSubmit = (values: any) => {\r\n    let service_code: any[] = values['service_code'];\r\n    if (!service_code.length) {\r\n      return setError('service_code', { type: 'required' });\r\n    }\r\n    service_code = service_code.map(({ code }) => code);\r\n    const reqquest = {\r\n      examination_code: _.get(values, 'examination_code.code'),\r\n      room_code: _.get(values, 'room_code.code'),\r\n      service_code,\r\n    };\r\n    if (deptService.length === undefined) {\r\n      return dispatch(DeptServiceSlice.actions.addDeptServicesInDept(reqquest));\r\n    }\r\n    dispatch(DeptServiceSlice.actions.updateDeptServicesInDept(reqquest));\r\n  };\r\n\r\n  const formatService = service => {\r\n    return {\r\n      description: service.service_name,\r\n      code: service.service_code,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'sm'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n      disableBackdropClick\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3 font-weight-bold\">\r\n            {deptService.length === undefined\r\n              ? 'Thêm dịch vụ'\r\n              : 'Cập nhật dịch vu'}\r\n          </h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"examination_code\">Phòng chỉ định</label>\r\n            <Controller\r\n              name=\"examination_code\"\r\n              control={control}\r\n              rules={{ required: true }}\r\n              defaultValue={null}\r\n              render={({ field, ...input }: any) => {\r\n                return (\r\n                  <Autocomplete\r\n                    value={input.value}\r\n                    disableListWrap\r\n                    options={\r\n                      !_.isEmpty(listPerRoom) && listPerRoom.data.length\r\n                        ? listPerRoom.data\r\n                        : []\r\n                    }\r\n                    getOptionLabel={option => option.name}\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Phòng chỉ định\"\r\n                      />\r\n                    )}\r\n                    onChange={(e, value) => {\r\n                      clearErrors('examination_code');\r\n                      setValue('examination_code', value);\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n            {errors.examination_code &&\r\n              errors.examination_code?.type === 'required' && (\r\n                <span style={{ color: ' #fb0606' }}>\r\n                  Vui lòng chọn phòng chỉ định\r\n                </span>\r\n              )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">Phòng thực hiện</label>\r\n            <Controller\r\n              name=\"room_code\"\r\n              control={control}\r\n              rules={{ required: true }}\r\n              defaultValue={null}\r\n              render={({ field, ...input }: any) => {\r\n                return (\r\n                  <Autocomplete\r\n                    value={input.value}\r\n                    disableListWrap\r\n                    options={\r\n                      !_.isEmpty(listPerRoom) && listPerRoom.data.length\r\n                        ? listPerRoom.data\r\n                        : []\r\n                    }\r\n                    getOptionLabel={option => option?.name}\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Phòng thực hiện\"\r\n                      />\r\n                    )}\r\n                    onChange={(e, value) => {\r\n                      clearErrors('room_code');\r\n                      setValue('room_code', value);\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n            {errors.room_code && errors.room_code?.type === 'required' && (\r\n              <span style={{ color: ' #fb0606' }}>\r\n                Vui lòng chọn phòng thực hiện\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"service_code\" className=\"mb-3\">\r\n              Chọn dịch vụ\r\n            </label>\r\n            <Controller\r\n              name=\"service_code\"\r\n              control={control}\r\n              rules={{ required: true }}\r\n              defaultValue={\r\n                !_.isEmpty(deptService) && deptService.length\r\n                  ? deptService.map(formatService)\r\n                  : []\r\n              }\r\n              render={({ field, ...input }: any) => {\r\n                return (\r\n                  <Autocomplete\r\n                    options={\r\n                      !_.isEmpty(services) && services.length ? services : []\r\n                    }\r\n                    value={input.value}\r\n                    disableCloseOnSelect\r\n                    disableListWrap\r\n                    multiple\r\n                    limitTags={2}\r\n                    getOptionLabel={option => option?.description}\r\n                    ListboxComponent={\r\n                      ListboxComponent as React.ComponentType<\r\n                        React.HTMLAttributes<HTMLElement>\r\n                      >\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Chọn dịch vụ\"\r\n                      />\r\n                    )}\r\n                    renderOption={(option, { selected }) => {\r\n                      return (\r\n                        <React.Fragment>\r\n                          <Checkbox\r\n                            icon={icon}\r\n                            checkedIcon={checkedIcon}\r\n                            style={{ marginRight: 8 }}\r\n                            checked={selected}\r\n                            color=\"primary\"\r\n                          />\r\n                          {option.description}\r\n                        </React.Fragment>\r\n                      );\r\n                    }}\r\n                    onChange={(e, value) => {\r\n                      setValue('service_code', value);\r\n                      clearErrors('service_code');\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n            {errors.service_code &&\r\n              errors.service_code?.type === 'required' && (\r\n                <span style={{ color: ' #fb0606' }}>Vui lòng chọn dịch vụ</span>\r\n              )}\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end py-3 mb-0\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              onClick={onClose}\r\n            >\r\n              Đóng\r\n            </button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">\r\n              Lưu\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-fallthrough */\r\nimport React, { useEffect, useState, useMemo, useReducer } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as DeptServiceSelector from 'store/departmentService/shared/selectors';\r\nimport * as DeptServiceSlice from 'store/departmentService/shared/slice';\r\nimport * as DeptServiceConts from 'store/departmentService/constants/departmentService.constant';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { DepartmentServiceSaga } from 'store/departmentService/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Unsubscribe } from 'redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { useSnackbar } from 'notistack';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { DeptServiceActions } from '../components/DepartmentService/DeptServiceActions';\r\nimport { TableGroups } from 'store/departmentService/constants/departmentService.constant';\r\nimport { RootStore } from 'store/configureStore';\r\nimport { rowsPerArray } from 'store/common/constants/common.constant';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    height: '100%',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nconst defaultPagi = {\r\n  pageSize: 10,\r\n  pageNumber: 1,\r\n};\r\n\r\ninterface ModalState {\r\n  openModal: boolean;\r\n}\r\n\r\nenum ModalType {\r\n  OPEN = 'OPEN',\r\n}\r\n\r\ntype ModalActions = {\r\n  type: ModalType;\r\n  payload: any;\r\n};\r\n\r\nconst initModalState: ModalState = {\r\n  openModal: false,\r\n};\r\n\r\nconst reduceModal = (\r\n  state: ModalState = initModalState,\r\n  { type, payload }: ModalActions,\r\n): ModalState => {\r\n  switch (type) {\r\n    case ModalType.OPEN:\r\n      return {\r\n        ...state,\r\n        openModal: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function DepartmentService() {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({\r\n    key: DeptServiceSlice.sliceKey,\r\n    reducer: DeptServiceSlice.reducer,\r\n  });\r\n  useInjectSaga({\r\n    key: DeptServiceSlice.sliceKey,\r\n    saga: DepartmentServiceSaga,\r\n  });\r\n  const { register, handleSubmit, setValue } = useForm();\r\n  const deptServices: any = useSelector(DeptServiceSelector.selectDeptServices);\r\n  const loading = useSelector(DeptServiceSelector.selectLoading);\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<any>('name');\r\n  const [pagi, setPagi] = useState(defaultPagi);\r\n  const [{ openModal }, dispatchModal] = useReducer(\r\n    reduceModal,\r\n    initModalState,\r\n  );\r\n  useEffect(() => {\r\n    dispatch(DeptServiceSlice.actions.getListDeptServices(pagi));\r\n    dispatch(DeptServiceSlice.actions.getPerformanceRoom());\r\n    dispatch(DeptServiceSlice.actions.getAllServices());\r\n    const rootStore$: Unsubscribe = RootStore.subscribe(() => {\r\n      const { type, payload }: any = RootStore.getState().lastAction;\r\n      switch (type) {\r\n        case DeptServiceSlice.actions.getListDeptServicesSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              DeptServiceConts.RESPONSE_DEPARTMENT_MESSAGE\r\n                .GET_LIST_DEP_SERVICE_SUCCESS,\r\n            )\r\n            .setSuccessNotify();\r\n          break;\r\n        case DeptServiceSlice.actions.addDeptServicesInDeptSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              DeptServiceConts.RESPONSE_DEPARTMENT_MESSAGE\r\n                .CREATE_DEPT_SERVICE_SUCCESS,\r\n            )\r\n            .setSuccessNotify();\r\n          renderListDeptService();\r\n          break;\r\n        case DeptServiceSlice.actions.updateDeptServicesInDeptSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              DeptServiceConts.RESPONSE_DEPARTMENT_MESSAGE\r\n                .UPDATE_DEPT_SERVICE_SUCCESS,\r\n            )\r\n            .setSuccessNotify();\r\n          renderListDeptService();\r\n          break;\r\n        case DeptServiceSlice.actions.getDeptServicesByIdSuccess.type:\r\n          dispatchModal({ type: ModalType.OPEN, payload: true });\r\n          break;\r\n        case DeptServiceSlice.actions.getListDeptServicesFail.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              payload\r\n                ? payload\r\n                : DeptServiceConts.RESPONSE_DEPARTMENT_MESSAGE\r\n                    .GET_LIST_DEP_SERVICE_FAIL,\r\n            )\r\n            .setFailNotify();\r\n          break;\r\n        case DeptServiceSlice.actions.getDeptServicesByIdFail.type:\r\n          notifyController.setNotifyMessage(payload).setFailNotify();\r\n          break;\r\n        case DeptServiceSlice.actions.addDeptServicesInDeptFail.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              payload\r\n                ? payload\r\n                : DeptServiceConts.RESPONSE_DEPARTMENT_MESSAGE\r\n                    .CREATE_DEPT_SERVICE_FAIL,\r\n            )\r\n            .setFailNotify();\r\n          break;\r\n        case DeptServiceSlice.actions.updateDeptServicesInDeptFail.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              payload\r\n                ? payload\r\n                : DeptServiceConts.RESPONSE_DEPARTMENT_MESSAGE\r\n                    .UPDATE_DEPT_SERVICE_FAIL,\r\n            )\r\n            .setFailNotify();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return () => {\r\n      rootStore$();\r\n    };\r\n  }, []);\r\n\r\n  const memoGroups = useMemo(() => {\r\n    const { data = [], total_records, page_number, page_size } = deptServices;\r\n    return {\r\n      data,\r\n      total: total_records,\r\n      pageNumber: page_number,\r\n      pageSize: page_size,\r\n    };\r\n  }, [deptServices]);\r\n\r\n  const renderListDeptService = () => {\r\n    dispatchModal({ type: ModalType.OPEN, payload: false });\r\n    dispatch(DeptServiceSlice.actions.getListDeptServices(pagi));\r\n  };\r\n\r\n  const submitSearch = (values: any) => {\r\n    dispatch(\r\n      DeptServiceSlice.actions.getListDeptServices({\r\n        ...values,\r\n        ...pagi,\r\n        pageNumber: 1,\r\n      }),\r\n    );\r\n    setPagi({\r\n      ...pagi,\r\n      pageNumber: 1,\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setValue('serviceCode', null);\r\n    setValue('roomCode', null);\r\n    setPagi(defaultPagi);\r\n    dispatch(\r\n      DeptServiceSlice.actions.getListDeptServices({\r\n        pageNumber: 1,\r\n        pageSize: 10,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <form onSubmit={handleSubmit(submitSearch)}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"serviceCode\"\r\n              name=\"serviceCode\"\r\n              placeholder=\"Tìm theo mã dịch vụ\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"roomCode\"\r\n              name=\"roomCode\"\r\n              placeholder=\"Tìm theo mã phòng khám\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"btn-group\">\r\n              <button\r\n                className=\"btn btn-outline-success btn__config mr-1\"\r\n                type=\"submit\"\r\n              >\r\n                Tìm kiếm <i className=\"fa fa-search\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n              <button\r\n                className=\"btn btn-outline-warning btn__config\"\r\n                type=\"button\"\r\n                onClick={handleReset}\r\n              >\r\n                Reset <i className=\"fa fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 text-right\">\r\n            <div className=\"btn-group\">\r\n              <button\r\n                className=\"btn btn-outline-success btn__config\"\r\n                type=\"button\"\r\n                onClick={() =>\r\n                  dispatchModal({ type: ModalType.OPEN, payload: true })\r\n                }\r\n              >\r\n                Thêm phòng khám dịch vụ <i className=\"fa fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={TableGroups}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!_.isEmpty(deptServices) && deptServices.data.length) {\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        memoGroups.data,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      return tableData.map((row, idx) => {\r\n        const deptService = _.cloneDeep(row);\r\n        return (\r\n          <TableRow key={idx}>\r\n            {TableGroups.map(column => {\r\n              const value = deptService[column.id];\r\n              if (column.id === 'is_active') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <i\r\n                      style={{\r\n                        color: value ? '#4caf50' : '#ff0000',\r\n                        fontSize: '16px',\r\n                      }}\r\n                      className={`fa fa-${value ? 'check' : 'times'}-circle`}\r\n                      aria-hidden=\"true\"\r\n                    ></i>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              if (column.id === 'actions') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs\"\r\n                        onClick={() => {\r\n                          dispatch(\r\n                            DeptServiceSlice.actions.getDeptServicesById(\r\n                              row.examination_code,\r\n                            ),\r\n                          );\r\n                        }}\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={TableGroups.length}\r\n          >\r\n            Không có dữ liệu\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, page: number) => {\r\n    let changePage = Object.assign({}, pagi, {\r\n      pageNumber: page + 1,\r\n    });\r\n    setPagi(changePage);\r\n    dispatch(DeptServiceSlice.actions.getListDeptServices(changePage));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    let changeRowPerPage = Object.assign({}, pagi, {\r\n      pageSize: +event.target.value,\r\n      pageNumber: 1,\r\n    });\r\n    setPagi(changeRowPerPage);\r\n    dispatch(DeptServiceSlice.actions.getListDeptServices(changeRowPerPage));\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(memoGroups) && memoGroups.data.length) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          labelRowsPerPage=\"Hiển Thị\"\r\n          count={memoGroups.total}\r\n          rowsPerPage={memoGroups.pageSize}\r\n          page={memoGroups.pageNumber - 1}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {loading && <AppLoading loading={true} />}\r\n      {openModal && (\r\n        <DeptServiceActions\r\n          open={openModal}\r\n          onClose={() =>\r\n            dispatchModal({ type: ModalType.OPEN, payload: false })\r\n          }\r\n        />\r\n      )}\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as SettingSelector from 'store/setting/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE, SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport { DEFAULT_ID } from 'store/common/constants/common.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalAddFaculty({ open, onClose }) {\r\n  const settingHttp = new SettingHttp();\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  const facultyType = useSelector(SettingSelector.selectSettingType);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = faculty => { \r\n    const {code, description, isActive, isSystem } = faculty;\r\n    settingHttp.checkUniqueCode({\r\n      code: faculty.code,\r\n      id: !_.isEmpty(facultyType) ? facultyType.id : DEFAULT_ID,\r\n      manageType: SettingManageType.Faculty,\r\n    }).then(response => response.data)\r\n    .then(facultyRes => {\r\n      if (AppHelper.checkResponseData(facultyRes)) {\r\n        const result = _.get(facultyRes, 'result');\r\n        if (result) {\r\n          return dispatch(Settinglice.actions.setError({\r\n            id: AppHelper.generateUUID() + Date.now(),\r\n            key: RESPONSE_CONSTANT.FACULTY.CHECK_CODE_FAIL,\r\n            message: RESPONSE_MESSAGE.FACULTY.CHECK_CODE_FAIL,\r\n          }));\r\n        }\r\n        dispatch(Settinglice.actions.createManageType({\r\n          code,\r\n          description,\r\n          isActive,\r\n          isSystem,\r\n          settingTypeId: facultyType.id,\r\n          manageType: SettingManageType.Faculty\r\n        }));\r\n      }\r\n    })\r\n    .catch(error => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-position\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-position pb-3\">Thêm Khoa</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control name\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                {errors.description && errors.description?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isActive\" defaultChecked={true} /> \r\n              Hoạt động\r\n            </label>\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"isSystem\" defaultChecked={true} /> \r\n              Hệ thống\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as Settinglice from 'store/setting/shared/slice';\r\nimport * as SettingSelector from 'store/setting/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { RESPONSE_CONSTANT, RESPONSE_MESSAGE, SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalUpdateFaculty({ open, onClose }) {\r\n  const settingHttp = new SettingHttp();\r\n  useInjectReducer({ key: Settinglice.sliceKey, reducer: Settinglice.reducer });\r\n  useInjectSaga({ key: Settinglice.sliceKey, saga: SettingSaga });\r\n  const facultyType = useSelector(SettingSelector.selectSettingType);\r\n  const initFaculty = useSelector(SettingSelector.selectSettingTemp);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = faculty => { \r\n    if ((faculty.code !== initFaculty.code)) {\r\n      return settingHttp.checkUniqueCode({\r\n        code: faculty.code,\r\n        id: facultyType.id,\r\n        manageType: SettingManageType.Faculty,\r\n      }).then(response => response.data)\r\n      .then(facultyRes => {\r\n        if (AppHelper.checkResponseData(facultyRes)) {\r\n          const result = _.get(facultyRes, 'result');\r\n          if (result) {\r\n            return dispatch(Settinglice.actions.setError({\r\n              id: AppHelper.generateUUID() + Date.now(),\r\n              key: RESPONSE_CONSTANT.FACULTY.CHECK_CODE_FAIL,\r\n              message: RESPONSE_MESSAGE.FACULTY.CHECK_CODE_FAIL,\r\n            }));\r\n          }\r\n          updateFaculty(faculty);\r\n        }\r\n      })\r\n      .catch(error => console.error(error));\r\n    }\r\n    updateFaculty(faculty);\r\n  }\r\n\r\n  const updateFaculty = (faculty) => {\r\n    const {code, description, isActive, isSystem } = faculty;\r\n    dispatch(Settinglice.actions.updateManageType({\r\n      code,\r\n      description,\r\n      isActive,\r\n      isSystem,\r\n      id: initFaculty.id,\r\n      settingTypeId: facultyType.id,\r\n      manageType: SettingManageType.Faculty\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        {\r\n          !_.isEmpty(initFaculty) ? (\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <h4 className=\"modal-title pb-3\">Cập Nhật Thông Tin Khoa</h4>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"code\">\r\n                    Mã\r\n                  </label>\r\n                  <input\r\n                    id=\"code\"\r\n                    type=\"text\"\r\n                    className=\"form-control Code\"\r\n                    name=\"code\"\r\n                    defaultValue={initFaculty.code}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Mã\" autoComplete=\"off\" />\r\n                    {errors.code && errors.code?.type === 'required' ? (\r\n                      <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                    ) : null}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">\r\n                  Tên\r\n                  </label>\r\n                  <input\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    className=\"form-control name\"\r\n                    name=\"description\"\r\n                    defaultValue={initFaculty.description}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                    {errors.description && errors.description?.type === 'required' ? (\r\n                      <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                    ) : null}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"checkbox-inline\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    ref={register()}\r\n                    name=\"isActive\"\r\n                    defaultChecked={initFaculty.is_active} /> \r\n                  Hoạt động\r\n                </label>\r\n                <label className=\"checkbox-inline\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    ref={register()}\r\n                    name=\"isSystem\"\r\n                    defaultChecked={initFaculty.is_system} /> \r\n                  Hệ thống\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group d-flex justify-content-end\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n                <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n              </div>\r\n            </form>\r\n          ) : null\r\n        }\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sliceKey, reducer, actions } from 'store/setting/shared/slice';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { SettingSaga } from 'store/setting/shared/saga';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport {\r\n  selectLoading,\r\n  selectSettingList,\r\n  selectError,\r\n  selectSuccess,\r\n} from 'store/setting/shared/selectors';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { tableValue } from 'store/setting/constants/setting.constant';\r\nimport { ModalAddFaculty } from '../components/Faculty/ModalAddFaculty';\r\nimport { ModalUpdateFaculty } from '../components/Faculty/ModalUpdateFaculty';\r\nimport { ModalConfirm } from 'app/components/Modal/Confirm';\r\nimport { EMPTY_MESSAGE } from 'store/common/constants/common.constant';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: '80vh',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport function Faculty() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({ key: sliceKey, reducer });\r\n  useInjectSaga({ key: sliceKey, saga: SettingSaga });\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const facultyList = useSelector<any>(selectSettingList);\r\n  const [faculty, setFaculties] = useState<any>();\r\n  const loading: any = useSelector<any>(selectLoading);\r\n  const error: any = useSelector<any>(selectError);\r\n  const success: any = useSelector<any>(selectSuccess);\r\n  const [openAddFaculty, setOpenAddFaculty] = useState<boolean>(false);\r\n  const [openUpdateFaculty, setOpenUpdateFaculty] = useState<boolean>(false);\r\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\r\n  const [idDelete, setIdDelete] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.resetAll());\r\n    dispatch(actions.getAllManageType(SettingManageType.Faculty));\r\n    dispatch(actions.getManageType(SettingManageType.Faculty));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(facultyList)) {\r\n      setFaculties(facultyList);\r\n    }\r\n  }, [facultyList]);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(error)) {\r\n      notifyController.setNotifyMessage(error.message).setFailNotify();\r\n      dispatch(actions.clearError());\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(success)) {\r\n      notifyController.setNotifyMessage(success.message).setSuccessNotify();\r\n      dispatch(actions.clearSuccess());\r\n      dispatch(actions.getAllManageType(SettingManageType.Faculty));\r\n      closeDialog();\r\n    }\r\n  }, [success]);\r\n\r\n  const syncPositionData = () => {\r\n    dispatch(actions.getAllManageType(SettingManageType.Faculty));\r\n  };\r\n\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<any>('code');\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const changeStatusFaculty = (e, id) => {\r\n    dispatch(\r\n      actions.changeManageTypeActive({\r\n        id,\r\n        isActive: e.target.checked,\r\n        manageType: SettingManageType.Faculty,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const deleteFaculty = () => {\r\n    if (idDelete === '') return;\r\n    dispatch(\r\n      actions.deleteManageType({\r\n        id: idDelete,\r\n        manageType: SettingManageType.Faculty,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const openDeleteFaculty = id => {\r\n    setIdDelete(id);\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const setOpenUpdateFacultyModal = faculty => {\r\n    setOpenUpdateFaculty(true);\r\n    dispatch(actions.setTempManageType(faculty));\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setOpenAddFaculty(false);\r\n    setOpenUpdateFaculty(false);\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 col-sm-6 col-xs-6\">\r\n          <div className=\"btn-group\">\r\n            <button\r\n              className=\"btn btn-info\"\r\n              onClick={() => setOpenAddFaculty(true)}\r\n            >\r\n              Thêm mới <i className=\"fa fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"btn-group ml-3\">\r\n            <button className=\"btn btn-info\" onClick={syncPositionData}>\r\n              Đồng bộ <i className=\"fa fa-refresh\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={tableValue}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!_.isEmpty(faculty) && faculty.length) {\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        faculty,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      return tableData.map((row, idx) => {\r\n        const position = _.cloneDeep(row);\r\n        return (\r\n          <TableRow key={row.id}>\r\n            {tableValue.map(column => {\r\n              const value = position[column.id];\r\n              if (column.id === 'no') {\r\n                return <TableCell key={column.id}>{idx + 1}</TableCell>;\r\n              } else if (column.id === 'is_active') {\r\n                if (value) {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#4caf50', fontSize: '16px' }}\r\n                        className=\"fa fa-check-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      <i\r\n                        style={{ color: '#ff0000', fontSize: '16px' }}\r\n                        className=\"fa fa-times-circle\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </TableCell>\r\n                  );\r\n                }\r\n              } else if (column.id === 'actions') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <Tooltip\r\n                      title={'Đổi Trạng thái'}\r\n                      enterDelay={500}\r\n                      leaveDelay={100}\r\n                    >\r\n                      <Switch\r\n                        checked={position.is_active}\r\n                        onChange={e => changeStatusFaculty(e, position.id)}\r\n                        color=\"primary\"\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      />\r\n                    </Tooltip>\r\n                    <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs\"\r\n                        onClick={() => setOpenUpdateFacultyModal(position)}\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                    <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-danger btn-xs mx-2\"\r\n                        onClick={() => openDeleteFaculty(position.id)}\r\n                      >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={tableValue.length}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {openAddFaculty ? (\r\n        <ModalAddFaculty open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      {openUpdateFaculty ? (\r\n        <ModalUpdateFaculty open={true} onClose={closeDialog} />\r\n      ) : null}\r\n      <ModalConfirm\r\n        title={'Bạn có chắc chắn muốn xoá khoa này?'}\r\n        other={{\r\n          bodyText: '',\r\n        }}\r\n        keyConfirm={''}\r\n        open={openDelete}\r\n        onClose={() => closeDialog()}\r\n        confirmMethod={() => deleteFaculty()}\r\n      />\r\n      {loading ? <AppLoading loading={true} /> : null}\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable prettier/prettier */\r\nimport React, { useState, useEffect, InputHTMLAttributes } from 'react';\r\nimport * as CommonSelector from 'store/common/shared/selectors';\r\nimport * as CommonSlice from 'store/common/shared/slice';\r\nimport * as _ from 'lodash';\r\nimport { CommonSaga } from 'store/common/shared/saga';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useForm } from 'react-hook-form';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { useSnackbar } from 'notistack';\r\nimport AppLoading from 'app/components/Loading';\r\n\r\nexport function DefaultSetting() {\r\n  useInjectReducer({\r\n    key: CommonSlice.sliceKey,\r\n    reducer: CommonSlice.reducer,\r\n  });\r\n  useInjectSaga({\r\n    key: CommonSlice.sliceKey,\r\n    saga: CommonSaga,\r\n  });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { handleSubmit, register, errors, setValue } = useForm();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(CommonSelector.selectLoading);\r\n  const defaultSetting = useSelector(CommonSelector.selectDefaultSetting);\r\n  const success = useSelector(CommonSelector.selectSuccess);\r\n  const error = useSelector(CommonSelector.selectError);\r\n  const [logoUpload, setLogoUpload] = useState<any>(null);\r\n  const [backgroundUpload, setBackgroundUpload] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(success)) {\r\n      notifyController.setNotifyMessage(success.message).setSuccessNotify();\r\n      dispatch(CommonSlice.actions.clearSuccess());\r\n      resetState();\r\n    }\r\n  }, [success]);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(error)) {\r\n      notifyController.setNotifyMessage(error.message).setSuccessNotify();\r\n      dispatch(CommonSlice.actions.clearError());\r\n    }\r\n  }, [error]);\r\n\r\n  const changeSetting = (e, type: CommonSlice.DefaultSettingTypes) => {\r\n    let updateSetting: CommonSlice.SettingModel = _.clone(defaultSetting);\r\n    const newValUpdate: string = e.target.value;\r\n    if (type === CommonSlice.DefaultSettingTypes.VINAME) {\r\n      updateSetting.viName = newValUpdate;\r\n    } else if (type === CommonSlice.DefaultSettingTypes.ENNAME) {\r\n      updateSetting.enName = newValUpdate;\r\n    } else if (type === CommonSlice.DefaultSettingTypes.CODE) {\r\n      updateSetting.code = newValUpdate;\r\n    } else if (type === CommonSlice.DefaultSettingTypes.SLOGAN) {\r\n      updateSetting.slogan = newValUpdate;\r\n    }\r\n    dispatch(CommonSlice.actions.setDefaultSetting(updateSetting));\r\n  }\r\n\r\n  const resetState = () => {\r\n    setLogoUpload(null);\r\n    setBackgroundUpload(null);\r\n    setValue('logoUrl', null);\r\n    setValue('backgroundUrl', null);\r\n  }\r\n\r\n  const changeLogo = e => setLogoUpload(e.target.files[0]);\r\n\r\n  const changeBackground = e => setBackgroundUpload(e.target.files[0]);\r\n\r\n  const submitEditSetting = setting => {\r\n    dispatch(CommonSlice.actions.updateSetting(setting));\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <form className=\"col-md-12\" onSubmit={handleSubmit(submitEditSetting)}>\r\n        {loading ? <AppLoading loading={true} /> : null}\r\n        <React.Fragment>\r\n          <div className=\"profile-content\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-head card-topline-aqua\">\r\n                    <header>Thông tin cài đặt</header>\r\n                  </div>\r\n                  <div className=\"card-body no-padding height-9\">\r\n                    <div className=\"container-fluid\">\r\n                      <div className=\"row\">\r\n                        <div className=\"offset-md-1 col-md-10\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-sm-12\">\r\n                              <div className=\"form-group row d-flex align-items-center\">\r\n                                <label\r\n                                  htmlFor=\"logo\"\r\n                                  className=\"col-sm-3 control-label font-weight-bold\"\r\n                                >\r\n                                  Logo bệnh viện\r\n                                  <span className=\"d-block font-weight-normal\" style={{ color: '#888' }}>Kích thướt ảnh tối thiểu 300 x 300 pixels</span>\r\n                                </label>\r\n                                <div className=\"col-md-5\">\r\n                                  <div className=\"custom-file\">\r\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"logo\" name=\"logoUrl\" ref={register({required: true})} onChange={changeLogo} />\r\n                                    <label className=\"custom-file-label\" htmlFor=\"logo\">{ logoUpload ? logoUpload.name : 'Chọn file logo'}</label>\r\n                                    {errors.logoUrl && errors.logoUrl?.type === 'required' && (\r\n                                      <span style={{ color: ' #fb0606' }}>Vui lòng chọn file logo </span>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-3 offset-md-1\">\r\n                                  <img src={defaultSetting?.logoUrl} alt=\"\" className=\"img-responsive\" width=\"120\" />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm-12\">\r\n                              <div className=\"form-group row d-flex align-items-center\">\r\n                                <label\r\n                                  htmlFor=\"logo\"\r\n                                  className=\"col-sm-3 control-label font-weight-bold\"\r\n                                >\r\n                                  Ảnh nền bệnh viện\r\n                                  <span className=\"d-block font-weight-normal\" style={{ color: '#888' }}>Kích thướt ảnh tối thiểu 1360 x 540 pixels</span>\r\n                                </label>\r\n                                <div className=\"col-md-5\">\r\n                                  <div className=\"custom-file\">\r\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"background\" name=\"backgroundUrl\" ref={register({required: true})} onChange={changeBackground} />\r\n                                    <label className=\"custom-file-label\" htmlFor=\"background\">{ backgroundUpload ? backgroundUpload.name : 'Chọn file ảnh nền'}</label>\r\n                                    {errors.backgroundUrl && errors.backgroundUrl?.type === 'required' && (\r\n                                      <span style={{ color: ' #fb0606' }}>Vui lòng chọn file ảnh nền </span>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-3 offset-md-1\">\r\n                                  <img src={defaultSetting?.backgroundUrl} alt=\"\" className=\"img-responsive\" width=\"120\" />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"col-sm-12\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"viName\"\r\n                                  className=\"col-sm-3 control-label font-weight-bold\"\r\n                                >\r\n                                  Tên Tiếng Việt\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"viName\"\r\n                                    name=\"viName\"\r\n                                    value={defaultSetting?.viName}\r\n                                    onChange={e => changeSetting(e, CommonSlice.DefaultSettingTypes.VINAME)}\r\n                                    ref={register({required: true})}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-sm-12\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"enName\"\r\n                                  className=\"col-sm-3 control-label font-weight-bold text-edit\"\r\n                                >\r\n                                  Tên Tiếng Anh\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control text-edit\"\r\n                                    id=\"enName\"\r\n                                    name=\"enName\"\r\n                                    value={defaultSetting?.enName}\r\n                                    onChange={e => changeSetting(e, CommonSlice.DefaultSettingTypes.ENNAME)}\r\n                                    ref={register({required: true})}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-sm-12\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"code\"\r\n                                  className=\"col-sm-3 control-label font-weight-bold\"\r\n                                >\r\n                                  Mã Bệnh Viện\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"code\"\r\n                                    name=\"code\"\r\n                                    value={defaultSetting?.code}\r\n                                    onChange={e => changeSetting(e, CommonSlice.DefaultSettingTypes.CODE)}\r\n                                    ref={register({required: true})}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-sm-12\">\r\n                              <div className=\"form-group row\">\r\n                                <label\r\n                                  htmlFor=\"slogan\"\r\n                                  className=\"col-sm-3 control-label font-weight-bold\"\r\n                                >\r\n                                  Slogan\r\n                                </label>\r\n                                <div className=\"col-sm-9\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"slogan\"\r\n                                    name=\"slogan\"\r\n                                    value={defaultSetting?.slogan}\r\n                                    onChange={e => changeSetting(e, CommonSlice.DefaultSettingTypes.SLOGAN)}\r\n                                    ref={register({required: true})}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-sm-12 text-center mt-3\">\r\n                              <button\r\n                                className=\"btn btn-primary btn-lg\"\r\n                                type=\"submit\"\r\n                              >\r\n                                Cập Nhật\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as DeptGroupSelector from 'store/departmentGroup/shared/selectors';\r\nimport * as DeptSelector from 'store/department/shared/selectors';\r\nimport * as GroupSlice from 'store/departmentGroup/shared/slice';\r\nimport * as DeptSlice from 'store/department/shared/slice';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { DeptGroupSaga } from 'store/departmentGroup/shared/saga';\r\nimport { DepartmentSaga } from 'store/department/shared/saga';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { configResponse } from 'utils/request';\r\nimport { Unsubscribe } from 'redux';\r\nimport { DeptGroupHttp } from 'store/departmentGroup/services/deptGroup.http';\r\nimport { RootStore } from 'store/configureStore';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport function DeptGroupActions({ open, onClose }) {\r\n  const api = new DeptGroupHttp();\r\n  const dispatch = useDispatch();\r\n  useInjectReducer({\r\n    key: GroupSlice.sliceKey,\r\n    reducer: GroupSlice.reducer,\r\n  });\r\n  useInjectSaga({ key: GroupSlice.sliceKey, saga: DeptGroupSaga });\r\n\r\n  useInjectReducer({ key: DeptSlice.sliceKey, reducer: DeptSlice.reducer });\r\n  useInjectSaga({ key: DeptSlice.sliceKey, saga: DepartmentSaga });\r\n  const group = useSelector(DeptGroupSelector.selectGroup);\r\n  const deptList: any = useSelector(DeptSelector.selectListDept);\r\n  const [openDrop, setOpenDrop] = useState<boolean>(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    control,\r\n    setValue,\r\n    setError,\r\n    clearErrors,\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    const getDeptInGroup = async (code: string) => {\r\n      try {\r\n        const groupDetps = await api.getDeptInGroup(code);\r\n        let data = await configResponse(groupDetps);\r\n        if (data && data.length) {\r\n          data = data.map(({ code, name, department_virtual_code }) => ({\r\n            code,\r\n            name,\r\n            department_virtual_code,\r\n          }));\r\n        }\r\n        setValue('depts', data);\r\n        const defaultRoom: any = deptList.data.find(\r\n          room => room.code === _.get(_.head(data), 'department_virtual_code'),\r\n        );\r\n        if (defaultRoom) {\r\n          setValue('departmentVirtualCode', defaultRoom);\r\n        }\r\n      } catch (err) {\r\n        setValue('depts', []);\r\n      }\r\n    };\r\n    if (!_.isEmpty(group)) {\r\n      getDeptInGroup(group.code);\r\n    }\r\n  }, [group, deptList]);\r\n\r\n  useEffect(() => {\r\n    const rootStore$: Unsubscribe = RootStore.subscribe(() => {\r\n      const { type, payload }: any = RootStore.getState().lastAction;\r\n      switch (type) {\r\n        case GroupSlice.actions.createGroupSuccess.type:\r\n        case GroupSlice.actions.updateGroupSuccess.type:\r\n          dispatch(GroupSlice.actions.addDeptToGroup(payload));\r\n          break;\r\n      }\r\n    });\r\n    dispatch(\r\n      DeptSlice.actions.getDepts({\r\n        pageNumber: 1,\r\n        pageSize: 9999,\r\n      }),\r\n    );\r\n    return () => {\r\n      rootStore$();\r\n      dispatch(GroupSlice.actions.clearGroup());\r\n    };\r\n  }, []);\r\n\r\n  const onSubmit = (values: any) => {\r\n    let deptsSelected: any[] = values['depts'];\r\n    if (!deptsSelected.length) {\r\n      return setError('depts', { type: 'required' });\r\n    }\r\n    deptsSelected = formatRequest(deptsSelected);\r\n    if (_.isEmpty(group)) {\r\n      return dispatch(\r\n        GroupSlice.actions.createGroup({\r\n          ...values,\r\n          depts: deptsSelected,\r\n        }),\r\n      );\r\n    }\r\n    dispatch(\r\n      GroupSlice.actions.updateGroup({\r\n        ...values,\r\n        id: group.id,\r\n        depts: deptsSelected,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const formatRequest = (groups: any[]) => {\r\n    if (!groups.length) return [];\r\n    return groups.map(({ code }) => code);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3 font-weight-bold\">Nhóm phòng khám</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"groupCode\">Mã nhóm phòng khám</label>\r\n            <input\r\n              id=\"groupCode\"\r\n              type=\"text\"\r\n              className=\"form-control Code\"\r\n              name=\"groupCode\"\r\n              ref={register({ required: true })}\r\n              placeholder=\"Mã\"\r\n              autoComplete=\"off\"\r\n              defaultValue={!_.isEmpty(group) ? group.code : ''}\r\n            />\r\n            {errors.groupCode && errors.groupCode?.type === 'required' ? (\r\n              <span style={{ color: ' #fb0606' }}>\r\n                Vui lòng nhập mã nhóm phòng khám\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"groupName\">Tên nhóm phòng khám</label>\r\n            <input\r\n              id=\"groupName\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"groupName\"\r\n              ref={register({ required: true })}\r\n              placeholder=\"Nhập tên nhóm phòng khám\"\r\n              autoComplete=\"off\"\r\n              defaultValue={!_.isEmpty(group) ? group.description : ''}\r\n            />\r\n            {errors.groupName && errors.groupName?.type === 'required' ? (\r\n              <span style={{ color: ' #fb0606' }}>\r\n                Vui lòng nhập tên nhóm phòng khám\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"departmentVirtualCode\">Phòng khám mặc định</label>\r\n            <Controller\r\n              name=\"departmentVirtualCode\"\r\n              control={control}\r\n              defaultValue={null}\r\n              rules={{ required: true }}\r\n              render={({ field, ...input }: any) => {\r\n                return (\r\n                  <Autocomplete\r\n                    value={input.value}\r\n                    noOptionsText=\"Không tìm thấy thông tin\"\r\n                    size=\"small\"\r\n                    getOptionSelected={(option: any, value) =>\r\n                      option.code === value.code\r\n                    }\r\n                    getOptionLabel={option => option?.name}\r\n                    options={\r\n                      !_.isEmpty(deptList) && deptList.data.length\r\n                        ? deptList.data\r\n                        : []\r\n                    }\r\n                    renderOption={(option, { selected }) => {\r\n                      return <React.Fragment>{option.name}</React.Fragment>;\r\n                    }}\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Tìm kiếm phòng\"\r\n                      />\r\n                    )}\r\n                    onChange={(e, val) => {\r\n                      if (val && val.length) {\r\n                        clearErrors('departmentVirtualCode');\r\n                      }\r\n                      setValue('departmentVirtualCode', val);\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n            {errors.departmentVirtualCode &&\r\n            errors.departmentVirtualCode?.type === 'required' ? (\r\n              <span style={{ color: ' #fb0606' }}>\r\n                Vui lòng chọn phòng khám mặc định\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"depts\" className=\"mb-3\">\r\n              Danh sách phòng khám\r\n            </label>\r\n            <Controller\r\n              name=\"depts\"\r\n              control={control}\r\n              defaultValue={[]}\r\n              rules={{ required: true }}\r\n              render={({ field, ...input }: any) => {\r\n                return (\r\n                  <Autocomplete\r\n                    value={input.value}\r\n                    disableCloseOnSelect\r\n                    disableListWrap\r\n                    multiple\r\n                    loading={openDrop}\r\n                    onOpen={() => setOpenDrop(true)}\r\n                    onClose={() => setOpenDrop(false)}\r\n                    limitTags={2}\r\n                    noOptionsText=\"Không tìm thấy thông tin\"\r\n                    size=\"small\"\r\n                    getOptionSelected={(option: any, value) =>\r\n                      option.code === value.code\r\n                    }\r\n                    getOptionLabel={option => option?.name}\r\n                    options={\r\n                      !_.isEmpty(deptList) && deptList.data.length\r\n                        ? deptList.data\r\n                        : []\r\n                    }\r\n                    renderOption={(option, { selected }) => {\r\n                      return (\r\n                        <React.Fragment>\r\n                          <Checkbox\r\n                            icon={icon}\r\n                            checkedIcon={checkedIcon}\r\n                            style={{ marginRight: 8 }}\r\n                            checked={selected}\r\n                          />\r\n                          {option.name}\r\n                        </React.Fragment>\r\n                      );\r\n                    }}\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        placeholder=\"Tìm kiếm phòng\"\r\n                        variant=\"outlined\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <React.Fragment>\r\n                              {openDrop ? (\r\n                                <CircularProgress color=\"inherit\" size={20} />\r\n                              ) : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </React.Fragment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    onChange={(e, val) => {\r\n                      if (val && val.length) {\r\n                        clearErrors('depts');\r\n                      }\r\n                      setValue('depts', val);\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n            {errors.depts && errors.depts?.type === 'required' ? (\r\n              <span style={{ color: ' #fb0606' }}>\r\n                Vui lòng chọn phòng khám\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              onClick={onClose}\r\n            >\r\n              Đóng\r\n            </button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">\r\n              Lưu\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState, useMemo } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as DeptGroupSelector from 'store/departmentGroup/shared/selectors';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sliceKey, reducer, actions } from 'store/departmentGroup/shared/slice';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { DeptGroupSaga } from 'store/departmentGroup/shared/saga';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { DeptGroupActions } from '../components/DepartmentGroup/DeptGroupActions';\r\nimport { ModalConfirm } from 'app/components/Modal/Confirm';\r\nimport { RootStore } from 'store/configureStore';\r\nimport { Unsubscribe } from 'redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { rowsPerArray } from 'store/common/constants/common.constant';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    height: '100%',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  td: {\r\n    fontSize: '1.1rem',\r\n    fontFamily: 'Roboto, sans-serif',\r\n  },\r\n  pagination: {},\r\n});\r\n\r\nexport const tableValue: any[] = [\r\n  { id: 'code', label: 'Mã nhóm phòng khám', minWidth: 120 },\r\n  { id: 'description', label: 'Tên nhóm phòng khám', minWidth: 120 },\r\n  { id: 'actions', label: 'Chức năng', minWidth: 270 },\r\n];\r\n\r\nconst defaultPagi: any = {\r\n  pageNumber: 1,\r\n  pageSize: 10,\r\n};\r\n\r\nexport const CREATE_DEPT_GROUP_SUCCESS = 'Tạo mới nhóm phòng khám thành công';\r\nexport const CREATE_DEPT_GROUP_FAIL = 'Tạo mới nhóm phòng khám thất bại';\r\nexport const UPDATE_DEPT_GROUP_SUCCESS = 'Cập nhật nhóm phòng khám thành công';\r\nexport const UPDATE_DEPT_GROUP_FAIL = 'Cập nhật nhóm phòng khám thất bại';\r\nexport const DELETE_DEPT_GROUP_SUCCESS = 'Xoá nhóm phòng khám thành công';\r\nexport const DELETE_DEPT_GROUP_FAIL = 'Xoá nhóm phòng khám thất bại';\r\nexport const ADD_GROUP_SUCCESS = 'Thêm phòng khám vào nhóm thành công';\r\nexport const ADD_GROUP_FAIL = 'Thêm phòng khám vào nhóm thất bại';\r\n\r\nexport function DepartmentGroup() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({\r\n    key: sliceKey,\r\n    reducer: reducer,\r\n  });\r\n  useInjectSaga({ key: sliceKey, saga: DeptGroupSaga });\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const groups: any = useSelector(DeptGroupSelector.selectGroups);\r\n  const loading: any = useSelector<any>(DeptGroupSelector.selectLoading);\r\n  const [openModal, setOpenModal] = useState<boolean>(false);\r\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\r\n  const [idDelete, setIdDelete] = useState<string>('');\r\n  const [order, setOrder] = useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = useState<any>('code');\r\n  const [pagi, setPagi] = useState(defaultPagi);\r\n  const { register, handleSubmit, setValue } = useForm();\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.getGroups(defaultPagi));\r\n    const rootStore$: Unsubscribe = RootStore.subscribe(() => {\r\n      const { type, payload }: any = RootStore.getState().lastAction;\r\n      switch (type) {\r\n        case actions.getGroupByIdSuccess.type:\r\n          setOpenModal(true);\r\n          break;\r\n        case actions.addDeptToGroupSuccess.type:\r\n          regetListGroup();\r\n          break;\r\n        case actions.createGroupSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(CREATE_DEPT_GROUP_SUCCESS)\r\n            .setSuccessNotify();\r\n          break;\r\n        case actions.updateGroupSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(UPDATE_DEPT_GROUP_SUCCESS)\r\n            .setSuccessNotify();\r\n          break;\r\n        case actions.deleteGroupSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(DELETE_DEPT_GROUP_SUCCESS)\r\n            .setSuccessNotify();\r\n          regetListGroup();\r\n          break;\r\n        case actions.createGroupFailure.type:\r\n          notifyController\r\n            .setNotifyMessage(payload ? payload : CREATE_DEPT_GROUP_FAIL)\r\n            .setFailNotify();\r\n          break;\r\n        case actions.updateGroupFailure.type:\r\n          notifyController\r\n            .setNotifyMessage(payload ? payload : UPDATE_DEPT_GROUP_FAIL)\r\n            .setFailNotify();\r\n          break;\r\n        case actions.deleteGroupFailure.type:\r\n          notifyController\r\n            .setNotifyMessage(payload ? payload : DELETE_DEPT_GROUP_FAIL)\r\n            .setFailNotify();\r\n          regetListGroup();\r\n          break;\r\n        case actions.addDeptToGroupFailure.type:\r\n          notifyController\r\n            .setNotifyMessage(payload ? payload : ADD_GROUP_FAIL)\r\n            .setFailNotify();\r\n          break;\r\n      }\r\n    });\r\n    return () => {\r\n      rootStore$();\r\n    };\r\n  }, []);\r\n\r\n  const regetListGroup = () => {\r\n    dispatch(actions.getGroups(pagi));\r\n    setOpenModal(false);\r\n    setIdDelete('');\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const deleteGroup = () => {\r\n    if (idDelete === '') return;\r\n    dispatch(actions.deleteGroup(idDelete));\r\n  };\r\n\r\n  const submitSearch = (values: any) => {\r\n    dispatch(\r\n      actions.getGroups({\r\n        ...values,\r\n        ...pagi,\r\n        pageNumber: 1,\r\n      }),\r\n    );\r\n    setPagi({\r\n      ...pagi,\r\n      pageNumber: 1,\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setValue('code', null);\r\n    setValue('description', null);\r\n    setPagi(defaultPagi);\r\n    dispatch(\r\n      actions.getGroups({\r\n        pageNumber: 1,\r\n        pageSize: 10,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <form className=\"form-inline w-100\" onSubmit={handleSubmit(submitSearch)}>\r\n        <div className=\"row w-100\">\r\n          <div className=\"col-md-3 col-xl-2\">\r\n            <input\r\n              className=\"form-control mr-sm-2 w-100\"\r\n              type=\"text\"\r\n              name=\"code\"\r\n              placeholder=\"Tìm theo mã nhóm phòng khám\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-xl-2\">\r\n            <input\r\n              className=\"form-control mr-sm-2 w-100\"\r\n              type=\"text\"\r\n              name=\"description\"\r\n              placeholder=\"Tìm theo tên nhóm phòng khám\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6 col-xl-8 d-flex\">\r\n            <div className=\"btn-group mr-2\">\r\n              <button\r\n                className=\"btn btn-outline-success btn__config\"\r\n                type=\"submit\"\r\n              >\r\n                Tìm kiếm <i className=\"fa fa-search\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"btn-group mr-2\">\r\n              <button\r\n                className=\"btn btn-primary btn__config mb-0\"\r\n                type=\"button\"\r\n                onClick={() => setOpenModal(true)}\r\n              >\r\n                Thêm nhóm phòng khám <i className=\"fa fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n              <button\r\n                className=\"btn btn-warning btn__config mb-0\"\r\n                type=\"button\"\r\n                onClick={handleReset}\r\n              >\r\n                Reset <i className=\"fa fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={tableValue}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderData = useMemo(() => {\r\n    const { data = [], total_records, page_number, page_size } = groups;\r\n    return {\r\n      data,\r\n      total: total_records,\r\n      pageNumber: page_number,\r\n      pageSize: page_size,\r\n    };\r\n  }, [groups]);\r\n\r\n  const renderTable = () => {\r\n    if (!_.isEmpty(renderData) && renderData.data.length) {\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        renderData.data,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      return tableData.map((row, idx) => {\r\n        const group = _.cloneDeep(row);\r\n        return (\r\n          <TableRow key={row.id}>\r\n            {tableValue.map(column => {\r\n              const value = group[column.id];\r\n              if (column.id === 'actions') {\r\n                return (\r\n                  <TableCell key={column.id} className={classes.td}>\r\n                    <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-info btn-xs\"\r\n                        onClick={() => {\r\n                          dispatch(actions.getGroupById(group.id));\r\n                        }}\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                    <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-danger btn-xs mx-2\"\r\n                        onClick={() => {\r\n                          setIdDelete(group.id);\r\n                          setOpenDelete(true);\r\n                        }}\r\n                      >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id} className={classes.td}>\r\n                  {value ? value : '-'}\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={tableValue.length}\r\n          >\r\n            No matching records found\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, page: number) => {\r\n    let changePage = Object.assign({}, pagi, {\r\n      pageNumber: page + 1,\r\n    });\r\n    setPagi(changePage);\r\n    dispatch(actions.getGroups(changePage));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    let changeRowPerPage = Object.assign({}, pagi, {\r\n      pageSize: +event.target.value,\r\n      pageNumber: 1,\r\n    });\r\n    setPagi(changeRowPerPage);\r\n    dispatch(actions.getGroups(changeRowPerPage));\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(renderData) && renderData.data.length) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          labelRowsPerPage=\"Hiển Thị\"\r\n          count={renderData.total}\r\n          rowsPerPage={renderData.pageSize}\r\n          page={renderData.pageNumber - 1}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {openModal && (\r\n        <DeptGroupActions\r\n          open={true}\r\n          onClose={() => {\r\n            setOpenModal(false);\r\n          }}\r\n        />\r\n      )}\r\n      <ModalConfirm\r\n        title={'Bạn có chắc chắn muốn xoá loại phòng khám này?'}\r\n        other={{\r\n          bodyText: '',\r\n        }}\r\n        keyConfirm={''}\r\n        open={openDelete}\r\n        onClose={() => setOpenDelete(false)}\r\n        confirmMethod={() => deleteGroup()}\r\n      />\r\n      {loading ? <AppLoading loading={true} /> : null}\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-color-default\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\n/* eslint-disable no-underscore-dangle */\n\n/* eslint-disable react/prop-types */\nimport * as React from 'react';\nimport classnames from 'classnames';\nvar PanelContent = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classnames;\n\n  var prefixCls = props.prefixCls,\n      forceRender = props.forceRender,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      isActive = props.isActive,\n      role = props.role;\n\n  var _React$useState = React.useState(isActive || forceRender),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      rendered = _React$useState2[0],\n      setRendered = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (forceRender || isActive) {\n      setRendered(true);\n    }\n  }, [forceRender, isActive]);\n\n  if (!rendered) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: classnames(\"\".concat(prefixCls, \"-content\"), (_classnames = {}, _defineProperty(_classnames, \"\".concat(prefixCls, \"-content-active\"), isActive), _defineProperty(_classnames, \"\".concat(prefixCls, \"-content-inactive\"), !isActive), _classnames), className),\n    style: style,\n    role: role\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-content-box\")\n  }, children));\n});\nPanelContent.displayName = 'PanelContent';\nexport default PanelContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n\n/* eslint-disable react/prop-types */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport shallowEqual from 'shallowequal';\nimport PanelContent from './PanelContent';\n\nvar CollapsePanel = /*#__PURE__*/function (_React$Component) {\n  _inherits(CollapsePanel, _React$Component);\n\n  var _super = _createSuper(CollapsePanel);\n\n  function CollapsePanel() {\n    var _this;\n\n    _classCallCheck(this, CollapsePanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleItemClick = function () {\n      var _this$props = _this.props,\n          onItemClick = _this$props.onItemClick,\n          panelKey = _this$props.panelKey;\n\n      if (typeof onItemClick === 'function') {\n        onItemClick(panelKey);\n      }\n    };\n\n    _this.handleKeyPress = function (e) {\n      if (e.key === 'Enter' || e.keyCode === 13 || e.which === 13) {\n        _this.handleItemClick();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CollapsePanel, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return !shallowEqual(this.props, nextProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames,\n          _classNames2,\n          _this2 = this;\n\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          id = _this$props2.id,\n          style = _this$props2.style,\n          prefixCls = _this$props2.prefixCls,\n          header = _this$props2.header,\n          headerClass = _this$props2.headerClass,\n          children = _this$props2.children,\n          isActive = _this$props2.isActive,\n          showArrow = _this$props2.showArrow,\n          destroyInactivePanel = _this$props2.destroyInactivePanel,\n          accordion = _this$props2.accordion,\n          forceRender = _this$props2.forceRender,\n          openMotion = _this$props2.openMotion,\n          expandIcon = _this$props2.expandIcon,\n          extra = _this$props2.extra,\n          collapsible = _this$props2.collapsible;\n      var disabled = collapsible === 'disabled';\n      var headerCls = classNames(\"\".concat(prefixCls, \"-header\"), (_classNames = {}, _defineProperty(_classNames, headerClass, headerClass), _defineProperty(_classNames, \"\".concat(prefixCls, \"-header-collapsible-only\"), collapsible === 'header'), _classNames));\n      var itemCls = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-active\"), isActive), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-disabled\"), disabled), _classNames2), className);\n      var icon = /*#__PURE__*/React.createElement(\"i\", {\n        className: \"arrow\"\n      });\n\n      if (showArrow && typeof expandIcon === 'function') {\n        icon = expandIcon(this.props);\n      }\n\n      var ifExtraExist = extra !== null && extra !== undefined && typeof extra !== 'boolean';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: itemCls,\n        style: style,\n        id: id\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: headerCls,\n        onClick: function onClick() {\n          return collapsible !== 'header' && _this2.handleItemClick();\n        },\n        role: accordion ? 'tab' : 'button',\n        tabIndex: disabled ? -1 : 0,\n        \"aria-expanded\": isActive,\n        onKeyPress: this.handleKeyPress\n      }, showArrow && icon, collapsible === 'header' ? /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.handleItemClick,\n        className: \"\".concat(prefixCls, \"-header-text\")\n      }, header) : header, ifExtraExist && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-extra\")\n      }, extra)), /*#__PURE__*/React.createElement(CSSMotion, _extends({\n        visible: isActive,\n        leavedClassName: \"\".concat(prefixCls, \"-content-hidden\")\n      }, openMotion, {\n        forceRender: forceRender,\n        removeOnLeave: destroyInactivePanel\n      }), function (_ref, ref) {\n        var motionClassName = _ref.className,\n            motionStyle = _ref.style;\n        return /*#__PURE__*/React.createElement(PanelContent, {\n          ref: ref,\n          prefixCls: prefixCls,\n          className: motionClassName,\n          style: motionStyle,\n          isActive: isActive,\n          forceRender: forceRender,\n          role: accordion ? 'tabpanel' : null\n        }, children);\n      }));\n    }\n  }]);\n\n  return CollapsePanel;\n}(React.Component);\n\nCollapsePanel.defaultProps = {\n  showArrow: true,\n  isActive: false,\n  onItemClick: function onItemClick() {},\n  headerClass: '',\n  forceRender: false\n};\nexport default CollapsePanel;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable react/prop-types */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport CollapsePanel from './Panel';\n\nfunction getActiveKeysArray(activeKey) {\n  var currentActiveKey = activeKey;\n\n  if (!Array.isArray(currentActiveKey)) {\n    var activeKeyType = _typeof(currentActiveKey);\n\n    currentActiveKey = activeKeyType === 'number' || activeKeyType === 'string' ? [currentActiveKey] : [];\n  }\n\n  return currentActiveKey.map(function (key) {\n    return String(key);\n  });\n}\n\nvar Collapse = /*#__PURE__*/function (_React$Component) {\n  _inherits(Collapse, _React$Component);\n\n  var _super = _createSuper(Collapse);\n\n  function Collapse(_props) {\n    var _this;\n\n    _classCallCheck(this, Collapse);\n\n    _this = _super.call(this, _props);\n\n    _this.onClickItem = function (key) {\n      var activeKey = _this.state.activeKey;\n\n      if (_this.props.accordion) {\n        activeKey = activeKey[0] === key ? [] : [key];\n      } else {\n        activeKey = _toConsumableArray(activeKey);\n        var index = activeKey.indexOf(key);\n        var isActive = index > -1;\n\n        if (isActive) {\n          // remove active state\n          activeKey.splice(index, 1);\n        } else {\n          activeKey.push(key);\n        }\n      }\n\n      _this.setActiveKey(activeKey);\n    };\n\n    _this.getNewChild = function (child, index) {\n      if (!child) return null;\n      var activeKey = _this.state.activeKey;\n      var _this$props = _this.props,\n          prefixCls = _this$props.prefixCls,\n          openMotion = _this$props.openMotion,\n          accordion = _this$props.accordion,\n          rootDestroyInactivePanel = _this$props.destroyInactivePanel,\n          expandIcon = _this$props.expandIcon,\n          collapsible = _this$props.collapsible; // If there is no key provide, use the panel order as default key\n\n      var key = child.key || String(index);\n      var _child$props = child.props,\n          header = _child$props.header,\n          headerClass = _child$props.headerClass,\n          destroyInactivePanel = _child$props.destroyInactivePanel,\n          childCollapsible = _child$props.collapsible;\n      var isActive = false;\n\n      if (accordion) {\n        isActive = activeKey[0] === key;\n      } else {\n        isActive = activeKey.indexOf(key) > -1;\n      }\n\n      var mergeCollapsible = childCollapsible !== null && childCollapsible !== void 0 ? childCollapsible : collapsible;\n      var props = {\n        key: key,\n        panelKey: key,\n        header: header,\n        headerClass: headerClass,\n        isActive: isActive,\n        prefixCls: prefixCls,\n        destroyInactivePanel: destroyInactivePanel !== null && destroyInactivePanel !== void 0 ? destroyInactivePanel : rootDestroyInactivePanel,\n        openMotion: openMotion,\n        accordion: accordion,\n        children: child.props.children,\n        onItemClick: mergeCollapsible === 'disabled' ? null : _this.onClickItem,\n        expandIcon: expandIcon,\n        collapsible: mergeCollapsible\n      }; // https://github.com/ant-design/ant-design/issues/20479\n\n      if (typeof child.type === 'string') {\n        return child;\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, props);\n    };\n\n    _this.getItems = function () {\n      var children = _this.props.children;\n      return toArray(children).map(_this.getNewChild);\n    };\n\n    _this.setActiveKey = function (activeKey) {\n      if (!('activeKey' in _this.props)) {\n        _this.setState({\n          activeKey: activeKey\n        });\n      }\n\n      _this.props.onChange(_this.props.accordion ? activeKey[0] : activeKey);\n    };\n\n    var _activeKey = _props.activeKey,\n        defaultActiveKey = _props.defaultActiveKey;\n    var currentActiveKey = defaultActiveKey;\n\n    if ('activeKey' in _props) {\n      currentActiveKey = _activeKey;\n    }\n\n    _this.state = {\n      activeKey: getActiveKeysArray(currentActiveKey)\n    };\n    return _this;\n  }\n\n  _createClass(Collapse, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props2 = this.props,\n          prefixCls = _this$props2.prefixCls,\n          className = _this$props2.className,\n          style = _this$props2.style,\n          accordion = _this$props2.accordion;\n      var collapseClassName = classNames((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, className, !!className), _classNames));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: collapseClassName,\n        style: style,\n        role: accordion ? 'tablist' : null\n      }, this.getItems());\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var newState = {};\n\n      if ('activeKey' in nextProps) {\n        newState.activeKey = getActiveKeysArray(nextProps.activeKey);\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Collapse;\n}(React.Component);\n\nCollapse.defaultProps = {\n  prefixCls: 'rc-collapse',\n  onChange: function onChange() {},\n  accordion: false,\n  destroyInactivePanel: false\n};\nCollapse.Panel = CollapsePanel;\nexport default Collapse;","import Collapse from './Collapse';\nexport default Collapse;\nvar Panel = Collapse.Panel;\nexport { Panel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport RcCollapse from 'rc-collapse';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport devWarning from '../_util/devWarning';\n\nvar CollapsePanel = function CollapsePanel(props) {\n  devWarning(!('disabled' in props), 'Collapse.Panel', '`disabled` is deprecated. Please use `collapsible=\"disabled\"` instead.');\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var customizePrefixCls = props.prefixCls,\n      _props$className = props.className,\n      className = _props$className === void 0 ? '' : _props$className,\n      _props$showArrow = props.showArrow,\n      showArrow = _props$showArrow === void 0 ? true : _props$showArrow;\n  var prefixCls = getPrefixCls('collapse', customizePrefixCls);\n  var collapsePanelClassName = classNames(_defineProperty({}, \"\".concat(prefixCls, \"-no-arrow\"), !showArrow), className);\n  return /*#__PURE__*/React.createElement(RcCollapse.Panel, _extends({}, props, {\n    prefixCls: prefixCls,\n    className: collapsePanelClassName\n  }));\n};\n\nexport default CollapsePanel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport RcCollapse from 'rc-collapse';\nimport classNames from 'classnames';\nimport RightOutlined from \"@ant-design/icons/es/icons/RightOutlined\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport CollapsePanel from './CollapsePanel';\nimport { ConfigContext } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nimport { cloneElement } from '../_util/reactNode';\n\nvar Collapse = function Collapse(props) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      _props$className = props.className,\n      className = _props$className === void 0 ? '' : _props$className,\n      _props$bordered = props.bordered,\n      bordered = _props$bordered === void 0 ? true : _props$bordered,\n      ghost = props.ghost;\n  var prefixCls = getPrefixCls('collapse', customizePrefixCls);\n\n  var getIconPosition = function getIconPosition() {\n    var expandIconPosition = props.expandIconPosition;\n\n    if (expandIconPosition !== undefined) {\n      return expandIconPosition;\n    }\n\n    return direction === 'rtl' ? 'right' : 'left';\n  };\n\n  var renderExpandIcon = function renderExpandIcon() {\n    var panelProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var expandIcon = props.expandIcon;\n    var icon = expandIcon ? expandIcon(panelProps) : /*#__PURE__*/React.createElement(RightOutlined, {\n      rotate: panelProps.isActive ? 90 : undefined\n    });\n    return cloneElement(icon, function () {\n      return {\n        className: classNames(icon.props.className, \"\".concat(prefixCls, \"-arrow\"))\n      };\n    });\n  };\n\n  var iconPosition = getIconPosition();\n  var collapseClassName = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-borderless\"), !bordered), _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-position-\").concat(iconPosition), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ghost\"), !!ghost), _classNames), className);\n\n  var openMotion = _extends(_extends({}, collapseMotion), {\n    motionAppear: false,\n    leavedClassName: \"\".concat(prefixCls, \"-content-hidden\")\n  });\n\n  var getItems = function getItems() {\n    var children = props.children;\n    return toArray(children).map(function (child, index) {\n      var _a;\n\n      if ((_a = child.props) === null || _a === void 0 ? void 0 : _a.disabled) {\n        var key = child.key || String(index);\n        var _child$props = child.props,\n            disabled = _child$props.disabled,\n            collapsible = _child$props.collapsible;\n\n        var childProps = _extends(_extends({}, omit(child.props, ['disabled'])), {\n          key: key,\n          collapsible: collapsible !== null && collapsible !== void 0 ? collapsible : disabled ? 'disabled' : undefined\n        });\n\n        return cloneElement(child, childProps);\n      }\n\n      return child;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(RcCollapse, _extends({\n    openMotion: openMotion\n  }, props, {\n    expandIcon: renderExpandIcon,\n    prefixCls: prefixCls,\n    className: collapseClassName\n  }), getItems());\n};\n\nCollapse.Panel = CollapsePanel;\nexport default Collapse;","import Collapse from './Collapse';\nexport default Collapse;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nvar Switch = React.forwardRef(function (_ref, ref) {\n  var _classNames;\n\n  var _ref$prefixCls = _ref.prefixCls,\n      prefixCls = _ref$prefixCls === void 0 ? 'rc-switch' : _ref$prefixCls,\n      className = _ref.className,\n      checked = _ref.checked,\n      defaultChecked = _ref.defaultChecked,\n      disabled = _ref.disabled,\n      loadingIcon = _ref.loadingIcon,\n      checkedChildren = _ref.checkedChildren,\n      unCheckedChildren = _ref.unCheckedChildren,\n      onClick = _ref.onClick,\n      onChange = _ref.onChange,\n      onKeyDown = _ref.onKeyDown,\n      restProps = _objectWithoutProperties(_ref, [\"prefixCls\", \"className\", \"checked\", \"defaultChecked\", \"disabled\", \"loadingIcon\", \"checkedChildren\", \"unCheckedChildren\", \"onClick\", \"onChange\", \"onKeyDown\"]);\n\n  var _useMergedState = useMergedState(false, {\n    value: checked,\n    defaultValue: defaultChecked\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerChecked = _useMergedState2[0],\n      setInnerChecked = _useMergedState2[1];\n\n  function triggerChange(newChecked, event) {\n    var mergedChecked = innerChecked;\n\n    if (!disabled) {\n      mergedChecked = newChecked;\n      setInnerChecked(mergedChecked);\n      onChange === null || onChange === void 0 ? void 0 : onChange(mergedChecked, event);\n    }\n\n    return mergedChecked;\n  }\n\n  function onInternalKeyDown(e) {\n    if (e.which === KeyCode.LEFT) {\n      triggerChange(false, e);\n    } else if (e.which === KeyCode.RIGHT) {\n      triggerChange(true, e);\n    }\n\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n  }\n\n  function onInternalClick(e) {\n    var ret = triggerChange(!innerChecked, e); // [Legacy] trigger onClick with value\n\n    onClick === null || onClick === void 0 ? void 0 : onClick(ret, e);\n  }\n\n  var switchClassName = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), innerChecked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n  return React.createElement(\"button\", Object.assign({}, restProps, {\n    type: \"button\",\n    role: \"switch\",\n    \"aria-checked\": innerChecked,\n    disabled: disabled,\n    className: switchClassName,\n    ref: ref,\n    onKeyDown: onInternalKeyDown,\n    onClick: onInternalClick\n  }), loadingIcon, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner\")\n  }, innerChecked ? checkedChildren : unCheckedChildren));\n});\nSwitch.displayName = 'Switch';\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport RcSwitch from 'rc-switch';\nimport classNames from 'classnames';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport Wave from '../_util/wave';\nimport { ConfigContext } from '../config-provider';\nimport SizeContext from '../config-provider/SizeContext';\nimport devWarning from '../_util/devWarning';\nvar Switch = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      customizeSize = _a.size,\n      loading = _a.loading,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      disabled = _a.disabled,\n      props = __rest(_a, [\"prefixCls\", \"size\", \"loading\", \"className\", \"disabled\"]);\n\n  devWarning('checked' in props || !('value' in props), 'Switch', '`value` is not a valid prop, do you mean `checked`?');\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var size = React.useContext(SizeContext);\n  var prefixCls = getPrefixCls('switch', customizePrefixCls);\n  var loadingIcon = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-handle\")\n  }, loading && /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: \"\".concat(prefixCls, \"-loading-icon\")\n  }));\n  var classes = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-small\"), (customizeSize || size) === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n  return /*#__PURE__*/React.createElement(Wave, {\n    insertExtraNode: true\n  }, /*#__PURE__*/React.createElement(RcSwitch, _extends({}, props, {\n    prefixCls: prefixCls,\n    className: classes,\n    disabled: disabled || loading,\n    ref: ref,\n    loadingIcon: loadingIcon\n  })));\n});\nSwitch.__ANT_SWITCH = true;\nSwitch.displayName = 'Switch';\nexport default Switch;","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useReducer, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as _ from 'lodash';\r\nimport * as AuthSelector from 'store/auth/shared/selectors';\r\nimport * as AuthSlice from 'store/auth/shared/slice';\r\nimport { AppHelper } from 'utils/app.helper';\r\nimport { Unsubscribe } from 'redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport { RootStore } from 'store/configureStore';\r\nimport { NotifyService } from 'services/notify.service';\r\n\r\nimport { Table, Collapse, Switch, Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport '../RoleDetail.css';\r\nimport {\r\n  CheckSquareTwoTone,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\nimport AppLoading from 'app/components/Loading';\r\nimport { ConfirmDeleteRole } from 'app/containers/PersonnelPage/components/ConfirmDeleteRole';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { ModalFindUser } from 'app/containers/PersonnelPage/components/ModalFindUser';\r\n\r\nconst { Panel } = Collapse;\r\n\r\ninterface ModalState {\r\n  isAdd: boolean;\r\n  isDelete: boolean;\r\n  idDelete: string;\r\n  isUser: boolean;\r\n  isPermission: boolean;\r\n  isFindUser: boolean;\r\n}\r\n\r\nenum ModalType {\r\n  ADD = 'ADD',\r\n  DELETE = 'DELETE',\r\n  USER = 'USER',\r\n  PERMISSION = 'PERMISSION',\r\n  FINDUSER = 'FINDUSER',\r\n}\r\n\r\ntype ModalAction = {\r\n  type: ModalType;\r\n  payload: any;\r\n};\r\n\r\nconst UPDATE_PERMISSION_SUCCESS = 'Thay đổi quyền truy cập Thành Công';\r\nconst UPDATE_PERMISSION_FAIL = 'Thay đổi quyền truy cập thất bại';\r\nconst DELETE_USER_IN_ROLE_SUCCESS = 'Xoá người dùng khỏi role thành công';\r\nconst DELETE_USER_IN_ROLE_FAIL = 'Xoá người dùng khỏi role thất bại';\r\n\r\nconst initModalState: ModalState = {\r\n  isAdd: false,\r\n  isDelete: false,\r\n  idDelete: '',\r\n  isUser: false,\r\n  isPermission: false,\r\n  isFindUser: false,\r\n};\r\nconst reduceModalState = (\r\n  state: ModalState = initModalState,\r\n  action: ModalAction,\r\n): ModalState => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ModalType.ADD:\r\n      return {\r\n        ...state,\r\n        isAdd: payload,\r\n      };\r\n    case ModalType.PERMISSION:\r\n      return {\r\n        ...state,\r\n        isPermission: payload,\r\n        isUser: false,\r\n      };\r\n    case ModalType.USER:\r\n      return {\r\n        ...state,\r\n        isUser: payload,\r\n      };\r\n    case ModalType.DELETE:\r\n      const { id, isDelete } = payload;\r\n      return {\r\n        ...state,\r\n        idDelete: id,\r\n        isDelete: isDelete,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function RoleDetails() {\r\n  const dispatch = useDispatch();\r\n  const loading: any = useSelector<any>(AuthSelector.selectLoading);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  const defaultPermissions = useSelector(AuthSelector.selectPermissions);\r\n  const role = useSelector(AuthSelector.selectRoleEditing);\r\n  const roleEditing = useSelector(AuthSelector.selectRoleEditing);\r\n  const [permissions, setPermissions] = useState<any[]>([]);\r\n  const pagiOptions: number[] = [5, 10, 15, 30];\r\n  const [pagi, setPagi] = useState<any>(() => ({\r\n    rowsPerPage: _.first(pagiOptions),\r\n    page: 0,\r\n  }));\r\n  const [keySearch, setKeySearch] = useState<string>('');\r\n  const [listRender, setListRender] = useState<any>({});\r\n  const [search, setSearch] = useState<boolean>(false);\r\n\r\n  const idRole = useLocation();\r\n\r\n  useEffect(() => {\r\n    const idRoleConvert = idRole.search.split('=');\r\n    dispatch(\r\n      AuthSlice.actions.getRoleById({\r\n        id: idRoleConvert[1],\r\n        type: ModalType.PERMISSION,\r\n      }),\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storeSub$: Unsubscribe = RootStore.subscribe(() => {\r\n      const { type, payload } = RootStore.getState().lastAction;\r\n      switch (type) {\r\n        case AuthSlice.actions.getRoleByIdSuccess.type:\r\n          if (payload.type === ModalType.USER) {\r\n            dispatchModal({\r\n              type: ModalType.USER,\r\n              payload: true,\r\n            });\r\n          }\r\n          break;\r\n        case AuthSlice.actions.deleteRoleFail.type:\r\n          notifyController.setNotifyMessage(payload).setFailNotify();\r\n          break;\r\n        case AuthSlice.actions.deleteUserInRoleSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(DELETE_USER_IN_ROLE_SUCCESS)\r\n            .setSuccessNotify();\r\n          break;\r\n        case AuthSlice.actions.updatePermissionInRoleSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(UPDATE_PERMISSION_SUCCESS)\r\n            .setSuccessNotify();\r\n          break;\r\n        case AuthSlice.actions.updatePermissionInRoleFail.type:\r\n          notifyController\r\n            .setNotifyMessage(UPDATE_PERMISSION_FAIL)\r\n            .setFailNotify();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return () => {\r\n      storeSub$();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(roleEditing) && !_.isEmpty(defaultPermissions)) {\r\n      const formatRoles = AppHelper.compareAndModifyTwoCollections(\r\n        defaultPermissions,\r\n        roleEditing.permissions,\r\n        'id',\r\n        'canActive',\r\n      );\r\n      setPermissions(formatRoles);\r\n    }\r\n  }, [roleEditing, defaultPermissions]);\r\n\r\n  useEffect((): any => {\r\n    if (!_.isEmpty(permissions) && permissions.length) {\r\n      if (keySearch === '') {\r\n        AppHelper.setPagiClient(permissions, pagi, setListRender);\r\n      } else {\r\n        AppHelper.setSearchPagiClient(\r\n          permissions,\r\n          pagi,\r\n          keySearch,\r\n          setListRender,\r\n        );\r\n      }\r\n    }\r\n  }, [permissions]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(AuthSlice.actions.clearEditRole());\r\n    };\r\n  }, []);\r\n\r\n  const [modalState, dispatchModal] = useReducer(\r\n    reduceModalState,\r\n    initModalState,\r\n  );\r\n\r\n  const columnsPages: any = [\r\n    {\r\n      title: 'Mã trang',\r\n      dataIndex: 'code',\r\n      key: 'code',\r\n      width: '35%',\r\n    },\r\n    {\r\n      title: 'Mô tả trang\t',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n      width: '35%',\r\n    },\r\n    {\r\n      title: 'Trạng thái trang',\r\n      dataIndex: 'is_active',\r\n      key: 'is_active',\r\n      width: '10%',\r\n      align: 'center',\r\n      render: is_active => {\r\n        return is_active ? (\r\n          <CheckSquareTwoTone twoToneColor=\"#52c41a\" />\r\n        ) : (\r\n          <CheckSquareTwoTone disabled />\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Chức năng',\r\n      dataIndex: 'chucnang',\r\n      key: 'chucnang',\r\n      width: '20%',\r\n      align: 'center',\r\n      render: (row, idx) => {\r\n        return idx.canActive ? (\r\n          <Switch\r\n            checkedChildren={<CheckOutlined />}\r\n            style={{ backgroundColor: '#52c41a' }}\r\n            defaultChecked\r\n            onClick={(checked, event) => {\r\n              changePermission(checked, idx);\r\n            }}\r\n          />\r\n        ) : (\r\n          <Switch\r\n            unCheckedChildren={<CloseOutlined />}\r\n            onClick={(checked, event) => {\r\n              changePermission(checked, idx);\r\n            }}\r\n          />\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const changePermission = (checked, idx) => {\r\n    const updatedRole = Object.assign({}, idx, {\r\n      canActive: checked,\r\n    });\r\n    const updateListRole = permissions.map(per => {\r\n      if (per.id === updatedRole.id) {\r\n        return updatedRole;\r\n      }\r\n      return per;\r\n    });\r\n\r\n    const permission_ids: string[] = updateListRole\r\n      .filter(per => per.canActive)\r\n      .map(({ id }) => id);\r\n\r\n    dispatch(\r\n      AuthSlice.actions.updatePermissionInRole({\r\n        roleId: roleEditing.id,\r\n        permission_ids,\r\n      }),\r\n    );\r\n    setPermissions(updateListRole);\r\n  };\r\n\r\n  const deleteUserRole = (id: string) => {\r\n    const activeUsers: string[] = role.users\r\n      .filter(user => user.id !== id)\r\n      .map(({ id }) => id);\r\n    dispatch(\r\n      AuthSlice.actions.deleteUserInRole({\r\n        id: role.id,\r\n        activeUser: activeUsers.length ? activeUsers : [],\r\n        inActiveUser: [id],\r\n      }),\r\n    );\r\n  };\r\n\r\n  const columnsUsers: any = [\r\n    {\r\n      title: 'Tên đăng nhập',\r\n      dataIndex: 'user_name',\r\n      key: 'user_name',\r\n      width: '25%',\r\n    },\r\n    {\r\n      title: 'Mã nhân viên',\r\n      dataIndex: 'code',\r\n      key: 'code',\r\n      width: '25%',\r\n    },\r\n    {\r\n      title: 'Tên nhân viên',\r\n      dataIndex: 'full_name',\r\n      key: 'full_name',\r\n      width: '30%',\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'is_active',\r\n      key: 'is_active',\r\n      width: '10%',\r\n      align: 'center',\r\n      render: is_active => {\r\n        return is_active ? (\r\n          <CheckSquareTwoTone twoToneColor=\"#52c41a\" />\r\n        ) : (\r\n          <CheckSquareTwoTone twoToneColor=\"#3a3f38\" />\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Chức năng',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n      width: '10%',\r\n      align: 'center',\r\n      render: (row, idx) => {\r\n        const id = idx.id;\r\n        return (\r\n          <Button\r\n            className=\"ant-btn btn-danger btn-xs\"\r\n            icon={<DeleteOutlined />}\r\n            onClick={() => deleteUserRole(id)}\r\n          ></Button>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const renderPermissions = () => {\r\n    if (!_.isEmpty(permissions)) {\r\n      return (\r\n        <Table\r\n          columns={columnsPages}\r\n          dataSource={permissions}\r\n          pagination={false}\r\n          rowKey={row => row.id}\r\n          scroll={{ y: 600 }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderUsers = () => {\r\n    if (!_.isEmpty(role)) {\r\n      return (\r\n        <Table\r\n          columns={columnsUsers}\r\n          dataSource={role.users}\r\n          pagination={false}\r\n          rowKey={row => row.id}\r\n          scroll={{ y: 700 }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {loading ? <AppLoading loading={true} /> : null}\r\n      {search && <ModalFindUser open={true} onClose={() => setSearch(false)} />}\r\n      <ConfirmDeleteRole\r\n        title={'Bạn có chắc chắn muốn xoá quyền truy cập Này?'}\r\n        id={modalState.idDelete}\r\n        open={modalState.isDelete}\r\n        onClose={() =>\r\n          dispatchModal({\r\n            type: ModalType.DELETE,\r\n            payload: { isDelete: false, id: '' },\r\n          })\r\n        }\r\n        confirmMethod={id => dispatch(AuthSlice.actions.deleteRole(id))}\r\n      />\r\n      <div className=\"col-12\">\r\n        <div className=\"card card-topline-color-default\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            <div className=\"table-scrollable\">\r\n              <Collapse defaultActiveKey={['1']}>\r\n                <Panel header=\"Danh Sách Nhân Viên\" key=\"1\">\r\n                  {renderUsers()}\r\n                  <div className=\"text-right mt-2\">\r\n                    <Button type=\"primary\" onClick={() => setSearch(true)}>\r\n                      THÊM NHÂN VIÊN\r\n                    </Button>\r\n                  </div>\r\n                </Panel>\r\n                <Panel header=\"Danh Sách Trang Truy Cập\" key=\"2\">\r\n                  {renderPermissions()}\r\n                </Panel>\r\n              </Collapse>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice } from 'store/core/@reduxjs/toolkit';\r\n\r\nexport interface ConfigDeptServiceState {\r\n  loading?: boolean;\r\n  deptServices?: any;\r\n  deptService?: any;\r\n  serviceName?: any;\r\n  deptServiceValueTypeId?: any;\r\n  deptServiceListValueId?: any;\r\n  listPerRoom: any;\r\n  error?: any;\r\n  success?: any;\r\n  services: any;\r\n}\r\n\r\nexport const initialState: ConfigDeptServiceState = {\r\n  loading: false,\r\n  deptServices: {},\r\n  deptService: {},\r\n  serviceName: {},\r\n  deptServiceValueTypeId: '',\r\n  deptServiceListValueId: '',\r\n  listPerRoom: {},\r\n  error: {},\r\n  success: {},\r\n  services: {},\r\n};\r\n\r\nconst ConfigDeptService = createSlice({\r\n  name: 'configDeptService',\r\n  initialState,\r\n  reducers: {\r\n    getLoadListDeptServices(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getLoadListDeptServicesSuccess(state, action) {\r\n      state.deptServices = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getLoadListDeptServicesFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getListDeptServices(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getListDeptServicesSuccess(state, action) {\r\n      state.deptServices = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getListDeptServicesFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getPerformanceRoom(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getPerformanceRoomSuccess(state, action) {\r\n      state.listPerRoom = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getPerformanceRoomFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getAllServices(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getAllServicesSuccess(state, action) {\r\n      state.services = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getAllServicesFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getDeptServiceValueType(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getDeptServiceValueTypeSuccess(state, action) {\r\n      state.loading = false;\r\n      state.deptServiceValueTypeId = action.payload;\r\n    },\r\n\r\n    getDeptServiceValueTypeFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getDeptServiceListValue(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getDeptServiceListValueSuccess(state, action) {\r\n      state.loading = false;\r\n      state.deptServiceListValueId = action.payload;\r\n    },\r\n\r\n    getDeptServiceListValueFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    addDeptServicesInDept(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    addDeptServicesInDeptSuccess(state, action) {\r\n      state.loading = false;\r\n    },\r\n\r\n    addDeptServicesInDeptFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    updateDeptServicesInDept(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    updateDeptServicesInDeptSuccess(state, action) {\r\n      state.loading = false;\r\n    },\r\n\r\n    updateDeptServicesInDeptFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getDeptServicesById(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getDeptServicesByIdSuccess(state, action) {\r\n      state.loading = false;\r\n      state.deptService = action.payload;\r\n    },\r\n\r\n    getDeptServicesByIdFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    clearDeptService(state) {\r\n      state.deptService = {};\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions, reducer, name: sliceKey } = ConfigDeptService;\r\n","export const ApiRoutes = {\r\n  DEPT_SERVICE: '/api/PatientDepartmentService',\r\n  CREATE_DEPT_SERVICE: '/api/PatientDepartmentService/department/services',\r\n  UPDATE_DEPT_SERVICE: '/api/PatientDepartmentService/department/service',\r\n  DEPT_GET_ID_SERVICE: '/api/PatientDepartmentService/department/service',\r\n  VALUE_TYPE: '/api/ListValueType/get-list-value-type',\r\n  LIST_VALUE: '/api/ListValue/get-list-values-activated',\r\n  LIST_VALUE_EX: '/api/ListValueExtend',\r\n  GET_ALL_SERVICES: '/api/ListValueExtend/get-all-list-values/DV',\r\n  PERFORMANCE_ROOM: 'api/Department',\r\n};\r\n\r\nexport const RESPONSE_CONFIG_DEPT_CONSTANT = {\r\n  CREATE_DEPT_SERVICE_SUCCESS: 'CREATE_DEPT_SERVICE_SUCCESS',\r\n  CREATE_DEPT_SERVICE_FAIL: 'CREATE_DEPT_SERVICE_FAIL',\r\n  UPDATE_DEPT_SERVICE_SUCCESS: 'UPDATE_DEPT_SERVICE_SUCCESS',\r\n  UPDATE_DEPT_SERVICE_FAIL: 'UPDATE_DEPT_SERVICE_FAIL',\r\n  GET_LIST_DEP_SERVICE_SUCCESS: 'GET_LIST_DEP_SERVICE_SUCCESS',\r\n  GET_LIST_DEP_SERVICE_FAIL: 'GET_LIST_DEP_SERVICE_FAIL',\r\n  GET_DEPT_BY_ID_SUCCESS: 'GET_DEPT_BY_ID_SUCCESS',\r\n  GET_DEPT_BY_ID_FAIL: 'GET_DEPT_BY_ID_FAIL',\r\n};\r\n\r\nexport const RESPONSE_CONFIG_DEPT_MESSAGE = {\r\n  CREATE_DEPT_SERVICE_SUCCESS: 'Tạo Mới phòng khám - dịch vụ Thành Công',\r\n  CREATE_DEPT_SERVICE_FAIL: 'Tạo Mới phòng khám - dịch vụ Thất Bại',\r\n  UPDATE_DEPT_SERVICE_SUCCESS: 'Cập Nhật phòng khám - dịch vụ Thành Công',\r\n  UPDATE_DEPT_SERVICE_FAIL: 'Cập Nhật phòng khám - dịch vụ Thất Bại',\r\n  GET_LIST_DEP_SERVICE_SUCCESS: 'Lấy phòng ban - dịch vụ thành công',\r\n  GET_LIST_DEP_SERVICE_FAIL: 'Lấy phòng ban - dịch vụ thất Bại',\r\n};\r\n\r\nexport const TableGroups: any = [\r\n  { id: 'actions', label: 'Chức năng', minWidth: 130 },\r\n  { id: 'service_code', label: 'Mã PK Dịch vụ', minWidth: 130 },\r\n  { id: 'service_name', label: 'Tên PK Dịch vụ', minWidth: 300 },\r\n  { id: 'examination_code', label: 'Mã PK Chỉ định', minWidth: 150 },\r\n  { id: 'examination_name', label: 'Tên PK Chỉ định', minWidth: 250 },\r\n  { id: 'room_code', label: 'Mã PK Thực hiện', minWidth: 150 },\r\n  { id: 'room_name', label: 'Tên PK Thực hiện', minWidth: 300 },\r\n  { id: 'is_active', label: 'Trạng thái', minWidth: 150 },\r\n];\r\n\r\nexport enum FilterKey {\r\n  DEPARTMENT = 'DEPARTMENT',\r\n  SERVICE = 'SERVICE',\r\n  EXAMINATION = 'EXAMINATION',\r\n  DEFAULT = 'DEFAULT',\r\n  ACTIVE = 'ACTIVE',\r\n}\r\n\r\nexport const optionsDeptType = [\r\n  { id: 0, description: 'Thường' },\r\n  { id: 1, description: 'Dịch vụ' },\r\n  { id: 2, description: 'Nam' },\r\n  { id: 3, description: 'Nữ' },\r\n  { id: 4, description: 'LDLK (N)' },\r\n];\r\n\r\nexport const optionsCreateBy = [\r\n  { id: '', description: 'Tất cả' },\r\n  { id: 0, description: 'Website' },\r\n  { id: 1, description: 'Đồng bộ HIS' },\r\n  { id: 2, description: 'Excel' },\r\n];\r\n\r\nexport const typePatient = [\r\n  { value: '1', label: 'BHYT' },\r\n  { value: '2', label: 'Thu phí' },\r\n  { value: '3', label: 'Dịch vụ' },\r\n];\r\n\r\nexport const areaClinci = [\r\n  { code: 'B', label: 'Khu B' },\r\n  { code: 'D', label: 'Khu D' },\r\n];\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nimport { RootState } from 'store/core/types';\r\nimport { initialState } from './slice';\r\n\r\nconst configDeptService = (state: RootState) =>\r\n  state.configDeptService || initialState;\r\n\r\nexport const selectDeptServices = createSelector(\r\n  [configDeptService],\r\n  state => state.deptServices,\r\n);\r\n\r\nexport const selectDeptService = createSelector(\r\n  [configDeptService],\r\n  state => state.deptService,\r\n);\r\n\r\nexport const selectListValues = createSelector(\r\n  [configDeptService],\r\n  state => state.deptServiceListValueId,\r\n);\r\n\r\nexport const selectValueType = createSelector(\r\n  [configDeptService],\r\n  state => state.deptServiceValueTypeId,\r\n);\r\n\r\nexport const selectLoading = createSelector(\r\n  [configDeptService],\r\n  state => state.loading,\r\n);\r\n\r\nexport const selectError = createSelector(\r\n  [configDeptService],\r\n  state => state.error,\r\n);\r\n\r\nexport const selectSuccess = createSelector(\r\n  [configDeptService],\r\n  state => state.success,\r\n);\r\n\r\nexport const selectServices = createSelector(\r\n  [configDeptService],\r\n  state => state.services,\r\n);\r\n\r\nexport const selectListPerRoom = createSelector(\r\n  [configDeptService],\r\n  state => state.listPerRoom,\r\n);\r\n","import { HttpRequest } from 'utils//request';\r\nimport {\r\n  APP_CONSTANT,\r\n  valuePerRoom,\r\n} from 'store/common/constants/common.constant';\r\nimport { ApiRoutes } from '../constants/configDeptService.constant';\r\n\r\nexport class ConfigDeptServiceHttp {\r\n  request: any;\r\n  constructor(endPoint = APP_CONSTANT.API.DEPT) {\r\n    this.request = new HttpRequest(endPoint).request;\r\n  }\r\n\r\n  public getLoadListDeptServices = ({ pageSize, pageNumber }): Promise<any> => {\r\n    return this.request.get(ApiRoutes.DEPT_SERVICE, {\r\n      page_number: pageNumber,\r\n      page_size: pageSize,\r\n    });\r\n  };\r\n\r\n  public getListDeptServices = ({\r\n    serviceCode,\r\n    roomCode,\r\n    pageSize,\r\n    pageNumber,\r\n    examinationCode,\r\n  }): Promise<any> => {\r\n    return this.request.get(ApiRoutes.DEPT_SERVICE, {\r\n      serviceCode,\r\n      roomCode,\r\n      examinationCode,\r\n      page_number: pageNumber,\r\n      page_size: pageSize,\r\n    });\r\n  };\r\n\r\n  public getPerformanceRoom = (): Promise<any> => {\r\n    return this.request.get(ApiRoutes.PERFORMANCE_ROOM + valuePerRoom);\r\n  };\r\n\r\n  public getAllServices = (): Promise<any> => {\r\n    return this.request.get(ApiRoutes.GET_ALL_SERVICES);\r\n  };\r\n\r\n  public getDeptServiceValueType = (): Promise<any> => {\r\n    return this.request.get(ApiRoutes.VALUE_TYPE + '/DV');\r\n  };\r\n  public getDeptServiceListValue = (): Promise<any> => {\r\n    return this.request.get(ApiRoutes.LIST_VALUE + '/NDV');\r\n  };\r\n\r\n  public getDeptServicesById = (id: any): Promise<any> => {\r\n    return this.request.get(`${ApiRoutes.DEPT_GET_ID_SERVICE}/${id}`);\r\n  };\r\n\r\n  public addDeptServicesInDept = (deptService): Promise<any> => {\r\n    return this.request.post(ApiRoutes.CREATE_DEPT_SERVICE, deptService);\r\n  };\r\n\r\n  public updateDeptServicesInDept = ({ reqquest, id }): Promise<any> => {\r\n    return this.request.put(`${ApiRoutes.UPDATE_DEPT_SERVICE}/${id}`, reqquest);\r\n  };\r\n}\r\n","import { call, put, takeLatest, all } from 'redux-saga/effects';\r\nimport { actions } from './slice';\r\nimport { configResponse } from 'utils/request';\r\nimport { get } from 'lodash';\r\nimport { ConfigDeptServiceHttp } from '../services/configDeptService.http';\r\nconst api = new ConfigDeptServiceHttp();\r\n\r\nexport function* getLoadListDeptServices(api, action) {\r\n  const response = yield call(api.getLoadListDeptServices, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getLoadListDeptServicesSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getLoadListDeptServicesFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getListDeptServices(api, action) {\r\n  const response = yield call(api.getListDeptServices, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getListDeptServicesSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getListDeptServicesFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getPerformanceRoom(api) {\r\n  const response = yield call(api.getPerformanceRoom);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getPerformanceRoomSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getPerformanceRoomFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getAllServices(api) {\r\n  const response = yield call(api.getAllServices);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getAllServicesSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getAllServicesFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getDeptServiceValueType(api) {\r\n  const response = yield call(api.getDeptServiceValueType);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getDeptServiceValueTypeSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getDeptServiceValueTypeFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getDeptServiceListValue(api) {\r\n  const response = yield call(api.getDeptServiceListValue);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getDeptServiceListValueSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getDeptServiceListValueFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* addDeptServicesInDept(api, action) {\r\n  const response = yield call(api.addDeptServicesInDept, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.addDeptServicesInDeptSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.addDeptServicesInDeptFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* updateDeptServicesInDept(api, action) {\r\n  const response = yield call(api.updateDeptServicesInDept, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.updateDeptServicesInDeptSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.updateDeptServicesInDeptFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getDeptServicesById(api, action) {\r\n  const response = yield call(api.getDeptServicesById, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getDeptServicesByIdSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getDeptServicesByIdFail(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* ConfigDeptServiceSaga() {\r\n  yield all([\r\n    yield takeLatest(\r\n      actions.getLoadListDeptServices.type,\r\n      getLoadListDeptServices,\r\n      api,\r\n    ),\r\n    yield takeLatest(\r\n      actions.getListDeptServices.type,\r\n      getListDeptServices,\r\n      api,\r\n    ),\r\n    yield takeLatest(actions.getPerformanceRoom.type, getPerformanceRoom, api),\r\n    yield takeLatest(actions.getAllServices.type, getAllServices, api),\r\n    yield takeLatest(\r\n      actions.getDeptServiceValueType.type,\r\n      getDeptServiceValueType,\r\n      api,\r\n    ),\r\n    yield takeLatest(\r\n      actions.getDeptServiceListValue.type,\r\n      getDeptServiceListValue,\r\n      api,\r\n    ),\r\n    yield takeLatest(\r\n      actions.addDeptServicesInDept.type,\r\n      addDeptServicesInDept,\r\n      api,\r\n    ),\r\n    yield takeLatest(\r\n      actions.updateDeptServicesInDept.type,\r\n      updateDeptServicesInDept,\r\n      api,\r\n    ),\r\n    yield takeLatest(\r\n      actions.getDeptServicesById.type,\r\n      getDeptServicesById,\r\n      api,\r\n    ),\r\n  ]);\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as ConfigDeptSerSelector from 'store/configDeptService/shared/selectors';\r\nimport * as ConfigDeptSerlice from 'store/configDeptService/shared/slice';\r\nimport { ConfigDeptServiceSaga } from 'store/configDeptService/shared/saga';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { VariableSizeList, ListChildComponentProps } from 'react-window';\r\nimport TekMultiSelect from 'app/components/MultiSelect';\r\nimport {\r\n  areaClinci,\r\n  typePatient,\r\n} from 'store/departmentService/constants/departmentService.constant';\r\n\r\nconst LISTBOX_PADDING = 8;\r\n\r\nfunction renderRow(props: ListChildComponentProps) {\r\n  const { data, index, style } = props;\r\n  return React.cloneElement(data[index], {\r\n    style: {\r\n      ...style,\r\n      top: (style.top as number) + LISTBOX_PADDING,\r\n    },\r\n  });\r\n}\r\n\r\nconst OuterElementContext = React.createContext({});\r\n\r\nconst OuterElementType = React.forwardRef<HTMLDivElement>((props, ref) => {\r\n  const outerProps = React.useContext(OuterElementContext);\r\n  return <div ref={ref} {...props} {...outerProps} />;\r\n});\r\n\r\nfunction useResetCache(data: any) {\r\n  const ref = React.useRef<VariableSizeList>(null);\r\n  React.useEffect(() => {\r\n    if (ref.current != null) {\r\n      ref.current.resetAfterIndex(0, true);\r\n    }\r\n  }, [data]);\r\n  return ref;\r\n}\r\n\r\nconst ListboxComponent = React.forwardRef<HTMLDivElement>(\r\n  function ListboxComponent(props, ref) {\r\n    const { children, ...other } = props;\r\n    const itemData = React.Children.toArray(children);\r\n    const theme = useTheme();\r\n    const smUp = useMediaQuery(theme.breakpoints.up('sm'), { noSsr: true });\r\n    const itemCount = itemData.length;\r\n    const itemSize = smUp ? 36 : 48;\r\n\r\n    const getChildSize = (child: React.ReactNode) => {\r\n      if (React.isValidElement(child) && child.type === ListSubheader) {\r\n        return 48;\r\n      }\r\n\r\n      return itemSize;\r\n    };\r\n\r\n    const getHeight = () => {\r\n      if (itemCount > 8) {\r\n        return 8 * itemSize;\r\n      }\r\n      return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    const gridRef = useResetCache(itemCount);\r\n\r\n    return (\r\n      <div ref={ref}>\r\n        <OuterElementContext.Provider value={other}>\r\n          <VariableSizeList\r\n            itemData={itemData}\r\n            height={getHeight() + 2 * LISTBOX_PADDING}\r\n            width=\"100%\"\r\n            ref={gridRef}\r\n            outerElementType={OuterElementType}\r\n            innerElementType=\"ul\"\r\n            itemSize={index => getChildSize(itemData[index])}\r\n            overscanCount={5}\r\n            itemCount={itemCount}\r\n          >\r\n            {renderRow}\r\n          </VariableSizeList>\r\n        </OuterElementContext.Provider>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst valueEditType = { value: '', label: '' };\r\nconst valueEditSer = { examination_code: '', examination_name: '' };\r\n\r\nexport function ConfigDeptSerAction({ open, onClose }) {\r\n  const dispatch = useDispatch();\r\n  useInjectReducer({\r\n    key: ConfigDeptSerlice.sliceKey,\r\n    reducer: ConfigDeptSerlice.reducer,\r\n  });\r\n  useInjectSaga({\r\n    key: ConfigDeptSerlice.sliceKey,\r\n    saga: ConfigDeptServiceSaga,\r\n  });\r\n  const services: any[] = useSelector(ConfigDeptSerSelector.selectServices);\r\n  const deptService: any = useSelector(ConfigDeptSerSelector.selectDeptService);\r\n  const listPerRoom: any = useSelector(ConfigDeptSerSelector.selectListPerRoom);\r\n  const [selectedType, setSelectedType] = useState<any[]>([]);\r\n  const [selectedEditType, setSelectedEditType] = useState<any>(valueEditType);\r\n  const [selectedEditSer, setSelectedEditSer] = useState<any>(valueEditSer);\r\n  const [errorEditType, setErrorEditType] = useState<boolean>(false);\r\n  const [errorEditSer, setErrorEditSer] = useState<boolean>(false);\r\n  const [desgRoom, setDesRoom] = useState<any[]>([]);\r\n  const {\r\n    handleSubmit,\r\n    errors,\r\n    control,\r\n    clearErrors,\r\n    setValue,\r\n    setError,\r\n    register,\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(ConfigDeptSerlice.actions.clearDeptService());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (_.isEmpty(deptService)) return;\r\n    function initFormData(deptService) {\r\n      if (!_.isEmpty(deptService)) {\r\n        const {\r\n          room_code,\r\n          room_name,\r\n          examination_code,\r\n          examination_name,\r\n        } = deptService;\r\n        setValue('room_code', {\r\n          code: room_code,\r\n          name: room_name,\r\n        });\r\n        setValue('examination_code', {\r\n          code: examination_code,\r\n          name: examination_name,\r\n        });\r\n      }\r\n    }\r\n    setTimeout(() => initFormData(deptService));\r\n  }, [deptService]);\r\n\r\n  const onSubmit = (values: any) => {\r\n    if (_.isEmpty(deptService)) {\r\n      let service_code_list: any[] = values['service_code_list'];\r\n      let object_type_list: any[] = selectedType.map(item => item.value);\r\n      if (!service_code_list.length) {\r\n        return setError('service_code_list', { type: 'required' });\r\n      }\r\n      if (!object_type_list.length) {\r\n        return setError('type_patient', { type: 'required' });\r\n      }\r\n      service_code_list = service_code_list.map(({ code }) => code);\r\n      const reqquest = {\r\n        examination_code: _.get(values, 'examination_code.code'),\r\n        room_code: _.get(values, 'room_code.code'),\r\n        service_code_list,\r\n        object_type_list,\r\n      };\r\n      return dispatch(\r\n        ConfigDeptSerlice.actions.addDeptServicesInDept(reqquest),\r\n      );\r\n    }\r\n    if (!_.isEmpty(deptService)) {\r\n      if (errorEditType || errorEditSer) {\r\n        return;\r\n      }\r\n      const reqquest = {\r\n        examination_code: _.get(values, 'examination_code.code'),\r\n        room_code: _.get(values, 'room_code.code'),\r\n        service_code: _.isEmpty(selectedEditSer.examination_code)\r\n          ? deptService.service_code\r\n          : selectedEditSer.examination_code,\r\n        object_type: _.isEmpty(selectedEditType.value)\r\n          ? deptService.object_type\r\n          : selectedEditType.value,\r\n      };\r\n      return dispatch(\r\n        ConfigDeptSerlice.actions.updateDeptServicesInDept({\r\n          reqquest,\r\n          id: deptService.id,\r\n        }),\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleToggleType = selectedOptions => {\r\n    clearErrors('type_patient');\r\n    setValue('type_patient', selectedOptions);\r\n    setSelectedType(selectedOptions);\r\n  };\r\n  const handleClearType = () => setSelectedType([]);\r\n  const handleSelectTypeAll = isSelected => {\r\n    if (isSelected) {\r\n      setValue('type_patient', isSelected);\r\n      clearErrors('type_patient');\r\n      setSelectedType(typePatient);\r\n    } else {\r\n      handleClearType();\r\n    }\r\n  };\r\n\r\n  const handledesRoom = e => {\r\n    setValue('examination_code', null);\r\n    let shortDepts: any[] = [];\r\n    if (\r\n      !_.isEmpty(listPerRoom) &&\r\n      listPerRoom.data.length &&\r\n      _.isEmpty(e.target.value)\r\n    ) {\r\n      setDesRoom(listPerRoom.data);\r\n    } else if (\r\n      !_.isEmpty(listPerRoom) &&\r\n      listPerRoom.data.length &&\r\n      !_.isEmpty(e.target.value)\r\n    ) {\r\n      shortDepts = listPerRoom.data.filter(\r\n        item => item.area_code === e.target.value,\r\n      );\r\n      setDesRoom(shortDepts);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'sm'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n      disableBackdropClick\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4 className=\"modal-title pb-3 font-weight-bold\">\r\n            {_.isEmpty(deptService) ? 'Thêm dịch vụ' : 'Cập nhật dịch vu'}\r\n          </h4>\r\n          <div className=\"form-group\">\r\n            <label>Loại bệnh nhân</label>\r\n            {_.isEmpty(deptService) ? (\r\n              <Controller\r\n                name=\"type_patient\"\r\n                control={control}\r\n                rules={{ required: true }}\r\n                defaultValue={null}\r\n                render={({ field, ...input }: any) => {\r\n                  return (\r\n                    <TekMultiSelect\r\n                      items={typePatient}\r\n                      getOptionLabel={option => `${option.label}`}\r\n                      selectedValues={selectedType}\r\n                      label=\"\"\r\n                      placeholder=\"Chọn loại bệnh nhân\"\r\n                      selectAllLabel=\"Tất cả\"\r\n                      onToggleOption={handleToggleType}\r\n                      onClearOptions={handleClearType}\r\n                      onSelectAll={handleSelectTypeAll}\r\n                    />\r\n                  );\r\n                }}\r\n              />\r\n            ) : (\r\n              <Autocomplete\r\n                options={typePatient}\r\n                defaultValue={typePatient.find(\r\n                  ({ value }) => value === deptService.object_type,\r\n                )}\r\n                getOptionLabel={option => option.label}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Chọn loại bệnh nhân\"\r\n                  />\r\n                )}\r\n                renderOption={(option, { selected }) => {\r\n                  return (\r\n                    <React.Fragment>\r\n                      <Checkbox\r\n                        icon={icon}\r\n                        checkedIcon={checkedIcon}\r\n                        style={{ marginRight: 8 }}\r\n                        checked={selected}\r\n                        defaultChecked\r\n                        color=\"primary\"\r\n                      />\r\n                      {option.label}\r\n                    </React.Fragment>\r\n                  );\r\n                }}\r\n                onChange={(e, code) => {\r\n                  if (_.isEmpty(code)) {\r\n                    setErrorEditType(true);\r\n                  }\r\n                  if (!_.isEmpty(code)) {\r\n                    setErrorEditType(false);\r\n                    setSelectedEditType(code);\r\n                  }\r\n                }}\r\n              />\r\n            )}\r\n            {errors.type_patient &&\r\n              errors.type_patient?.type === 'required' && (\r\n                <span style={{ color: ' #fb0606' }}>\r\n                  Vui lòng chọn loại bệnh nhân\r\n                </span>\r\n              )}\r\n            {errorEditType && (\r\n              <span style={{ color: ' #fb0606' }}>\r\n                Vui lòng chọn loại bệnh nhân\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"area_code\">Khu phòng khám</label>\r\n            <select\r\n              id=\"area_code\"\r\n              className=\"form-control\"\r\n              name=\"area_code\"\r\n              ref={register()}\r\n              placeholder=\"Nhập phòng khám\"\r\n              onChange={handledesRoom}\r\n            >\r\n              <option>Chọn khu phòng khám</option>\r\n              <option value=\"\">Tất cả</option>\r\n              {areaClinci.map(({ code, label }) => (\r\n                <option key={code} value={code}>\r\n                  {label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"examination_code\">Phòng chỉ định</label>\r\n            <Controller\r\n              name=\"examination_code\"\r\n              control={control}\r\n              rules={{ required: true }}\r\n              defaultValue={null}\r\n              render={({ field, ...input }: any) => {\r\n                return (\r\n                  <Autocomplete\r\n                    value={input.value}\r\n                    disableListWrap\r\n                    options={\r\n                      !_.isEmpty(desgRoom) && desgRoom.length ? desgRoom : []\r\n                    }\r\n                    getOptionLabel={option => option.name}\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Phòng chỉ định\"\r\n                      />\r\n                    )}\r\n                    onChange={(e, value) => {\r\n                      clearErrors('examination_code');\r\n                      setValue('examination_code', value);\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n            {errors.examination_code &&\r\n              errors.examination_code?.type === 'required' && (\r\n                <span style={{ color: ' #fb0606' }}>\r\n                  Vui lòng chọn phòng chỉ định\r\n                </span>\r\n              )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">Phòng thực hiện</label>\r\n            <Controller\r\n              name=\"room_code\"\r\n              control={control}\r\n              rules={{ required: true }}\r\n              defaultValue={null}\r\n              render={({ field, ...input }: any) => {\r\n                return (\r\n                  <Autocomplete\r\n                    value={input.value}\r\n                    disableListWrap\r\n                    options={\r\n                      !_.isEmpty(listPerRoom) && listPerRoom.data.length\r\n                        ? listPerRoom.data\r\n                        : []\r\n                    }\r\n                    getOptionLabel={option => option?.name}\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Phòng thực hiện\"\r\n                      />\r\n                    )}\r\n                    onChange={(e, value) => {\r\n                      clearErrors('room_code');\r\n                      setValue('room_code', value);\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n            {errors.room_code && errors.room_code?.type === 'required' && (\r\n              <span style={{ color: ' #fb0606' }}>\r\n                Vui lòng chọn phòng thực hiện\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"services\" className=\"mb-3\">\r\n              Chọn dịch vụ\r\n            </label>\r\n            {_.isEmpty(deptService) ? (\r\n              <React.Fragment>\r\n                <Controller\r\n                  name=\"service_code_list\"\r\n                  control={control}\r\n                  rules={{ required: true }}\r\n                  render={({ field, ...input }: any) => {\r\n                    return (\r\n                      <Autocomplete\r\n                        options={!_.isEmpty(services) ? services : []}\r\n                        value={input.value}\r\n                        disableCloseOnSelect\r\n                        disableListWrap\r\n                        multiple\r\n                        limitTags={2}\r\n                        getOptionLabel={option => option?.description}\r\n                        ListboxComponent={\r\n                          ListboxComponent as React.ComponentType<\r\n                            React.HTMLAttributes<HTMLElement>\r\n                          >\r\n                        }\r\n                        renderInput={params => (\r\n                          <TextField\r\n                            {...params}\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Chọn dịch vụ\"\r\n                          />\r\n                        )}\r\n                        renderOption={(option, { selected }) => {\r\n                          return (\r\n                            <React.Fragment>\r\n                              <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                                color=\"primary\"\r\n                              />\r\n                              {option.description}\r\n                            </React.Fragment>\r\n                          );\r\n                        }}\r\n                        onChange={(e, value) => {\r\n                          setValue('service_code_list', value);\r\n                          clearErrors('service_code_list');\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                />\r\n                {errors.service_code_list &&\r\n                  errors.service_code_list?.type === 'required' && (\r\n                    <span style={{ color: ' #fb0606' }}>\r\n                      Vui lòng chọn dịch vụ\r\n                    </span>\r\n                  )}\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                <Autocomplete\r\n                  options={!_.isEmpty(services) ? services : []}\r\n                  defaultValue={\r\n                    !_.isEmpty(services)\r\n                      ? services.find(\r\n                          ({ code }) => code === deptService.service_code,\r\n                        )\r\n                      : null\r\n                  }\r\n                  getOptionLabel={option => option?.description}\r\n                  ListboxComponent={\r\n                    ListboxComponent as React.ComponentType<\r\n                      React.HTMLAttributes<HTMLElement>\r\n                    >\r\n                  }\r\n                  renderInput={params => (\r\n                    <TextField\r\n                      {...params}\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Chọn dịch vụ\"\r\n                    />\r\n                  )}\r\n                  renderOption={(option, { selected }) => {\r\n                    return (\r\n                      <React.Fragment>\r\n                        <Checkbox\r\n                          icon={icon}\r\n                          checkedIcon={checkedIcon}\r\n                          style={{ marginRight: 8 }}\r\n                          checked={selected}\r\n                          defaultChecked\r\n                          color=\"primary\"\r\n                        />\r\n                        {option.description}\r\n                      </React.Fragment>\r\n                    );\r\n                  }}\r\n                  onChange={(e, value) => {\r\n                    if (_.isEmpty(value)) {\r\n                      setErrorEditSer(true);\r\n                    }\r\n                    if (!_.isEmpty(value)) {\r\n                      setErrorEditSer(false);\r\n                      setSelectedEditSer(value);\r\n                    }\r\n                  }}\r\n                />\r\n                {errorEditSer && (\r\n                  <span style={{ color: ' #fb0606' }}>\r\n                    Vui lòng chọn dịch vụ\r\n                  </span>\r\n                )}\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end py-3 mb-0\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              onClick={onClose}\r\n            >\r\n              Đóng\r\n            </button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">\r\n              Lưu\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-fallthrough */\r\nimport React, { useEffect, useState, useMemo, useReducer } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as ConfigDeptSerSelector from 'store/configDeptService/shared/selectors';\r\nimport * as ConfigDeptSerlice from 'store/configDeptService/shared/slice';\r\nimport * as ConfigDeptSerConts from 'store/configDeptService/constants/configDeptService.constant';\r\nimport { ConfigDeptServiceSaga } from 'store/configDeptService/shared/saga';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Unsubscribe } from 'redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { useSnackbar } from 'notistack';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { ConfigDeptSerAction } from '../components/ConfigDeptService/ConfigDeptSerAction';\r\nimport { TableGroups } from 'store/configDeptService/constants/configDeptService.constant';\r\nimport { RootStore } from 'store/configureStore';\r\nimport { rowsPerArray } from 'store/common/constants/common.constant';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    height: '100%',\r\n    maxHeight: '800px',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nconst defaultPagi = {\r\n  pageSize: 10,\r\n  pageNumber: 1,\r\n};\r\n\r\ninterface ModalState {\r\n  openModal: boolean;\r\n}\r\n\r\nenum ModalType {\r\n  OPEN = 'OPEN',\r\n}\r\n\r\ntype ModalActions = {\r\n  type: ModalType;\r\n  payload: any;\r\n};\r\n\r\nconst initModalState: ModalState = {\r\n  openModal: false,\r\n};\r\n\r\nconst reduceModal = (\r\n  state: ModalState = initModalState,\r\n  { type, payload }: ModalActions,\r\n): ModalState => {\r\n  switch (type) {\r\n    case ModalType.OPEN:\r\n      return {\r\n        ...state,\r\n        openModal: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function ConfigDeptService() {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  useInjectReducer({\r\n    key: ConfigDeptSerlice.sliceKey,\r\n    reducer: ConfigDeptSerlice.reducer,\r\n  });\r\n  useInjectSaga({\r\n    key: ConfigDeptSerlice.sliceKey,\r\n    saga: ConfigDeptServiceSaga,\r\n  });\r\n  const { register, handleSubmit, setValue } = useForm();\r\n  const deptServices: any = useSelector(\r\n    ConfigDeptSerSelector.selectDeptServices,\r\n  );\r\n  const loading = useSelector(ConfigDeptSerSelector.selectLoading);\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<any>('name');\r\n  const [pagi, setPagi] = useState(defaultPagi);\r\n  const [{ openModal }, dispatchModal] = useReducer(\r\n    reduceModal,\r\n    initModalState,\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(ConfigDeptSerlice.actions.getLoadListDeptServices(pagi));\r\n    const rootStore$: Unsubscribe = RootStore.subscribe(() => {\r\n      const { type, payload }: any = RootStore.getState().lastAction;\r\n      switch (type) {\r\n        case ConfigDeptSerlice.actions.getLoadListDeptServicesSuccess.type:\r\n          dispatch(ConfigDeptSerlice.actions.getPerformanceRoom());\r\n          break;\r\n        case ConfigDeptSerlice.actions.getPerformanceRoomSuccess.type:\r\n          dispatch(ConfigDeptSerlice.actions.getAllServices());\r\n          break;\r\n        case ConfigDeptSerlice.actions.getListDeptServicesSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              ConfigDeptSerConts.RESPONSE_CONFIG_DEPT_MESSAGE\r\n                .GET_LIST_DEP_SERVICE_SUCCESS,\r\n            )\r\n            .setSuccessNotify();\r\n          break;\r\n        case ConfigDeptSerlice.actions.addDeptServicesInDeptSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              ConfigDeptSerConts.RESPONSE_CONFIG_DEPT_MESSAGE\r\n                .CREATE_DEPT_SERVICE_SUCCESS,\r\n            )\r\n            .setSuccessNotify();\r\n          renderListDeptService();\r\n          break;\r\n        case ConfigDeptSerlice.actions.updateDeptServicesInDeptSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              ConfigDeptSerConts.RESPONSE_CONFIG_DEPT_MESSAGE\r\n                .UPDATE_DEPT_SERVICE_SUCCESS,\r\n            )\r\n            .setSuccessNotify();\r\n          renderListDeptService();\r\n          break;\r\n        case ConfigDeptSerlice.actions.getDeptServicesByIdSuccess.type:\r\n          dispatchModal({ type: ModalType.OPEN, payload: true });\r\n          break;\r\n        case ConfigDeptSerlice.actions.getListDeptServicesFail.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              payload\r\n                ? payload\r\n                : ConfigDeptSerConts.RESPONSE_CONFIG_DEPT_MESSAGE\r\n                    .GET_LIST_DEP_SERVICE_FAIL,\r\n            )\r\n            .setFailNotify();\r\n          break;\r\n        case ConfigDeptSerlice.actions.getDeptServicesByIdFail.type:\r\n          notifyController.setNotifyMessage(payload).setFailNotify();\r\n          break;\r\n        case ConfigDeptSerlice.actions.addDeptServicesInDeptFail.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              payload\r\n                ? payload\r\n                : ConfigDeptSerConts.RESPONSE_CONFIG_DEPT_MESSAGE\r\n                    .CREATE_DEPT_SERVICE_FAIL,\r\n            )\r\n            .setFailNotify();\r\n          break;\r\n        case ConfigDeptSerlice.actions.updateDeptServicesInDeptFail.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              payload\r\n                ? payload\r\n                : ConfigDeptSerConts.RESPONSE_CONFIG_DEPT_MESSAGE\r\n                    .UPDATE_DEPT_SERVICE_FAIL,\r\n            )\r\n            .setFailNotify();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return () => {\r\n      rootStore$();\r\n    };\r\n  }, []);\r\n\r\n  const memoGroups = useMemo(() => {\r\n    const { data = [], total_records, page_number, page_size } = deptServices;\r\n    return {\r\n      data,\r\n      total: total_records,\r\n      pageNumber: page_number,\r\n      pageSize: page_size,\r\n    };\r\n  }, [deptServices]);\r\n\r\n  const renderListDeptService = () => {\r\n    dispatchModal({ type: ModalType.OPEN, payload: false });\r\n    dispatch(ConfigDeptSerlice.actions.getListDeptServices(pagi));\r\n  };\r\n\r\n  const submitSearch = (values: any) => {\r\n    dispatch(\r\n      ConfigDeptSerlice.actions.getListDeptServices({\r\n        ...values,\r\n        ...pagi,\r\n        pageNumber: 1,\r\n      }),\r\n    );\r\n    setPagi({\r\n      ...pagi,\r\n      pageNumber: 1,\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setValue('serviceCode', null);\r\n    setValue('roomCode', null);\r\n    setPagi(defaultPagi);\r\n    dispatch(\r\n      ConfigDeptSerlice.actions.getListDeptServices({\r\n        pageNumber: 1,\r\n        pageSize: 10,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <form onSubmit={handleSubmit(submitSearch)}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <input\r\n              className=\"form-control mr-sm-2 w-100\"\r\n              type=\"serviceCode\"\r\n              name=\"serviceCode\"\r\n              placeholder=\"Tìm theo mã dịch vụ\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <input\r\n              className=\"form-control mr-sm-2 w-100\"\r\n              type=\"roomCode\"\r\n              name=\"roomCode\"\r\n              placeholder=\"Tìm theo mã phòng khám\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"btn-group\">\r\n              <button\r\n                className=\"btn btn-outline-success btn__config mr-1\"\r\n                type=\"submit\"\r\n              >\r\n                Tìm kiếm <i className=\"fa fa-search\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n              <button\r\n                className=\"btn btn-outline-warning btn__config\"\r\n                type=\"button\"\r\n                onClick={handleReset}\r\n              >\r\n                Reset <i className=\"fa fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 text-right\">\r\n            <div className=\"btn-group\">\r\n              <button\r\n                className=\"btn btn-outline-success btn__config\"\r\n                type=\"button\"\r\n                onClick={() =>\r\n                  dispatchModal({ type: ModalType.OPEN, payload: true })\r\n                }\r\n              >\r\n                Thêm phòng khám dịch vụ <i className=\"fa fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={TableGroups}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!_.isEmpty(deptServices) && deptServices.data.length) {\r\n      const tableData: any[] = AppHelper.stableSort(\r\n        memoGroups.data,\r\n        AppHelper.getComparator(order, orderBy),\r\n      );\r\n      return tableData.map((row, idx) => {\r\n        const deptService = _.cloneDeep(row);\r\n        return (\r\n          <TableRow key={idx}>\r\n            {TableGroups.map(column => {\r\n              const value = deptService[column.id];\r\n              if (column.id === 'no') {\r\n                const { pageNumber, pageSize } = memoGroups;\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    {pageNumber === 1\r\n                      ? pageNumber + idx\r\n                      : idx + 1 + (pageNumber - 1) * pageSize}\r\n                  </TableCell>\r\n                );\r\n              }\r\n              if (column.id === 'is_active') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <i\r\n                      style={{\r\n                        color: value ? '#4caf50' : '#ff0000',\r\n                        fontSize: '16px',\r\n                      }}\r\n                      className={`fa fa-${value ? 'check' : 'times'}-circle`}\r\n                      aria-hidden=\"true\"\r\n                    ></i>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              if (column.id === 'actions') {\r\n                return (\r\n                  <TableCell key={column.id}>\r\n                    <Tooltip title={'Sửa'} enterDelay={500} leaveDelay={100}>\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs\"\r\n                        onClick={() => {\r\n                          dispatch(\r\n                            ConfigDeptSerlice.actions.getDeptServicesById(\r\n                              row.id,\r\n                            ),\r\n                          );\r\n                        }}\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={TableGroups.length}\r\n          >\r\n            Không có dữ liệu\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, page: number) => {\r\n    let changePage = Object.assign({}, pagi, {\r\n      pageNumber: page + 1,\r\n    });\r\n    setPagi(changePage);\r\n    dispatch(ConfigDeptSerlice.actions.getListDeptServices(changePage));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    let changeRowPerPage = Object.assign({}, pagi, {\r\n      pageSize: +event.target.value,\r\n      pageNumber: 1,\r\n    });\r\n    setPagi(changeRowPerPage);\r\n    dispatch(ConfigDeptSerlice.actions.getListDeptServices(changeRowPerPage));\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(memoGroups) && memoGroups.data.length) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          labelRowsPerPage=\"Hiển Thị\"\r\n          count={memoGroups.total}\r\n          rowsPerPage={memoGroups.pageSize}\r\n          page={memoGroups.pageNumber - 1}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {loading && <AppLoading loading={true} />}\r\n      {openModal && (\r\n        <ConfigDeptSerAction\r\n          open={openModal}\r\n          onClose={() =>\r\n            dispatchModal({ type: ModalType.OPEN, payload: false })\r\n          }\r\n        />\r\n      )}\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  return function (props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(\"The \".concat(location, \" `\").concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameSafe, \"` is deprecated. \").concat(reason));\n    }\n\n    return null;\n  };\n}","/* eslint-disable no-restricted-globals */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n  th: {\r\n    fontWeight: 600,\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nexport default function TableHeaderSor(props: any) {\r\n  const thClasses = useStyles();\r\n  const { classes, order, orderBy, onRequestSort, columns } = props;\r\n  const createSortHandler = property => {\r\n    return event => {\r\n      onRequestSort(event, property);\r\n    };\r\n  };\r\n  return (\r\n    <TableRow>\r\n      {columns.map(col => {\r\n        return (\r\n          <TableCell\r\n            className={thClasses.th}\r\n            key={col.id}\r\n            sortDirection={orderBy === col.id ? order : false}\r\n            style={{\r\n              minWidth: col.minWidth,\r\n              backgroundColor: '#1a8ae2',\r\n              color: '#fff',\r\n              padding: '16px',\r\n            }}\r\n            align={col.align ? col.align : 'inherit'}\r\n          >\r\n            {isNaN(col.id) ? (\r\n              <TableSortLabel\r\n                active={orderBy === col.id}\r\n                direction={orderBy === col.id ? order : 'asc'}\r\n                onClick={createSortHandler(col.id)}\r\n              >\r\n                {col.label}\r\n                {orderBy === col.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc'\r\n                      ? 'sorted descending'\r\n                      : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              <>{col.headerName}</>\r\n            )}\r\n          </TableCell>\r\n        );\r\n      })}\r\n    </TableRow>\r\n  );\r\n}\r\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export enum SettingManageType {\r\n  Title = 'CD',\r\n  Position = 'CV',\r\n  Group = 'NDV',\r\n  Service = 'DV',\r\n  DepartmentType = 'LPB',\r\n  Department = 'PB',\r\n  Medicine = 'MD',\r\n  Pharmacy = 'PM',\r\n  Faculty = 'KP',\r\n  Specialist = 'CK',\r\n}\r\n\r\nexport const DEFAULT_ID = '00000000-0000-0000-0000-000000000000';\r\n\r\nexport enum SettingManageKey {\r\n  TITLE = 'TITLE',\r\n  POSITION = 'POSITION',\r\n  GROUP_SERVICE = 'GROUP_SERVICE',\r\n  SERVICE = 'SERVICE',\r\n  DEPARTMENT_TYPE = 'DEPARTMENT_TYPE',\r\n  DEPARTMENT = 'DEPARTMENT',\r\n  FACULTY = 'FACULTY',\r\n}\r\n\r\nexport const SettingApiRoutes = {\r\n  TABLE: {\r\n    GET_ALL_TABLE: '/api/Table/all',\r\n    CREATE_UPDATE_TABLE: '/api/Table',\r\n  },\r\n  MANAGE_TYPE: {\r\n    GET_ALL_MANAGE_TYPE: '/api/ListValue/get-all-list-values',\r\n    GET_ALL_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/get-all-list-values',\r\n    CHECK_UNIQUE_MANAGE_TYPE: '/api/ListValue/check-code-unique',\r\n    CHECK_UNIQUE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/check-code-unique',\r\n    GET_MANAGE_TYPE_BY_CODE: '/api/ListValueType/get-list-value-type',\r\n    GET_ACTIVE_TYPE: '/api/ListValue/get-list-values-activated',\r\n    CHANGE_ACTIVE_MANAGE_TYPE: '/api/ListValue/change-active',\r\n    CHANGE_ACTIVE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/change-active',\r\n    DELETE_MANAGE_TYPE: '/api/ListValue/delete/',\r\n    DELETE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/delete/',\r\n    CREATE_MANAGE_TYPE: '/api/ListValue/add',\r\n    CREATE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/add',\r\n    UPDATE_MANAGE_TYPE: '/api/ListValue/update',\r\n    UPDATE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/update',\r\n  },\r\n};\r\n\r\nexport const RESPONSE_CONSTANT = {\r\n  TABLE: {\r\n    CREATE_TABLE_SUCCESS: 'CREATE_TABLE_SUCCESS',\r\n    CREATE_TABLE_FAIL: 'CREATE_TABLE_FAIL',\r\n    UPDATE_TABLE_SUCCESS: 'UPDATE_TABLE_SUCCESS',\r\n    UPDATE_TABLE_FAIL: 'UPDATE_TABLE_FAIL',\r\n    DELETE_TABLE_SUCCESS: 'DELETE_TABLE_SUCCESS',\r\n    DELETE_TABLE_FAIL: 'DELETE_TABLE_FAIL',\r\n  },\r\n  TITLE: {\r\n    CHANGE_STATUS_TITLE_SUCCESS: 'CHANGE_STATUS_TITLE_SUCCESS',\r\n    CHANGE_STATUS_TITLE_FAIL: 'CHANGE_STATUS_TITLE_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_TITLE_SUCCESS: 'DELETE_TITLE_SUCCESS',\r\n    DELETE_TITLE_FAIL: 'DELETE_TITLE_FAIL',\r\n    CREATE_TITLE_SUCCESS: 'CREATE_TITLE_SUCCESS',\r\n    CREATE_TITLE_FAIL: 'CREATE_TITLE_FAIL',\r\n    UPDATE_TITLE_SUCCESS: 'UPDATE_TITLE_SUCCESS',\r\n    UPDATE_TITLE_FAIL: 'UPDATE_TITLE_FAIL',\r\n  },\r\n  POSITION: {\r\n    CHANGE_STATUS_POSITION_SUCCESS: 'CHANGE_STATUS_POSITION_SUCCESS',\r\n    CHANGE_STATUS_POSITION_FAIL: 'CHANGE_STATUS_POSITION_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_POSITION_SUCCESS: 'DELETE_POSITION_SUCCESS',\r\n    DELETE_POSITION_FAIL: 'DELETE_POSITION_FAIL',\r\n    CREATE_POSITION_SUCCESS: 'CREATE_POSITION_SUCCESS',\r\n    CREATE_POSITION_FAIL: 'CREATE_POSITION_FAIL',\r\n    UPDATE_POSITION_SUCCESS: 'UPDATE_POSITION_SUCCESS',\r\n    UPDATE_POSITION_FAIL: 'UPDATE_POSITION_FAIL',\r\n  },\r\n  GROUP_SERVICE: {\r\n    CHANGE_STATUS_GROUP_SERVICE_SUCCESS: 'CHANGE_STATUS_GROUP_SERVICE_SUCCESS',\r\n    CHANGE_STATUS_GROUP_SERVICE_FAIL: 'CHANGE_STATUS_GROUP_SERVICE_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_GROUP_SERVICE_SUCCESS: 'DELETE_GROUP_SERVICE_SUCCESS',\r\n    DELETE_GROUP_SERVICE_FAIL: 'DELETE_GROUP_SERVICE_FAIL',\r\n    CREATE_GROUP_SERVICE_SUCCESS: 'CREATE_GROUP_SERVICE_SUCCESS',\r\n    CREATE_GROUP_SERVICE_FAIL: 'CREATE_GROUP_SERVICE_FAIL',\r\n    UPDATE_GROUP_SERVICE_SUCCESS: 'UPDATE_GROUP_SERVICE_SUCCESS',\r\n    UPDATE_GROUP_SERVICE_FAIL: 'UPDATE_GROUP_SERVICE_FAIL',\r\n  },\r\n  SERVICE: {\r\n    CHANGE_STATUS_SERVICE_SUCCESS: 'CHANGE_STATUS_SERVICE_SUCCESS',\r\n    CHANGE_STATUS_SERVICE_FAIL: 'CHANGE_STATUS_SERVICE_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_SERVICE_SUCCESS: 'DELETE_SERVICE_SUCCESS',\r\n    DELETE_SERVICE_FAIL: 'DELETE_SERVICE_FAIL',\r\n    CREATE_SERVICE_SUCCESS: 'CREATE_SERVICE_SUCCESS',\r\n    CREATE_SERVICE_FAIL: 'CREATE_SERVICE_FAIL',\r\n    UPDATE_SERVICE_SUCCESS: 'UPDATE_SERVICE_SUCCESS',\r\n    UPDATE_SERVICE_FAIL: 'UPDATE_SERVICE_FAIL',\r\n  },\r\n  DEPARTMENT_TYPE: {\r\n    CHANGE_STATUS_DEPARTMENT_TYPE_SUCCESS:\r\n      'CHANGE_STATUS_DEPARTMENT_TYPE_SUCCESS',\r\n    CHANGE_STATUS_DEPARTMENT_TYPE_FAIL: 'CHANGE_STATUS_DEPARTMENT_TYPE_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_DEPARTMENT_TYPE_SUCCESS: 'DELETE_DEPARTMENT_TYPE_SUCCESS',\r\n    DELETE_DEPARTMENT_TYPE_FAIL: 'DELETE_DEPARTMENT_TYPE_FAIL',\r\n    CREATE_DEPARTMENT_TYPE_SUCCESS: 'CREATE_DEPARTMENT_TYPE_SUCCESS',\r\n    CREATE_DEPARTMENT_TYPE_FAIL: 'CREATE_DEPARTMENT_TYPE_FAIL',\r\n    UPDATE_DEPARTMENT_TYPE_SUCCESS: 'UPDATE_DEPARTMENT_TYPE_SUCCESS',\r\n    UPDATE_DEPARTMENT_TYPE_FAIL: 'UPDATE_DEPARTMENT_TYPE_FAIL',\r\n  },\r\n  DEPARTMENT: {\r\n    CHANGE_STATUS_DEPARTMENT_SUCCESS: 'CHANGE_STATUS_DEPARTMENT_SUCCESS',\r\n    CHANGE_STATUS_DEPARTMENT_FAIL: 'CHANGE_STATUS_DEPARTMENT_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_DEPARTMENT_SUCCESS: 'DELETE_DEPARTMENT_SUCCESS',\r\n    DELETE_DEPARTMENT_FAIL: 'DELETE_DEPARTMENT_FAIL',\r\n    CREATE_DEPARTMENT_SUCCESS: 'CREATE_DEPARTMENT_SUCCESS',\r\n    CREATE_DEPARTMENT_FAIL: 'CREATE_DEPARTMENT_FAIL',\r\n    UPDATE_DEPARTMENT_SUCCESS: 'UPDATE_DEPARTMENT_SUCCESS',\r\n    UPDATE_DEPARTMENT_FAIL: 'UPDATE_DEPARTMENT_TYPE_FAIL',\r\n  },\r\n  FACULTY: {\r\n    CHANGE_STATUS_FACULTY_SUCCESS: 'CHANGE_STATUS_FACULTY_SUCCESS',\r\n    CHANGE_STATUS_FACULTY_FAIL: 'CHANGE_STATUS_FACULTY_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_FACULTY_SUCCESS: 'DELETE_FACULTY_SUCCESS',\r\n    DELETE_FACULTY_FAIL: 'DELETE_FACULTY_FAIL',\r\n    CREATE_FACULTY_SUCCESS: 'CREATE_FACULTY_SUCCESS',\r\n    CREATE_FACULTY_FAIL: 'CREATE_FACULTY_FAIL',\r\n    UPDATE_FACULTY_SUCCESS: 'UPDATE_FACULTY_SUCCESS',\r\n    UPDATE_FACULTY_FAIL: 'UPDATE_FACULTY_TYPE_FAIL',\r\n  },\r\n};\r\n\r\nexport const RESPONSE_MESSAGE = {\r\n  TABLE: {\r\n    CREATE_TABLE_SUCCESS: 'Tạo Mới Thông Tin Bàn Tiếp Nhận Thành Công',\r\n    CREATE_TABLE_FAIL: 'Tạo Mới Thông Tin Bàn Tiếp Nhận Thất Bại',\r\n    UPDATE_TABLE_SUCCESS: 'Cập Nhật Thông Tin Bàn Tiếp Nhận Thành Công',\r\n    UPDATE_TABLE_FAIL: 'Cập Nhật Thông Tin Bàn Tiếp Nhận Thất Bại',\r\n    DELETE_TABLE_SUCCESS: 'Xoá Thông Tin Bàn Tiếp Nhận Thành Công',\r\n    DELETE_TABLE_FAIL: 'Xoá Thông Tin Bàn Tiếp Nhận Thất Bại',\r\n  },\r\n  TITLE: {\r\n    CHANGE_STATUS_TITLE_SUCCESS: 'Thay Đổi Trạng Thái Chức Danh Thành Công',\r\n    CHANGE_STATUS_TITLE_FAIL: 'Thay Đổi Trạng Thái Chức Danh Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Chức Danh Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Chức Danh Đã Tồn Tại',\r\n    DELETE_TITLE_SUCCESS: 'Xoá Chức Danh Thành Công',\r\n    DELETE_TITLE_FAIL: 'Xoá Chức Danh Thất Bại',\r\n    CREATE_TITLE_SUCCESS: 'Tạo Mới Chức Danh Thành Công',\r\n    CREATE_TITLE_FAIL: 'Tạo Mới Chức Danh Thất Bại',\r\n    UPDATE_TITLE_SUCCESS: 'Cập Nhật Chức Danh Thành Công',\r\n    UPDATE_TITLE_FAIL: 'Cập Nhật Chức Danh Thất Bại',\r\n  },\r\n  POSITION: {\r\n    CHANGE_STATUS_POSITION_SUCCESS: 'Thay Đổi Trạng Thái Chức Vụ Thành Công',\r\n    CHANGE_STATUS_POSITION_FAIL: 'Thay Đổi Trạng Thái Chức Vụ Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Chức Vụ Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Chức Vụ Đã Tồn Tại',\r\n    DELETE_POSITION_SUCCESS: 'Xoá Chức Vụ Thành Công',\r\n    DELETE_POSITION_FAIL: 'Xoá Chức Vụ Thất Bại',\r\n    CREATE_POSITION_SUCCESS: 'Tạo Mới Chức Vụ Thành Công',\r\n    CREATE_POSITION_FAIL: 'Tạo Mới Chức Vụ Thất Bại',\r\n    UPDATE_POSITION_SUCCESS: 'Cập Nhật Chức Vụ Thành Công',\r\n    UPDATE_POSITION_FAIL: 'Cập Nhật Chức Vụ Thất Bại',\r\n  },\r\n  GROUP_SERVICE: {\r\n    CHANGE_STATUS_GROUP_SERVICE_SUCCESS:\r\n      'Thay Đổi Trạng Thái Nhóm Dịch Vụ Thành Công',\r\n    CHANGE_STATUS_GROUP_SERVICE_FAIL:\r\n      'Thay Đổi Trạng Thái Nhóm Dịch Vụ Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Nhóm Dịch Vụ Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Nhóm Dịch Vụ Đã Tồn Tại',\r\n    DELETE_GROUP_SERVICE_SUCCESS: 'Xoá Nhóm Dịch Vụ Thành Công',\r\n    DELETE_GROUP_SERVICE_FAIL: 'Xoá Nhóm Dịch Vụ Thất Bại',\r\n    CREATE_GROUP_SERVICE_SUCCESS: 'Tạo Mới Nhóm Dịch Vụ Thành Công',\r\n    CREATE_GROUP_SERVICE_FAIL: 'Tạo Mới Nhóm Dịch Vụ Thất Bại',\r\n    UPDATE_GROUP_SERVICE_SUCCESS: 'Cập Nhật Nhóm Dịch Vụ Thành Công',\r\n    UPDATE_GROUP_SERVICE_FAIL: 'Cập Nhật Nhóm Dịch Vụ Thất Bại',\r\n  },\r\n  SERVICE: {\r\n    CHANGE_STATUS_SERVICE_SUCCESS: 'Thay Đổi Trạng Thái Dịch Vụ Thành Công',\r\n    CHANGE_STATUS_SERVICE_FAIL: 'Thay Đổi Trạng Thái Dịch Vụ Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Dịch Vụ Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Dịch Vụ Đã Tồn Tại',\r\n    DELETE_SERVICE_SUCCESS: 'Xoá Dịch Vụ Thành Công',\r\n    DELETE_SERVICE_FAIL: 'Xoá Dịch Vụ Thất Bại',\r\n    CREATE_SERVICE_SUCCESS: 'Tạo Mới Dịch Vụ Thành Công',\r\n    CREATE_SERVICE_FAIL: 'Tạo Mới Dịch Vụ Thất Bại',\r\n    UPDATE_SERVICE_SUCCESS: 'Cập Nhật Dịch Vụ Thành Công',\r\n    UPDATE_SERVICE_FAIL: 'Cập Nhật Dịch Vụ Thất Bại',\r\n  },\r\n  DEPARTMENT_TYPE: {\r\n    CHANGE_STATUS_DEPARTMENT_TYPE_SUCCESS:\r\n      'Thay Đổi Trạng Thái Loại phòng khám Thành Công',\r\n    CHANGE_STATUS_DEPARTMENT_TYPE_FAIL:\r\n      'Thay Đổi Trạng Thái Loại phòng khám Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Loại phòng khám Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Loại phòng khám Đã Tồn Tại',\r\n    DELETE_DEPARTMENT_TYPE_SUCCESS: 'Xoá Loại phòng khám Thành Công',\r\n    DELETE_DEPARTMENT_TYPE_FAIL: 'Xoá Loại phòng khám Thất Bại',\r\n    CREATE_DEPARTMENT_TYPE_SUCCESS: 'Tạo Mới Loại phòng khám Thành Công',\r\n    CREATE_DEPARTMENT_TYPE_FAIL: 'Tạo Mới Loại phòng khám Thất Bại',\r\n    UPDATE_DEPARTMENT_TYPE_SUCCESS: 'Cập Nhật Loại phòng khám Thành Công',\r\n    UPDATE_DEPARTMENT_TYPE_FAIL: 'Cập Nhật Loại phòng khám Thất Bại',\r\n  },\r\n  DEPARTMENT: {\r\n    CHANGE_STATUS_DEPARTMENT_SUCCESS:\r\n      'Thay Đổi Trạng Thái phòng khám Thành Công',\r\n    CHANGE_STATUS_DEPARTMENT_FAIL: 'Thay Đổi Trạng Thái phòng khám Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã phòng khám Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã phòng khám Đã Tồn Tại',\r\n    DELETE_DEPARTMENT_SUCCESS: 'Xoá phòng khám Thành Công',\r\n    DELETE_DEPARTMENT_FAIL: 'Xoá phòng khám Thất Bại',\r\n    CREATE_DEPARTMENT_SUCCESS: 'Tạo Mới phòng khám Thành Công',\r\n    CREATE_DEPARTMENT_FAIL: 'Tạo Mới phòng khám Thất Bại',\r\n    UPDATE_DEPARTMENT_SUCCESS: 'Cập Nhật phòng khám Thành Công',\r\n    UPDATE_DEPARTMENT_FAIL: 'Cập Nhật phòng khám Thất Bại',\r\n  },\r\n  FACULTY: {\r\n    CHANGE_STATUS_FACULTY_SUCCESS: 'Thay Đổi Trạng Thái Khoa Thành Công',\r\n    CHANGE_STATUS_FACULTY_FAIL: 'Thay Đổi Trạng Thái Khoa Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Khoa Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Khoa Đã Tồn Tại',\r\n    DELETE_FACULTY_SUCCESS: 'Xoá Khoa Thành Công',\r\n    DELETE_FACULTY_FAIL: 'Xoá Khoa Thất Bại',\r\n    CREATE_FACULTY_SUCCESS: 'Tạo Mới Khoa Thành Công',\r\n    CREATE_FACULTY_FAIL: 'Tạo Mới Khoa Thất Bại',\r\n    UPDATE_FACULTY_SUCCESS: 'Cập Nhật Khoa Thành Công',\r\n    UPDATE_FACULTY_FAIL: 'Cập Nhật Khoa Thất Bại',\r\n  },\r\n};\r\n\r\nexport const tablePermissionInRole: any[] = [\r\n  { id: 'no', label: '#', minWidth: 50 },\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'description', label: 'Mô tả', minWidth: 120 },\r\n  { id: 'is_active', label: 'Trạng thái', minWidth: 120 },\r\n  { id: 'actions', label: 'Có Thể  Truy Cập', minWidth: 200 },\r\n];\r\n\r\nexport const tableValue: any[] = [\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'description', label: 'Tên', minWidth: 120 },\r\n  { id: 'type', label: 'Loại', minWidth: 120 },\r\n  { id: 'actions', label: 'Chức năng', minWidth: 170 },\r\n];\r\n\r\nexport const tableGroupService: any[] = [\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'description', label: 'Tên', minWidth: 120 },\r\n  { id: 'type', label: 'Loại', minWidth: 120 },\r\n  { id: 'service_type', label: 'Loại hình dịch vụ', minWidth: 200 },\r\n  { id: 'actions', label: 'Chức năng', minWidth: 170 },\r\n];\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport propTypes from 'prop-types';\r\nimport { DialogKey } from 'store/patient/constants/http.constant';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    paddingBottom: 0,\r\n    '& h2': {\r\n      fontSize: '1.3rem !important',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n});\r\n\r\nenum ButtonTitle {\r\n  CANCEL = 'Hủy',\r\n  DELETE = 'Xóa',\r\n  UPDATE = 'Cập Nhật',\r\n  SAVE = 'Xác Nhận',\r\n}\r\n\r\ninterface ModalProps {\r\n  title: string;\r\n  keyConfirm: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  confirmMethod: () => any;\r\n  rejectMethod?: any;\r\n  other?: any;\r\n}\r\n\r\nconst setConfirmTitle = (keyConfirm: string): ButtonTitle => {\r\n  switch (keyConfirm) {\r\n    case DialogKey.DELETE_PATIENT:\r\n      return ButtonTitle.DELETE;\r\n    case DialogKey.CHANGE_STATUS_PATIENT:\r\n      return ButtonTitle.UPDATE;\r\n    default:\r\n      return ButtonTitle.SAVE;\r\n  }\r\n};\r\n\r\nexport const ModalConfirm = ({\r\n  title,\r\n  keyConfirm,\r\n  open,\r\n  onClose,\r\n  confirmMethod,\r\n  other = {},\r\n  rejectMethod,\r\n}: ModalProps) => {\r\n  const classes = useStyles();\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [buttonTitle, setButtonTitle] = useState(setConfirmTitle(keyConfirm));\r\n\r\n  const handleClose = () => {\r\n    setConfirm(false);\r\n    onClose();\r\n  };\r\n  const onConfirm = () => {\r\n    setConfirm(true);\r\n    onClose();\r\n  };\r\n\r\n  const onExited = () => {\r\n    if (confirm) {\r\n      return confirmMethod();\r\n    }\r\n    if (rejectMethod) {\r\n      rejectMethod();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      onExited={onExited}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      disableBackdropClick={true}\r\n    >\r\n      <DialogTitle classes={classes}>{'Thông báo xác nhận'}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {title} {!_.isEmpty(other) ? other.bodyText : ''}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={handleClose}\r\n          color=\"secondary\"\r\n          classes={{ root: 'btn-default btn-danger' }}\r\n        >\r\n          {'Đóng'}\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"primary\"\r\n          classes={{ root: 'btn-default btn-primary t-btn-primary' }}\r\n        >\r\n          {buttonTitle}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nModalConfirm.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n  open: propTypes.bool.isRequired,\r\n  onClose: propTypes.func.isRequired,\r\n  confirmMethod: propTypes.func.isRequired,\r\n  keyConfirm: propTypes.string.isRequired,\r\n};\r\n","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export default function unsupportedProp(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n\n  var propFullNameSafe = propFullName || propName;\n\n  if (typeof props[propName] !== 'undefined') {\n    return new Error(\"The prop `\".concat(propFullNameSafe, \"` is not supported. Please remove it.\"));\n  }\n\n  return null;\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { HttpRequest } from 'utils//request';\r\nimport { APP_CONSTANT } from 'store/common/constants/common.constant';\r\nimport {\r\n  SettingApiRoutes,\r\n  SettingManageType,\r\n} from '../constants/setting.constant';\r\nimport * as _ from 'lodash';\r\n\r\ninterface ManageTypeModel {\r\n  id?: string;\r\n  description: string;\r\n  code?: string;\r\n  isActive?: boolean;\r\n  isSystem?: boolean;\r\n  settingTypeId?: string;\r\n  listValueId?: string;\r\n  manageType: SettingManageType;\r\n}\r\n\r\ninterface OnlyManageType {\r\n  id: string;\r\n  manageType: SettingManageType;\r\n  code?: string;\r\n}\r\nexport class SettingHttp {\r\n  request: any;\r\n  constructor(endPoint = APP_CONSTANT.API.ENDPOINT) {\r\n    this.request = new HttpRequest(endPoint).request;\r\n  }\r\n\r\n  private configApiRouteWithManageType = (manageType: SettingManageType) => {\r\n    if (\r\n      manageType === SettingManageType.Service ||\r\n      manageType === SettingManageType.Department\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  protected modifyRequestBody = (manageTypeInfo: ManageTypeModel): any => {\r\n    let requestBody: any = {\r\n      code: manageTypeInfo.code,\r\n      description: manageTypeInfo.description,\r\n      display_order: 0,\r\n      is_active: manageTypeInfo.isActive,\r\n      is_system: manageTypeInfo.isSystem,\r\n      list_value_type_id: manageTypeInfo.settingTypeId,\r\n      list_value_id: manageTypeInfo.listValueId\r\n        ? manageTypeInfo.listValueId\r\n        : undefined,\r\n    };\r\n    let id = _.get(manageTypeInfo, 'id');\r\n    if (id) {\r\n      requestBody = {\r\n        ...requestBody,\r\n        id,\r\n      };\r\n    } else {\r\n      requestBody = {\r\n        ...requestBody,\r\n        type: 'TEK',\r\n      };\r\n    }\r\n    return requestBody;\r\n  };\r\n\r\n  public getAllManageType = (manageType: SettingManageType): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.GET_ALL_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.GET_ALL_MANAGE_TYPE;\r\n    }\r\n    return this.request.get(apiUrl + '/' + manageType);\r\n  };\r\n\r\n  public getManageType = (manageType: SettingManageType): Promise<any> => {\r\n    return this.request.get(\r\n      SettingApiRoutes.MANAGE_TYPE.GET_MANAGE_TYPE_BY_CODE + '/' + manageType,\r\n    );\r\n  };\r\n\r\n  public changeManageTypeActive = ({\r\n    id,\r\n    isActive,\r\n    manageType,\r\n  }): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CHANGE_ACTIVE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CHANGE_ACTIVE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl, {\r\n      id,\r\n      is_active: isActive ? !isActive : true,\r\n    });\r\n  };\r\n\r\n  public createManageType = (manageTypeInfo: ManageTypeModel): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(manageTypeInfo.manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CREATE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CREATE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl, this.modifyRequestBody(manageTypeInfo));\r\n  };\r\n\r\n  public updateManageType = (manageTypeInfo: ManageTypeModel): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(manageTypeInfo.manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.UPDATE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.UPDATE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl, this.modifyRequestBody(manageTypeInfo));\r\n  };\r\n\r\n  public deleteManageType = (deletetType: OnlyManageType): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(deletetType.manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.DELETE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.DELETE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl + '/' + deletetType.id);\r\n  };\r\n\r\n  public checkUniqueCode = (checkType: OnlyManageType): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(checkType.manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CHECK_UNIQUE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CHECK_UNIQUE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl, {\r\n      Code: checkType.code,\r\n      Id: checkType.id,\r\n    });\r\n  };\r\n\r\n  public getSpecialist = (specialistCode: SettingManageType) => {\r\n    return this.request.get(\r\n      SettingApiRoutes.MANAGE_TYPE.GET_ACTIVE_TYPE + '/' + specialistCode,\r\n    );\r\n  };\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.createSvgIcon;\n  }\n});\n\nvar _utils = require(\"@material-ui/core/utils\");","export default function requirePropFactory(componentNameInError) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  var requireProp = function requireProp(requiredProp) {\n    return function (props, propName, componentName, location, propFullName) {\n      var propFullNameSafe = propFullName || propName;\n\n      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n        return new Error(\"The prop `\".concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameInError, \"` must be used on `\").concat(requiredProp, \"`.\"));\n      }\n\n      return null;\n    };\n  };\n\n  return requireProp;\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { createSlice } from 'store/core/@reduxjs/toolkit';\r\nimport * as _ from 'lodash';\r\nexport interface RoomState {\r\n  loading: boolean;\r\n  error: any;\r\n  success: any;\r\n  rooms: any;\r\n  roomsUltraSound: any[];\r\n  roomsEndoscopy: any[];\r\n  combineRooms: any[];\r\n}\r\n\r\nexport const initialState: RoomState = {\r\n  loading: false,\r\n  error: null,\r\n  success: {},\r\n  rooms: [],\r\n  roomsUltraSound: [],\r\n  roomsEndoscopy: [],\r\n  combineRooms: [],\r\n};\r\n\r\nconst RoomFormSlice = createSlice({\r\n  name: 'room',\r\n  initialState,\r\n  reducers: {\r\n    getRoomAll(state) {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n\r\n    getRoomAllSuccess(state, action: any) {\r\n      state.loading = false;\r\n      state.rooms = action.payload;\r\n    },\r\n\r\n    getRoomAllFailure(state, action: any) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getRoomUltraSound(state) {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n\r\n    getRoomUltraSoundSuccess(state, action: any) {\r\n      state.loading = false;\r\n      state.roomsUltraSound = action.payload;\r\n    },\r\n\r\n    getRoomUltraSoundFailure(state, action: any) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getRoomEndoscopy(state) {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n\r\n    getRoomEndoscopySuccess(state, action: any) {\r\n      state.loading = false;\r\n      state.roomsEndoscopy = action.payload;\r\n    },\r\n\r\n    getRoomEndoscopyFailure(state, action: any) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getCombineRoom(state) {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n\r\n    getCombineRoomSuccess(state, action: any) {\r\n      state.loading = false;\r\n      state.combineRooms = action.payload;\r\n    },\r\n\r\n    getCombineRoomFailure(state, action: any) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions, reducer, name: sliceKey } = RoomFormSlice;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nimport { RootState } from 'store/core/types';\r\nimport { initialState } from './slice';\r\n\r\nconst selectRoomState = (state: RootState) => state.room || initialState;\r\n\r\nexport const selectLoading = createSelector(\r\n  [selectRoomState],\r\n  roomState => roomState.loading,\r\n);\r\n\r\nexport const selectError = createSelector(\r\n  [selectRoomState],\r\n  roomState => roomState.error,\r\n);\r\n\r\nexport const selectSuccess = createSelector(\r\n  [selectRoomState],\r\n  roomState => roomState.success,\r\n);\r\n\r\nexport const selectRooms = createSelector(\r\n  [selectRoomState],\r\n  roomState => roomState.rooms,\r\n);\r\n\r\nexport const selectRoomsUltraSound = createSelector(\r\n  [selectRoomState],\r\n  roomState => roomState.roomsUltraSound,\r\n);\r\n\r\nexport const selectRoomEndoscopy = createSelector(\r\n  [selectRoomState],\r\n  roomState => roomState.roomsEndoscopy,\r\n);\r\n\r\nexport const selectRoomCombine = createSelector(\r\n  [selectRoomState],\r\n  roomState => roomState.combineRooms,\r\n);\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    container: {\r\n      minHeight: 700,\r\n    },\r\n  }),\r\n);\r\n\r\nexport enum DialogKey {\r\n  DELETE_PATIENT = 'DELETE_PATIENT',\r\n  CHANGE_STATUS_PATIENT = 'CHANGE_STATUS_PATIENT',\r\n  UPDATE_PATIENT = 'UPDATE_PATIENT',\r\n  CREATE_PATIENT = 'CREATE_PATIENT',\r\n  MVIP = 'MVIP',\r\n}\r\n\r\nexport enum DilogTitle {\r\n  DELETE_PATIENT = 'Bạn có chắc chắn muốn xóa bệnh nhân này?',\r\n  CHANGE_STATUS_PATIENT = 'Bạn có chắc chắn thay đổi trạng thái?',\r\n}\r\n\r\nexport enum PatientStatus {\r\n  ACTIVE = 'Đã Kích Hoạt',\r\n  IN_ACTIVE = 'Chưa Kích Hoạt',\r\n}\r\n\r\nexport enum ButtonToolTip {\r\n  EDIT = 'Chỉnh Sửa',\r\n  DELETE = 'Xóa',\r\n  CHANGE_STATUS = 'Thay Đổi Trạng Thái',\r\n}\r\n\r\nexport enum LocationTypes {\r\n  PROVINCE = 'PROVINCE',\r\n  DIST = 'DIST',\r\n  WARD = 'WARD',\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { createSlice } from 'store/core/@reduxjs/toolkit';\r\n\r\nexport interface DeptGroupState {\r\n  loading?: boolean;\r\n  success?: any;\r\n  error?: any;\r\n  groups: any[];\r\n  group: any;\r\n  deptsInGroup: any[];\r\n}\r\n\r\nexport const initialState: DeptGroupState = {\r\n  loading: false,\r\n  success: null,\r\n  error: null,\r\n  groups: [],\r\n  group: {},\r\n  deptsInGroup: [],\r\n};\r\n\r\nconst deviceFormSlice = createSlice({\r\n  name: 'deptGroup',\r\n  initialState,\r\n  reducers: {\r\n    getGroups(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getGroupsSuccess(state, action) {\r\n      state.loading = false;\r\n      state.groups = action.payload;\r\n    },\r\n\r\n    getGroupsFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getGroupById(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getGroupByIdSuccess(state, action) {\r\n      state.loading = false;\r\n      state.group = action.payload;\r\n    },\r\n\r\n    getGroupByIdFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getGroupByCode(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getGroupByCodeSuccess(state, action) {\r\n      state.loading = false;\r\n      state.group = action.payload;\r\n    },\r\n\r\n    getGroupByCodeFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    createGroup(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    createGroupSuccess(state, action) {\r\n      state.loading = false;\r\n    },\r\n\r\n    createGroupFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    updateGroup(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    updateGroupSuccess(state, action) {\r\n      state.loading = false;\r\n    },\r\n\r\n    updateGroupFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    deleteGroup(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    deleteGroupSuccess(state, action) {\r\n      state.loading = false;\r\n    },\r\n\r\n    deleteGroupFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    addDeptToGroup(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    addDeptToGroupSuccess(state, action) {\r\n      state.loading = false;\r\n    },\r\n\r\n    addDeptToGroupFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getDeptInGroup(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getDeptInGroupSuccess(state, action) {\r\n      state.loading = false;\r\n      state.deptsInGroup = action.payload;\r\n    },\r\n\r\n    getDeptInGroupFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    setGroup(state, action) {\r\n      state.group = action.payload;\r\n    },\r\n\r\n    clearGroup(state) {\r\n      state.group = {};\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions, reducer, name: sliceKey } = deviceFormSlice;\r\n","export const TableApiRoutes = {\r\n  GET_ALL_TABLE: '/api/Table/all',\r\n  GET_BY_ID: '/api/Table',\r\n  CREATE_TABLE: '/api/Table/add',\r\n  UPDATE_TABLE: '/api/Table/update',\r\n  DELETE_TABLE: '/api/Table/delete/',\r\n  CALL_TABLE: '/api/Table/callable/all',\r\n  CHECK_UNIQUE: '/api/Table/check-code-unique',\r\n};\r\n\r\nexport const RESPONSE_CONSTANT = {\r\n  CREATE_TABLE_SUCCESS: 'CREATE_TABLE_SUCCESS',\r\n  CREATE_TABLE_FAIL: 'CREATE_TABLE_FAIL',\r\n  UPDATE_TABLE_SUCCESS: 'UPDATE_TABLE_SUCCESS',\r\n  UPDATE_TABLE_FAIL: 'UPDATE_TABLE_FAIL',\r\n  DELETE_TABLE_SUCCESS: 'DELETE_TABLE_SUCCESS',\r\n  DELETE_TABLE_FAIL: 'DELETE_TABLE_FAIL',\r\n  CHECK_UNIQUE_TABLE_SUCCESS: 'CHECK_UNIQUE_TABLE_SUCCESS',\r\n  CHECK_UNIQUE_TABLE_FAIL: 'CHECK_UNIQUE_TABLE_FAIL',\r\n};\r\n\r\nexport const RESPONSE_MESSAGE = {\r\n  CREATE_TABLE_SUCCESS: 'Tạo Mới Thông Tin Bàn Tiếp Nhận Thành Công',\r\n  CREATE_TABLE_FAIL: 'Tạo Mới Thông Tin Bàn Tiếp Nhận Thất Bại',\r\n  UPDATE_TABLE_SUCCESS: 'Cập Nhật Thông Tin Bàn Tiếp Nhận Thành Công',\r\n  UPDATE_TABLE_FAIL: 'Cập Nhật Thông Tin Bàn Tiếp Nhận Thất Bại',\r\n  DELETE_TABLE_SUCCESS: 'Xoá Thông Tin Bàn Tiếp Nhận Thành Công',\r\n  DELETE_TABLE_FAIL: 'Xoá Thông Tin Bàn Tiếp Nhận Thất Bại',\r\n  CHECK_UNIQUE_TABLE_SUCCESS: 'Mã bàn tiếp nhận có thể sử dụng',\r\n  CHECK_UNIQUE_TABLE_FAIL: 'Mã bàn tiếp nhận bị trùng',\r\n};\r\n\r\nexport const tablePatientReceiption: any[] = [\r\n  { id: 'no', label: '#', minWidth: 50 },\r\n  { id: 'name', label: 'Tên', minWidth: 120 },\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'device', label: 'Thiết bị', minWidth: 120 },\r\n  { id: 'type', label: 'Loại bàn', minWidth: 120 },\r\n  { id: 'device_type', label: 'Loại thiết bị', minWidth: 120 },\r\n  { id: 'pc_ip', label: 'PC IP', minWidth: 120 },\r\n  { id: 'area_code', label: 'Mã Khu', minWidth: 120 },\r\n  { id: 'department_code', label: 'Mã Phòng', minWidth: 120 },\r\n  { id: 'actions', label: 'Chức năng', minWidth: 170 },\r\n];\r\n\r\nexport const deviceTypes: any[] = [\r\n  { value: 0, label: 'Bàn' },\r\n  { value: 1, label: 'CPS' },\r\n];\r\n\r\nexport const tableTypes: any[] = [\r\n  { value: 0, label: 'Thường' },\r\n  { value: 1, label: 'Ưu tiên' },\r\n];\r\n\r\nexport const defaultFilter = [\r\n  {\r\n    data: '',\r\n    name: '',\r\n    searchable: true,\r\n    orderable: true,\r\n    search: {\r\n      value: '',\r\n      regex: true,\r\n    },\r\n  },\r\n];\r\n","import { flatten } from 'lodash';\r\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport { RoomHttp } from '../services/room.http';\r\nimport { actions } from './slice';\r\nconst roomRequest = new RoomHttp();\r\nconst roomRequestUltraSound = new RoomHttp();\r\n\r\nexport function* getRoomAll(api) {\r\n  const response = yield call(api.getRoomAll);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getRoomAllSuccess(response.data.result.data));\r\n    } else {\r\n      yield put(actions.getRoomAllFailure(response.data));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getRoomAllFailure(err));\r\n  }\r\n}\r\n\r\nexport function* getRoomUltraSound(api) {\r\n  const response = yield call(api.getRoomUltraSound);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getRoomUltraSoundSuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.getRoomUltraSoundFailure(response.data));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getRoomUltraSoundFailure(err));\r\n  }\r\n}\r\n\r\nexport function* getRoomEndoscopy(api) {\r\n  const response = yield call(api.getRoomEndoscopy);\r\n  try {\r\n    if (response.ok) {\r\n      yield put(actions.getRoomEndoscopySuccess(response.data.result));\r\n    } else {\r\n      yield put(actions.getRoomEndoscopyFailure(response.data));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getRoomEndoscopyFailure(err));\r\n  }\r\n}\r\n\r\nexport function* getCombineRoom(api) {\r\n  const response: any[] = yield call(api.getCombineRoom);\r\n  try {\r\n    const success: boolean = response.every(({ ok }: any) => ok);\r\n    const data: any[] = flatten(\r\n      response.map(({ data: { result } }: any) => result),\r\n    );\r\n    if (success) {\r\n      yield put(actions.getCombineRoomSuccess(data));\r\n    } else {\r\n      yield put(actions.getCombineRoomFailure(response));\r\n    }\r\n  } catch (err) {\r\n    yield put(actions.getCombineRoomFailure(err));\r\n  }\r\n}\r\n\r\nexport function* RoomSaga() {\r\n  yield all([\r\n    yield takeLatest(actions.getRoomAll.type, getRoomAll, roomRequest),\r\n    yield takeLatest(\r\n      actions.getRoomUltraSound.type,\r\n      getRoomUltraSound,\r\n      roomRequestUltraSound,\r\n    ),\r\n    yield takeLatest(\r\n      actions.getRoomEndoscopy.type,\r\n      getRoomEndoscopy,\r\n      roomRequest,\r\n    ),\r\n    yield takeLatest(actions.getCombineRoom.type, getCombineRoom, roomRequest),\r\n  ]);\r\n}\r\n","import { createSlice } from 'store/core/@reduxjs/toolkit';\r\nimport {\r\n  RESPONSE_CONSTANT,\r\n  RESPONSE_MESSAGE,\r\n} from '../constants/table.constant';\r\nimport { AppHelper } from 'utils/app.helper';\r\n\r\nexport interface TableState {\r\n  tableInfo?: any;\r\n  loading?: boolean;\r\n  success?: any;\r\n  error?: any;\r\n  tables?: any;\r\n  listTableCallAble: any;\r\n}\r\n\r\nexport const initialState: TableState = {\r\n  tableInfo: null,\r\n  loading: false,\r\n  success: null,\r\n  error: null,\r\n  tables: {},\r\n  listTableCallAble: {},\r\n};\r\n\r\nconst tableFormSlice = createSlice({\r\n  name: 'table',\r\n  initialState,\r\n  reducers: {\r\n    getTableAll(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getTableAllSuccess(state, action) {\r\n      state.tables = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getTableAllFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getTableWithId(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    getTableWithIdSuccess(state, action) {\r\n      state.tableInfo = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    getTableWithIdFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    createTable(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    createTableSuccess(state, action) {\r\n      state.loading = false;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.CREATE_TABLE_SUCCESS,\r\n        message: RESPONSE_MESSAGE.CREATE_TABLE_SUCCESS,\r\n      };\r\n    },\r\n\r\n    createTableFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.CREATE_TABLE_FAIL,\r\n        message: action?.payload\r\n          ? action.payload\r\n          : RESPONSE_MESSAGE.CREATE_TABLE_FAIL,\r\n      };\r\n    },\r\n\r\n    updateTable(state, action) {\r\n      state.loading = true;\r\n    },\r\n\r\n    updateTableSuccess(state, action) {\r\n      state.loading = false;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.UPDATE_TABLE_SUCCESS,\r\n        message: RESPONSE_MESSAGE.UPDATE_TABLE_SUCCESS,\r\n      };\r\n    },\r\n\r\n    updateTableFailure(state, action) {\r\n      const message = action.payload\r\n        ? action.payload\r\n        : RESPONSE_MESSAGE.UPDATE_TABLE_FAIL;\r\n      state.loading = false;\r\n      state.error = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.UPDATE_TABLE_FAIL,\r\n        message,\r\n      };\r\n    },\r\n\r\n    deleteTable(state, action) {\r\n      state.loading = true;\r\n      state.success = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.DELETE_TABLE_SUCCESS,\r\n        message: RESPONSE_MESSAGE.DELETE_TABLE_SUCCESS,\r\n      };\r\n    },\r\n\r\n    deleteTableSuccess(state, action) {\r\n      state.loading = false;\r\n    },\r\n\r\n    deleteTableFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = {\r\n        id: AppHelper.generateUUID() + Date.now(),\r\n        key: RESPONSE_CONSTANT.DELETE_TABLE_FAIL,\r\n        message: RESPONSE_MESSAGE.DELETE_TABLE_FAIL,\r\n      };\r\n    },\r\n\r\n    callTableAble(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    callTableAbleSuccess(state, action) {\r\n      state.listTableCallAble = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    callTableAbleFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n\r\n    clearTableInfo(state) {\r\n      state.tableInfo = null;\r\n    },\r\n\r\n    setError(state, action) {\r\n      state.error = action.payload;\r\n    },\r\n\r\n    setSuccess(state, action) {\r\n      state.success = action.payload;\r\n    },\r\n\r\n    clearSuccess(state) {\r\n      state.success = {};\r\n    },\r\n\r\n    clearError(state) {\r\n      state.error = {};\r\n    },\r\n\r\n    resetAll(state) {\r\n      state.loading = false;\r\n      state.success = null;\r\n      state.error = null;\r\n      state.tables = {};\r\n      state.tableInfo = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions, reducer, name: sliceKey } = tableFormSlice;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nimport { RootState } from 'store/core/types';\r\nimport { initialState } from './slice';\r\n\r\nconst selectDomain = (state: RootState) => state.deptGroup || initialState;\r\n\r\nexport const selectLoading = createSelector(\r\n  [selectDomain],\r\n  selectState => selectState.loading,\r\n);\r\n\r\nexport const selectGroups = createSelector(\r\n  [selectDomain],\r\n  selectState => selectState.groups,\r\n);\r\n\r\nexport const selectGroup = createSelector(\r\n  [selectDomain],\r\n  selectState => selectState.group,\r\n);\r\n\r\nexport const selectDeptsInGroup = createSelector(\r\n  [selectDomain],\r\n  selectState => selectState.deptsInGroup,\r\n);\r\n","import styled from 'styled-components';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nconst STableBody = styled(TableBody)`\r\n  & .MuiTableCell-body {\r\n    padding: 6px !important;\r\n  }\r\n`;\r\nexport default STableBody;\r\n","import TableHead from '@material-ui/core/TableHead';\r\nimport styled from 'styled-components';\r\n\r\nconst STableHead = styled(TableHead)`\r\n  & .MuiTableCell-head {\r\n    padding: 6px !important;\r\n  }\r\n`;\r\nexport default STableHead;\r\n","/* eslint-disable no-restricted-globals */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n  th: {\r\n    fontWeight: 600,\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nexport default function STableHeaderSort(props: any) {\r\n  const thClasses = useStyles();\r\n  const { classes, order, orderBy, onRequestSort, columns } = props;\r\n  const createSortHandler = property => {\r\n    return event => {\r\n      onRequestSort(event, property);\r\n    };\r\n  };\r\n  return (\r\n    <TableRow>\r\n      {columns.map(col => {\r\n        return (\r\n          <TableCell\r\n            className={thClasses.th}\r\n            key={col.id}\r\n            sortDirection={orderBy === col.id ? order : false}\r\n            style={{\r\n              minWidth: col.minWidth,\r\n              backgroundColor: '#1a8ae2',\r\n              color: '#fff',\r\n              padding: '16px',\r\n            }}\r\n            align={col.align ? col.align : 'inherit'}\r\n          >\r\n            {col.sortable && isNaN(col.id) ? (\r\n              <TableSortLabel\r\n                active={orderBy === col.id}\r\n                direction={orderBy === col.id ? order : 'asc'}\r\n                onClick={createSortHandler(col.id)}\r\n              >\r\n                {col.label}\r\n                {orderBy === col.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc'\r\n                      ? 'sorted descending'\r\n                      : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              <>{col.label}</>\r\n            )}\r\n          </TableCell>\r\n        );\r\n      })}\r\n    </TableRow>\r\n  );\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');\n\nexports.default = _default;","import { call, put, takeLatest, all } from 'redux-saga/effects';\r\nimport { actions } from './slice';\r\nimport { configResponse } from 'utils/request';\r\nimport { DeptGroupHttp } from '../services/deptGroup.http';\r\nimport { get } from 'lodash';\r\nconst api = new DeptGroupHttp();\r\n\r\nexport function* getGroups(api, action) {\r\n  const response = yield call(api.getGroups, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getGroupsSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getGroupsFailure(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* createGroup(api, action) {\r\n  const response = yield call(api.createGroup, action.payload);\r\n  try {\r\n    const { depts, departmentVirtualCode } = action.payload;\r\n    const data: any = yield configResponse(response);\r\n    yield put(\r\n      actions.createGroupSuccess({\r\n        ...data,\r\n        depts,\r\n        departmentVirtualCode,\r\n      }),\r\n    );\r\n  } catch (error) {\r\n    yield put(actions.createGroupFailure(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getGroupById(api, action) {\r\n  const response = yield call(api.getGroupById, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getGroupByIdSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getGroupByIdFailure(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getGroupByCode(api, action) {\r\n  const response = yield call(api.getGroupByCode, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getGroupByCodeSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getGroupByCodeFailure(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* updateGroup(api, action) {\r\n  const response = yield call(api.updateGroup, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    const { depts, departmentVirtualCode } = action.payload;\r\n    yield put(\r\n      actions.updateGroupSuccess({\r\n        ...data,\r\n        depts,\r\n        departmentVirtualCode,\r\n      }),\r\n    );\r\n  } catch (error) {\r\n    yield put(actions.updateGroupFailure(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* deleteGroup(api, action) {\r\n  const response = yield call(api.deleteGroup, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.deleteGroupSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.deleteGroupFailure(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* addDeptToGroup(api, action) {\r\n  const response = yield call(api.addDeptToGroup, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.addDeptToGroupSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.addDeptToGroupFailure(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* getDeptInGroup(api, action) {\r\n  const response = yield call(api.getDeptInGroup, action.payload);\r\n  try {\r\n    const data: any = yield configResponse(response);\r\n    yield put(actions.getDeptInGroupSuccess(data));\r\n  } catch (error) {\r\n    yield put(actions.getDeptInGroupFailure(get(error, 'message')));\r\n  }\r\n}\r\n\r\nexport function* DeptGroupSaga() {\r\n  yield all([\r\n    yield takeLatest(actions.createGroup.type, createGroup, api),\r\n    yield takeLatest(actions.addDeptToGroup.type, addDeptToGroup, api),\r\n    yield takeLatest(actions.getDeptInGroup.type, getDeptInGroup, api),\r\n    yield takeLatest(actions.deleteGroup.type, deleteGroup, api),\r\n    yield takeLatest(actions.updateGroup.type, updateGroup, api),\r\n    yield takeLatest(actions.getGroupById.type, getGroupById, api),\r\n    yield takeLatest(actions.getGroupByCode.type, getGroupByCode, api),\r\n    yield takeLatest(actions.getGroups.type, getGroups, api),\r\n  ]);\r\n}\r\n","export const RoomApiRoutes = {\r\n  GET_ALL: '/api/Room/all',\r\n  GET_ROOM_ULTRA_SOUND: '/api/ListValueExtend/department/group/TEK_KSAB',\r\n  GET_ROOM_ENDOSCOPY: '/api/ListValueExtend/department/group/TEK_KNSB',\r\n  CHANGE_ACTIVE_ROOM: '/api/ListValueExtend/change-active',\r\n};\r\n","import { HttpRequest } from 'utils/request';\r\nimport { APP_CONSTANT } from 'store/common/constants/common.constant';\r\nimport { RoomApiRoutes } from '../constants/room.constants';\r\nexport class RoomHttp {\r\n  request: any;\r\n  constructor(endPoint = APP_CONSTANT.API.ENDPOINT) {\r\n    this.request = new HttpRequest(endPoint).request;\r\n  }\r\n\r\n  public getRoomAll = () => {\r\n    return this.request.get(RoomApiRoutes.GET_ALL);\r\n  };\r\n\r\n  public getRoomUltraSound = (): Promise<any> => {\r\n    return this.request.get(RoomApiRoutes.GET_ROOM_ULTRA_SOUND);\r\n  };\r\n\r\n  public getRoomEndoscopy = (): Promise<any> => {\r\n    return this.request.get(RoomApiRoutes.GET_ROOM_ENDOSCOPY);\r\n  };\r\n\r\n  public getCombineRoom = (): Promise<any> => {\r\n    return Promise.all([this.getRoomUltraSound(), this.getRoomEndoscopy()]);\r\n  };\r\n\r\n  public changeActiveRoom = ({ id, is_active }): Promise<any> => {\r\n    return this.request.post(RoomApiRoutes.CHANGE_ACTIVE_ROOM, {\r\n      id,\r\n      is_active,\r\n    });\r\n  };\r\n}\r\n","export const ApiRoute = {\r\n  DEPT: 'api/Department',\r\n  DEPT_STATUS: 'api/Department/change-active',\r\n};\r\n\r\nexport const RESPONSE_CONSTANT = {\r\n  CHANGE_STATUS_DEPARTMENT_SUCCESS: 'CHANGE_STATUS_DEPARTMENT_SUCCESS',\r\n  CHANGE_STATUS_DEPARTMENT_FAIL: 'CHANGE_STATUS_DEPARTMENT_FAIL',\r\n  CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n  CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n  DELETE_DEPARTMENT_SUCCESS: 'DELETE_DEPARTMENT_SUCCESS',\r\n  DELETE_DEPARTMENT_FAIL: 'DELETE_DEPARTMENT_FAIL',\r\n  CREATE_DEPARTMENT_SUCCESS: 'CREATE_DEPARTMENT_SUCCESS',\r\n  CREATE_DEPARTMENT_FAIL: 'CREATE_DEPARTMENT_FAIL',\r\n  UPDATE_DEPARTMENT_SUCCESS: 'UPDATE_DEPARTMENT_SUCCESS',\r\n  UPDATE_DEPARTMENT_FAIL: 'UPDATE_DEPARTMENT_TYPE_FAIL',\r\n};\r\n\r\nexport const RESPONSE_MESSAGE = {\r\n  CHANGE_STATUS_DEPARTMENT_SUCCESS: 'Thay đổi trạng thái phòng khám thành công',\r\n  CHANGE_STATUS_DEPARTMENT_FAIL: 'Thay đổi trạng thái phòng khám thất bại',\r\n  CHECK_CODE_SUCCESS: 'Mã phòng khám Có Thể Sử Dụng',\r\n  CHECK_CODE_FAIL: 'Mã phòng khám Đã Tồn Tại',\r\n  DELETE_DEPARTMENT_SUCCESS: 'Xoá phòng khám thành công',\r\n  DELETE_DEPARTMENT_FAIL: 'Xoá phòng khám thất bại',\r\n  CREATE_DEPARTMENT_SUCCESS: 'Tạo mới phòng khám thành công',\r\n  CREATE_DEPARTMENT_FAIL: 'Tạo mới phòng khám thất bại',\r\n  UPDATE_DEPARTMENT_SUCCESS: 'Cập nhật phòng khám thành công',\r\n  UPDATE_DEPARTMENT_FAIL: 'Cập nhật phòng khám thất bại',\r\n};\r\n\r\nexport const TableGroups: any = [\r\n  {\r\n    id: 'actions',\r\n    label: 'Chức năng',\r\n    minWidth: 95,\r\n    align: 'center',\r\n    sortable: false,\r\n  },\r\n  {\r\n    id: 'code',\r\n    label: 'Mã phòng khám',\r\n    minWidth: 100,\r\n    align: 'center',\r\n    sortable: false,\r\n  },\r\n  {\r\n    id: 'name',\r\n    label: 'Tên phòng khám',\r\n    minWidth: 150,\r\n    align: 'center',\r\n    sortable: false,\r\n  },\r\n  {\r\n    id: 'is_active',\r\n    label: 'Trạng thái',\r\n    minWidth: 80,\r\n    align: 'center',\r\n    sortable: false,\r\n  },\r\n  {\r\n    id: 'total_number',\r\n    label: 'Định mức NGT',\r\n    minWidth: 80,\r\n    align: 'center',\r\n    sortable: false,\r\n  },\r\n  {\r\n    id: 'used_number',\r\n    label: 'Thực hiện',\r\n    minWidth: 80,\r\n    align: 'center',\r\n    sortable: false,\r\n  },\r\n  {\r\n    id: 'queue_number',\r\n    label: 'Số thứ tự',\r\n    minWidth: 60,\r\n    align: 'center',\r\n    sortable: false,\r\n  },\r\n  {\r\n    id: 'scheduler_number',\r\n    label: 'Hẹn lại',\r\n    minWidth: 80,\r\n    align: 'center',\r\n    sortable: false,\r\n  },\r\n  {\r\n    id: 'area_code',\r\n    label: 'Khu PK',\r\n    minWidth: 100,\r\n    align: 'center',\r\n    sortable: false,\r\n  },\r\n  {\r\n    id: 'address',\r\n    label: 'Địa chỉ',\r\n    minWidth: 140,\r\n    align: 'center',\r\n    sortable: false,\r\n  },\r\n  {\r\n    id: 'AM',\r\n    label: 'Giờ khám sáng',\r\n    minWidth: 100,\r\n    align: 'center',\r\n    sortable: false,\r\n  },\r\n  {\r\n    id: 'PM',\r\n    label: 'Giờ khám chiều',\r\n    minWidth: 100,\r\n    align: 'center',\r\n    sortable: false,\r\n  },\r\n  {\r\n    id: 'time_on_minute',\r\n    label: 'Thời gian mỗi lượt khám',\r\n    minWidth: 125,\r\n    align: 'center',\r\n    sortable: false,\r\n  },\r\n];\r\n","import {\r\n  DEFAULT_FORMAT_DATE,\r\n  DEFAULT_FORMAT_OUT_TIME,\r\n} from 'store/common/constants/common.constant';\r\nconst moment = require('moment');\r\n\r\ninterface TekDate {\r\n  value: string;\r\n  hour: string;\r\n  _idTime: number;\r\n}\r\n\r\nexport class TEKDateTimeService {\r\n  _date: Date;\r\n  constructor(addedDate: Date) {\r\n    this._date = addedDate;\r\n  }\r\n\r\n  get date() {\r\n    return this._date;\r\n  }\r\n\r\n  set date(newDate: Date) {\r\n    this._date = newDate;\r\n  }\r\n\r\n  /**\r\n   * Format DateTime From Date String\r\n   * @param dateInput string\r\n   * @returns formattedDate Date\r\n   */\r\n  static formDateTime(dateTime: string) {\r\n    if (!dateTime) return '-';\r\n    return moment(dateTime).format(DEFAULT_FORMAT_DATE);\r\n  }\r\n\r\n  /**\r\n   * Get Current Date Time Format String\r\n   * @param\r\n   * @returns string Ex: '2021-1-27 13:59:50'\r\n   */\r\n\r\n  static getCurrentTimeAndDate(): string {\r\n    const today = new Date();\r\n    const date =\r\n      today.getFullYear() +\r\n      '-' +\r\n      (today.getMonth() + 1) +\r\n      '-' +\r\n      today.getDate();\r\n    const time =\r\n      today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\r\n    const dateTime = date + ' ' + time;\r\n    return dateTime;\r\n  }\r\n\r\n  /**\r\n   * Get List Hours in Day\r\n   * @param\r\n   * @return TekDate[]TekDate\r\n   */\r\n\r\n  static createListTimeInDay(): TekDate[] {\r\n    const items: any[] = [];\r\n    let array: any[] = [];\r\n    for (let i = 1; i <= 24; i++) {\r\n      array.push(i);\r\n    }\r\n    array.forEach((acc, index) => {\r\n      const hourFormat = moment({ hour: index }).format();\r\n      items.push({\r\n        value: hourFormat.slice(\r\n          hourFormat.indexOf('T') + 1,\r\n          hourFormat.indexOf('+'),\r\n        ),\r\n        hour: moment({ hour: index }).format('h:mm A'),\r\n        _idTime: index,\r\n      });\r\n    });\r\n    return items;\r\n  }\r\n\r\n  static addMinutesToDate(date: Date, minutes: number): Date {\r\n    return new Date(date.getTime() + minutes * 60000);\r\n  }\r\n\r\n  static formatOutTime(date: Date): string {\r\n    if (date instanceof Date) {\r\n      return moment(date).format(DEFAULT_FORMAT_OUT_TIME);\r\n    }\r\n    return '';\r\n  }\r\n\r\n  static formatRenderTime(time: string): string {\r\n    if (!time) return '';\r\n    return time.slice(0, time.length - 3);\r\n  }\r\n\r\n  static getCurrentTime = () => {\r\n    let hour: any = new Date().getHours();\r\n    let minutes: any = new Date().getMinutes();\r\n    let seconds: any = new Date().getSeconds();\r\n    if (minutes < 10) {\r\n      minutes = '0' + minutes;\r\n    }\r\n    if (seconds < 10) {\r\n      seconds = '0' + seconds;\r\n    }\r\n    if (hour === 24) {\r\n      hour = '0' + 0;\r\n    }\r\n    return hour + ':' + minutes;\r\n  };\r\n}\r\n"],"sourceRoot":""}