{"version":3,"sources":["app/containers/PersonnelPage/components/ModalUserInRole.tsx","app/components/TableSortCheck/index.tsx","app/containers/PersonnelPage/components/ModalFindUser.tsx","app/containers/PersonnelPage/components/ConfirmDeleteRole.tsx","app/containers/PersonnelPage/components/ModalHRM.tsx","app/containers/PersonnelPage/pages/HRM.tsx","app/containers/PersonnelPage/components/ModalAddRole.tsx","../node_modules/antd/es/space/Item.js","../node_modules/antd/es/_util/styleChecker.js","../node_modules/antd/es/_util/hooks/useFlexGapSupport.js","../node_modules/antd/es/space/index.js","../node_modules/@ant-design/icons-svg/es/asn/InfoOutlined.js","../node_modules/@ant-design/icons/es/icons/InfoOutlined.js","app/containers/PersonnelPage/pages/Role.tsx","app/containers/PersonnelPage/pages/Schedule.tsx","app/components/TableHeaderSort/index.tsx","store/setting/constants/setting.constant.ts","app/components/Modal/Confirm/index.tsx","store/setting/services/setting.http.ts","store/patient/constants/http.constant.ts"],"names":["colUserInRole","id","label","minWidth","useStyles","makeStyles","root","width","container","minHeight","maxHeight","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","ModalUserInRole","open","onClose","useInjectReducer","key","AuthSlice","reducer","useInjectSaga","saga","AuthSaga","dispatch","useDispatch","classes","role","useSelector","AuthSelector","useState","order","setOrder","orderBy","setOrderBy","search","setSearch","handleRequestSort","event","property","fullWidth","maxWidth","disableBackdropClick","onSubmit","e","preventDefault","className","description","stickyHeader","onRequestSort","columns","_","users","length","align","colSpan","EMPTY_MESSAGE","AppHelper","stableSort","getComparator","map","row","idx","user","column","value","title","enterDelay","leaveDelay","style","color","fontSize","aria-hidden","onClick","activeUsers","filter","deleteUserInRole","activeUser","inActiveUser","type","th","fontWeight","textTransform","backgound","BlueCheckbox","withStyles","blue","checked","props","Checkbox","GreenCheckbox","green","TableSortCheck","onSelectAllClick","numSelected","rowCount","cols","TableRow","TableCell","backgroundColor","indeterminate","onChange","inputProps","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","ButtonSearch","styled","button","ModalFindUser","selected","setSelected","useForm","handleSubmit","register","getValues","useEffect","getListUser","clearUsers","submitSearch","fullName","pageNumber","pageSize","handleSelectAllClick","target","data","newSelecteds","n","handleChangePage","newPagi","page_size","handleChangeRowsPerPage","addUserToRole","console","log","currentUser","addUserInRole","Dialog","DialogContent","placeholder","aria-controls","ref","name","Paper","TableContainer","Table","TableHead","TableBody","isItemSelected","indexOf","hover","selectedIndex","newSelected","concat","slice","handleClick","aria-checked","tabIndex","Tooltip","TablePagination","rowsPerPageOptions","rowsPerArray","component","labelRowsPerPage","count","total_records","page","page_number","rowsPerPage","onChangePage","onChangeRowsPerPage","renderPagination","paddingBottom","ConfirmDeleteRole","confirmMethod","aria-labelledby","aria-describedby","FormKey","ModalHRM","personalHttp","AuthHttp","dateUtil","DateFnsUtils","newDate","format","Date","DEFAULT_FORMAT_INPUT_DATE","positions","AuthSelectors","titles","initUser","loading","errors","setError","clearErrors","setValue","React","birthDay","setBirthDay","clearData","setTimeout","USER","user_name","CODE","code","NAME","full_name","SEX","sex","birthdate","EMAIL","email","PHONE","phone","POS","TITLE","ACTIVE","is_active","userName","values","isCheckCode","isCheckName","checkCodePersonnel","DEFAULT_ID","checkCodeRes","configResponse","checkUserNamePersonnel","checkNameRes","message","createPersonnel","updatePersonnel","scroll","htmlFor","required","maxLength","BITRH","max","validate","RegExp","test","opt","index","defaultChecked","paddingLeft","colsHRM","lable","theme","createStyles","backdrop","zIndex","drawer","td","fontFamily","defaultPagi","HRM","enqueueSnackbar","useSnackbar","notifyController","NotifyService","settingHttp","SettingHttp","error","reset","isConfirmDelete","setIsConfirmDelete","setIsConfirmChangeStatus","openModal","setOpenModal","pagi","setPagi","selectPersonnel","setSelectPersonnel","setSelectIsActive","Promise","all","getAllManageType","SettingManageType","Title","Position","response","result","setUserTitles","setUserPositions","setNotifyMessage","setFailNotify","storeSub$","RootStore","subscribe","getState","lastAction","payload","getUserByIdSuccess","createPersonnelSuccess","RESPONSE_MESSAGE","CREATE_PERSONNEL_SUCCESS","setSuccessNotify","recallListUser","updatePersonnelSuccess","UPDATE_PERSONNEL_SUCCESS","changeActivePersonnelSuccess","CHANGE_ACTIVE_SUCCESS","deletePersonnelSuccess","DELETE_MESSAGE_SUCCESS","deletePersonnelFail","DELETE_MESSAGE_FAIL","getTitlePostion","handleDialogControl","personnel","isActive","DialogKeyPersonnel","DELETE_PERSONNEL","CHANGE_STATUS_PERSONNEL","CREATE_PERSONNEL","closeDialogControl","aria-label","background","_id","DEFAULT_FORMAT_DATE","ButtonToolTipPersonnel","CHANGE_STATUS","Switch","Boolean","changeActivePersonnel","EDIT","getUserById","DELETE","renderTable","Object","assign","DialogTitlePersonnel","DELETE_TITLE_PERSONNEL","keyConfirm","deletePersonnel","ModalAddRole","addRole","autoComplete","Item","_ref","marginDirection","children","split","wrap","_React$useContext","SpaceContext","horizontalSize","verticalSize","latestIndex","supportFlexGap","marginBottom","_extends","_defineProperty","undefined","flexGapSupported","canUseDocElement","canUseDom","window","document","documentElement","_React$useState","_React$useState2","_slicedToArray","flexible","setFlexible","flex","createElement","display","flexDirection","rowGap","appendChild","body","scrollHeight","removeChild","detectFlexGapSupported","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","propertyIsEnumerable","spaceSize","small","middle","large","Space","_classNames","ConfigContext","getPrefixCls","space","directionConfig","_props$size","size","_props$direction","customizePrefixCls","prefixCls","_props$wrap","otherProps","useFlexGapSupport","_React$useMemo","Array","isArray","item","getNumberSize","_React$useMemo2","childNodes","toArray","keepEmpty","mergedAlign","cn","classNames","itemClassName","nodes","child","spaceContext","gapStyle","flexWrap","columnGap","Provider","InfoOutlined","AntdIcon","_objectSpread","icon","InfoOutlinedSvg","displayName","ModalType","initModalState","isAdd","isDelete","idDelete","isUser","isPermission","reduceModalState","state","action","ADD","PERMISSION","Role","roles","useReducer","modalState","dispatchModal","getRoleByIdSuccess","addRoleSuccess","ADD_ROLE_SUCCESS","getListRole","updatePermissionInRoleSuccess","updatePermissionInRoleFail","deleteRoleSuccess","DELETE_ROLE_SUCCESS","addRoleFail","deleteRoleFail","deleteUserInRoleSuccess","addUserInRoleSuccess","addUserInRoleFail","deleteUserInRoleFail","resetPatient","renderData","useMemo","columnsAntD","dataIndex","render","CheckSquareTwoTone","twoToneColor","getRoleById","to","pathname","DeleteOutlined","deleteRole","dataSource","pagination","rowKey","y","Schedule","effect","data-order","data-toggle","data-target","TableHeaderSor","thClasses","col","isNaN","headerName","SettingManageKey","SettingApiRoutes","TABLE","GET_ALL_TABLE","CREATE_UPDATE_TABLE","MANAGE_TYPE","GET_ALL_MANAGE_TYPE","GET_ALL_EXTEND_MANAGE_TYPE","CHECK_UNIQUE_MANAGE_TYPE","CHECK_UNIQUE_EXTEND_MANAGE_TYPE","GET_MANAGE_TYPE_BY_CODE","GET_ACTIVE_TYPE","CHANGE_ACTIVE_MANAGE_TYPE","CHANGE_ACTIVE_EXTEND_MANAGE_TYPE","DELETE_MANAGE_TYPE","DELETE_EXTEND_MANAGE_TYPE","CREATE_MANAGE_TYPE","CREATE_EXTEND_MANAGE_TYPE","UPDATE_MANAGE_TYPE","UPDATE_EXTEND_MANAGE_TYPE","RESPONSE_CONSTANT","CREATE_TABLE_SUCCESS","CREATE_TABLE_FAIL","UPDATE_TABLE_SUCCESS","UPDATE_TABLE_FAIL","DELETE_TABLE_SUCCESS","DELETE_TABLE_FAIL","CHANGE_STATUS_TITLE_SUCCESS","CHANGE_STATUS_TITLE_FAIL","CHECK_CODE_SUCCESS","CHECK_CODE_FAIL","DELETE_TITLE_SUCCESS","DELETE_TITLE_FAIL","CREATE_TITLE_SUCCESS","CREATE_TITLE_FAIL","UPDATE_TITLE_SUCCESS","UPDATE_TITLE_FAIL","POSITION","CHANGE_STATUS_POSITION_SUCCESS","CHANGE_STATUS_POSITION_FAIL","DELETE_POSITION_SUCCESS","DELETE_POSITION_FAIL","CREATE_POSITION_SUCCESS","CREATE_POSITION_FAIL","UPDATE_POSITION_SUCCESS","UPDATE_POSITION_FAIL","GROUP_SERVICE","CHANGE_STATUS_GROUP_SERVICE_SUCCESS","CHANGE_STATUS_GROUP_SERVICE_FAIL","DELETE_GROUP_SERVICE_SUCCESS","DELETE_GROUP_SERVICE_FAIL","CREATE_GROUP_SERVICE_SUCCESS","CREATE_GROUP_SERVICE_FAIL","UPDATE_GROUP_SERVICE_SUCCESS","UPDATE_GROUP_SERVICE_FAIL","SERVICE","CHANGE_STATUS_SERVICE_SUCCESS","CHANGE_STATUS_SERVICE_FAIL","DELETE_SERVICE_SUCCESS","DELETE_SERVICE_FAIL","CREATE_SERVICE_SUCCESS","CREATE_SERVICE_FAIL","UPDATE_SERVICE_SUCCESS","UPDATE_SERVICE_FAIL","DEPARTMENT_TYPE","CHANGE_STATUS_DEPARTMENT_TYPE_SUCCESS","CHANGE_STATUS_DEPARTMENT_TYPE_FAIL","DELETE_DEPARTMENT_TYPE_SUCCESS","DELETE_DEPARTMENT_TYPE_FAIL","CREATE_DEPARTMENT_TYPE_SUCCESS","CREATE_DEPARTMENT_TYPE_FAIL","UPDATE_DEPARTMENT_TYPE_SUCCESS","UPDATE_DEPARTMENT_TYPE_FAIL","DEPARTMENT","CHANGE_STATUS_DEPARTMENT_SUCCESS","CHANGE_STATUS_DEPARTMENT_FAIL","DELETE_DEPARTMENT_SUCCESS","DELETE_DEPARTMENT_FAIL","CREATE_DEPARTMENT_SUCCESS","CREATE_DEPARTMENT_FAIL","UPDATE_DEPARTMENT_SUCCESS","UPDATE_DEPARTMENT_FAIL","FACULTY","CHANGE_STATUS_FACULTY_SUCCESS","CHANGE_STATUS_FACULTY_FAIL","DELETE_FACULTY_SUCCESS","DELETE_FACULTY_FAIL","CREATE_FACULTY_SUCCESS","CREATE_FACULTY_FAIL","UPDATE_FACULTY_SUCCESS","UPDATE_FACULTY_FAIL","tableValue","tableGroupService","ButtonTitle","ModalConfirm","other","rejectMethod","confirm","setConfirm","DialogKey","DELETE_PATIENT","CHANGE_STATUS_PATIENT","UPDATE","SAVE","setConfirmTitle","buttonTitle","onExited","bodyText","endPoint","APP_CONSTANT","API","ENDPOINT","request","configApiRouteWithManageType","manageType","Service","Department","modifyRequestBody","manageTypeInfo","requestBody","display_order","is_system","isSystem","list_value_type_id","settingTypeId","list_value_id","listValueId","apiUrl","get","getManageType","changeManageTypeActive","post","createManageType","updateManageType","deleteManageType","deletetType","checkUniqueCode","checkType","Code","Id","getSpecialist","specialistCode","this","HttpRequest","DilogTitle","PatientStatus","ButtonToolTip","LocationTypes"],"mappings":"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","file":"static/js/11.b4e42dd7.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as AuthSlice from 'store/auth/shared/slice';\r\nimport * as AuthSelector from 'store/auth/shared/selectors';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AuthSaga } from 'store/auth/shared/saga';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { EMPTY_MESSAGE } from 'store/common/constants/common.constant';\r\nimport { ModalFindUser } from './ModalFindUser';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHeaderSort from 'app/components/TableHeaderSort';\r\n\r\nexport const colUserInRole: any[] = [\r\n  { id: 'no', label: '#', minWidth: 50 },\r\n  { id: 'user_name', label: 'Tên đăng nhập', minWidth: 120 },\r\n  { id: 'code', label: 'Mã nhân viên', minWidth: 120 },\r\n  { id: 'name', label: 'Tên nhân viên', minWidth: 120 },\r\n  { id: 'is_active', label: 'Trạng thái', minWidth: 120 },\r\n  { id: 'actions', label: 'Xoá người dùng', minWidth: 200 },\r\n];\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: '300px',\r\n    maxHeight: '80vh',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport function ModalUserInRole({ open, onClose }) {\r\n  useInjectReducer({ key: AuthSlice.sliceKey, reducer: AuthSlice.reducer });\r\n  useInjectSaga({ key: AuthSlice.sliceKey, saga: AuthSaga });\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const role = useSelector(AuthSelector.selectRoleEditing);\r\n  const [order, setOrder] = useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = useState<any>('');\r\n  const [search, setSearch] = useState<boolean>(false);\r\n\r\n  const deleteUserInRole = (id: string) => {\r\n    const activeUsers: string[] = role.users.filter(user => user.id !== id).map(({ id }) => id);\r\n    dispatch( AuthSlice.actions.deleteUserInRole({\r\n      id: role.id,\r\n      activeUser: activeUsers.length ? activeUsers : [],\r\n      inActiveUser: [id],\r\n    }));\r\n  };\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableHeaderSort\r\n        classes={classes}\r\n        onRequestSort={handleRequestSort}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        columns={colUserInRole}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (_.isEmpty(role) || !role.users.length) {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={colUserInRole.length}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n    const tableData: any[] = AppHelper.stableSort(\r\n      role.users,\r\n      AppHelper.getComparator(order, orderBy),\r\n    );\r\n    return tableData.map((row, idx) => {\r\n      const user = _.cloneDeep(row);\r\n      return (\r\n        <>\r\n        <TableRow key={row.id}>\r\n          {colUserInRole.map(column => {\r\n            const value = user[column.id];\r\n            if (column.id === 'no') {\r\n              return <TableCell key={column.id}>{idx + 1}</TableCell>;\r\n            }\r\n            if (column.id === 'is_active') {\r\n              return (\r\n                <TableCell key={column.id}>\r\n                  <Tooltip title=\"\" enterDelay={500} leaveDelay={200}>\r\n                    <i\r\n                      style={{\r\n                        color: value ? '#4caf50' : '#ff0000',\r\n                        fontSize: '16px',\r\n                      }}\r\n                      className={`fa fa-${value ? 'check' : 'times'}-circle`}\r\n                      aria-hidden=\"true\"\r\n                    ></i>\r\n                  </Tooltip>\r\n                </TableCell>\r\n              );\r\n            }\r\n            if (column.id === 'actions') {\r\n              return (\r\n                <TableCell key={column.id}>\r\n                   <Tooltip title={'Xoá'} enterDelay={500} leaveDelay={100} onClick={() => {\r\n                     deleteUserInRole(user.id);\r\n                     setSearch(false);\r\n                   }}>\r\n                    <button\r\n                      className=\"btn btn-danger btn-xs mx-2\"\r\n                    >\r\n                      <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                  </Tooltip>\r\n                </TableCell>\r\n              );\r\n            }\r\n            return (\r\n              <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n            );\r\n          })}\r\n        </TableRow>\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth={'md'}\r\n      open={open}\r\n      onClose={onClose}\r\n      disableBackdropClick\r\n    >\r\n      <DialogContent>\r\n        {search && (\r\n          <ModalFindUser\r\n            open={true}\r\n            onClose={() => setSearch(false)}\r\n          />\r\n        )}\r\n        <form onSubmit={(e: React.FormEvent) => e.preventDefault()}>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 d-flex justify-content-between pb-3\">\r\n              <h4 className=\"d-block pb-2\">Danh Sách Người Dùng Quyền - { role ? role.description : '' }</h4>\r\n            </div>\r\n            <div className=\"col-sm-12 p-0\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </div>\r\n            <div className=\"col-sm-12 pt-2 d-flex justify-content-end\">\r\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n              <button type=\"button\" className=\"btn btn-primary ml-3\" onClick={() => setSearch(true)}>Thêm người dùng</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport { blue, green } from '@material-ui/core/colors';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Order } from 'utils/app.helper';\r\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nexport const useStyles = makeStyles({\r\n  th: {\r\n    fontWeight: 600,\r\n    textTransform: 'capitalize',\r\n    backgound: 'rgb(26, 138, 226)',\r\n    color: '#fff',\r\n    '& .MuiTableSortLabel-active': {\r\n      color: '#0000008a',\r\n      '& .MuiTableSortLabel-icon': {\r\n        color: '#0000008a !important',\r\n      },\r\n    },\r\n    '& .MuiTableSortLabel-root:hover': {\r\n      color: '#0000008a',\r\n    },\r\n  },\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: '300px',\r\n    maxHeight: '80vh',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nexport interface TableSortCheckProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof any,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n  rowCount: number;\r\n  cols: any[];\r\n}\r\n\r\nexport const BlueCheckbox = withStyles({\r\n  root: {\r\n    color: blue[400],\r\n    '&$checked': {\r\n      color: blue[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport const GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport default function TableSortCheck(props: TableSortCheckProps) {\r\n  const classes = useStyles();\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n    cols,\r\n  } = props;\r\n  const createSortHandler = (property: keyof any) => (\r\n    event: React.MouseEvent<unknown>,\r\n  ) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell\r\n        padding=\"checkbox\"\r\n        className={classes.th}\r\n        style={{\r\n          backgroundColor: 'rgb(26, 138, 226)',\r\n          color: '#fff',\r\n          padding: '16px',\r\n        }}\r\n      >\r\n        <GreenCheckbox\r\n          indeterminate={numSelected > 0 && numSelected < rowCount}\r\n          checked={rowCount > 0 && numSelected === rowCount}\r\n          onChange={onSelectAllClick}\r\n          inputProps={{ 'aria-label': 'select all desserts' }}\r\n        />\r\n      </TableCell>\r\n      {cols.map(headCell => (\r\n        <TableCell\r\n          className={classes.th}\r\n          key={headCell.id}\r\n          align={headCell.numeric ? 'right' : 'left'}\r\n          padding={headCell.disablePadding ? 'none' : 'default'}\r\n          sortDirection={orderBy === headCell.id ? order : false}\r\n          style={{\r\n            minWidth: headCell.minWidth,\r\n            backgroundColor: '#0092de',\r\n            color: '#fff',\r\n            padding: '16px',\r\n          }}\r\n        >\r\n          <TableSortLabel\r\n            active={orderBy === headCell.id}\r\n            direction={orderBy === headCell.id ? order : 'asc'}\r\n            onClick={createSortHandler(headCell.id)}\r\n          >\r\n            {headCell.label}\r\n            {orderBy === headCell.id ? (\r\n              <span className={classes.visuallyHidden}>\r\n                {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n              </span>\r\n            ) : null}\r\n          </TableSortLabel>\r\n        </TableCell>\r\n      ))}\r\n    </TableRow>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as AuthSlice from 'store/auth/shared/slice';\r\nimport * as AuthSelector from 'store/auth/shared/selectors';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AuthSaga } from 'store/auth/shared/saga';\r\nimport { AppHelper, Order } from 'utils/app.helper';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport {\r\n  EMPTY_MESSAGE,\r\n  rowsPerArray,\r\n} from 'store/common/constants/common.constant';\r\nimport { useStyles } from './ModalUserInRole';\r\nimport { useForm } from 'react-hook-form';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortCheck, { BlueCheckbox } from 'app/components/TableSortCheck';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonSearch = styled.button`\r\n  color: red;\r\n  background: #fff;\r\n  height: 37px;\r\n  border: #ccc;\r\n`;\r\n\r\nexport const colUserInRole: any[] = [\r\n  { id: 'user_name', label: 'Tên đăng nhập', minWidth: 120 },\r\n  { id: 'code', label: 'Mã nhân viên', minWidth: 120 },\r\n  { id: 'full_name', label: 'Tên nhân viên', minWidth: 120 },\r\n  { id: 'is_active', label: 'Trạng thái', minWidth: 120 },\r\n];\r\n\r\nexport function ModalFindUser({ open, onClose }) {\r\n  useInjectReducer({ key: AuthSlice.sliceKey, reducer: AuthSlice.reducer });\r\n  useInjectSaga({ key: AuthSlice.sliceKey, saga: AuthSaga });\r\n  const users = useSelector(AuthSelector.selectUsers);\r\n  const role = useSelector(AuthSelector.selectRoleEditing);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = useState<any>('');\r\n  const [selected, setSelected] = useState<string[]>([]);\r\n  const { handleSubmit, register, getValues } = useForm();\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  useEffect(() => {\r\n    dispatch(AuthSlice.actions.getListUser({}));\r\n    return () => {\r\n      dispatch(AuthSlice.actions.clearUsers());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSelected([]);\r\n  }, [users]);\r\n\r\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const renderSearch = () => {\r\n    return (\r\n      <form\r\n        className=\"btn-group d-flex align-items-center\"\r\n        onSubmit={handleSubmit(submitSearch)}\r\n      >\r\n        <label className=\"m-0\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Tìm Người Dùng\"\r\n            className=\"form-control form-control-sm\"\r\n            aria-controls=\"titleTable\"\r\n            ref={register()}\r\n            name=\"fullName\"\r\n          />\r\n        </label>\r\n        <ButtonSearch className=\"btn btn-info m-0 ml-2\" type=\"submit\">\r\n          <i className=\"fa fa-search\" />\r\n        </ButtonSearch>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const submitSearch = ({ fullName }) => {\r\n    dispatch(\r\n      AuthSlice.actions.getListUser({\r\n        fullName,\r\n        pageNumber: 1,\r\n        pageSize: 10,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleRequestSort = (event, property: any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked && !_.isEmpty(users) && users.data.length) {\r\n      const newSelecteds = users.data.map((n: any) => n.id);\r\n      return setSelected(newSelecteds);\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const renderColumns = () => {\r\n    return (\r\n      <TableSortCheck\r\n        cols={colUserInRole}\r\n        numSelected={selected.length}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        onSelectAllClick={handleSelectAllClick}\r\n        onRequestSort={handleRequestSort}\r\n        rowCount={\r\n          _.isEmpty(users) || !users.data.length ? 10 : users.data.length\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, pageNumber: number) => {\r\n    let newPagi = {\r\n      pageSize: users.page_size,\r\n      pageNumber: pageNumber + 1,\r\n      search: getValues('fullName'),\r\n    };\r\n    dispatch(AuthSlice.actions.getListUser(newPagi));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    let newPagi = {\r\n      pageSize: +event.target.value,\r\n      pageNumber: 1,\r\n      fullName: getValues('fullName'),\r\n    };\r\n    dispatch(AuthSlice.actions.getListUser(newPagi));\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(users) && users.data.length) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          labelRowsPerPage=\"Hiển Thị\"\r\n          count={users.total_records}\r\n          page={users?.page_number - 1}\r\n          rowsPerPage={users?.page_size}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (_.isEmpty(users) || !users.data.length) {\r\n      return (\r\n        <TableRow>\r\n          <TableCell\r\n            className=\"w-100\"\r\n            align=\"center\"\r\n            colSpan={colUserInRole.length + 1}\r\n          >\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n    const tableData: any[] = AppHelper.stableSort(\r\n      users.data,\r\n      AppHelper.getComparator(order, orderBy),\r\n    );\r\n    return tableData.map((row, idx) => {\r\n      const user = _.cloneDeep(row);\r\n      const isItemSelected = isSelected(user.id);\r\n      return (\r\n        <>\r\n          <TableRow\r\n            key={row.id}\r\n            hover\r\n            onClick={event => handleClick(event, user.id)}\r\n            role=\"checkbox\"\r\n            aria-checked={isItemSelected}\r\n            tabIndex={-1}\r\n            selected={isItemSelected}\r\n          >\r\n            <TableCell padding=\"checkbox\" align=\"center\">\r\n              <BlueCheckbox\r\n                checked={isItemSelected}\r\n                inputProps={{ 'aria-labelledby': 'id' }}\r\n              />\r\n            </TableCell>\r\n            {colUserInRole.map(column => {\r\n              const value = user[column.id];\r\n              if (column.id === 'is_active') {\r\n                return (\r\n                  <TableCell key={column.id} align=\"center\">\r\n                    <Tooltip title=\"\" enterDelay={500} leaveDelay={200}>\r\n                      <i\r\n                        style={{\r\n                          color: value ? '#4caf50' : '#ff0000',\r\n                          fontSize: '16px',\r\n                        }}\r\n                        className={`fa fa-${value ? 'check' : 'times'}-circle`}\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                );\r\n              }\r\n              return (\r\n                <TableCell key={column.id}>{value ? value : '-'}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  const addUserToRole = async () => {\r\n    if (!selected.length) {\r\n      return console.log('Error');\r\n    }\r\n    const currentUser = role.users;\r\n    if (!currentUser || !currentUser.length) {\r\n      await dispatch(\r\n        AuthSlice.actions.addUserInRole({\r\n          id: role.id,\r\n          activeUser: selected,\r\n          inActiveUser: [],\r\n        }),\r\n      );\r\n    } else {\r\n      await dispatch(\r\n        AuthSlice.actions.addUserInRole({\r\n          id: role.id,\r\n          activeUser: [...selected, ...currentUser.map(({ id }) => id)],\r\n          inActiveUser: [],\r\n        }),\r\n      );\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth={'md'}\r\n      open={open}\r\n      onClose={onClose}\r\n      disableBackdropClick\r\n    >\r\n      <DialogContent>\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 d-flex justify-content-between pb-3\">\r\n              <h4 className=\"d-block pb-2\">Danh Sách Người Dùng</h4>\r\n              {renderSearch()}\r\n            </div>\r\n            <div className=\"col-sm-12 p-0\">\r\n              <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>{renderColumns()}</TableHead>\r\n                    <TableBody>{renderTable()}</TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {renderPagination()}\r\n              </Paper>\r\n            </div>\r\n            <div className=\"col-sm-12 pt-2 d-flex justify-content-end mt-3\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                onClick={onClose}\r\n              >\r\n                Đóng\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary ml-3\"\r\n                onClick={addUserToRole}\r\n              >\r\n                Thêm vào quyền {role.name}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    paddingBottom: 0,\r\n    '& h2': {\r\n      fontSize: '1.3rem !important',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n});\r\n\r\ninterface ModalProps {\r\n  id: string;\r\n  title: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  confirmMethod: (id?: string) => any;\r\n  rejectMethod?: (arg: any) => any;\r\n}\r\n\r\nexport const ConfirmDeleteRole = ({\r\n  id,\r\n  title,\r\n  open,\r\n  onClose,\r\n  confirmMethod,\r\n}: ModalProps) => {\r\n  const classes = useStyles();\r\n\r\n  const onOK = () => {\r\n    confirmMethod(id);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      disableBackdropClick={true}\r\n    >\r\n      <DialogTitle classes={classes}>{'Thông báo xác nhận'}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {title}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={onClose}\r\n          color=\"secondary\"\r\n          classes={{ root: 'btn-default btn-danger' }}\r\n        >\r\n          Đóng\r\n        </Button>\r\n        <Button\r\n          onClick={onOK}\r\n          color=\"primary\"\r\n          classes={{ root: 'btn-default btn-primary t-btn-primary' }}\r\n        >\r\n          Xóa\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as AuthSlice from 'store/auth/shared/slice';\r\nimport * as _ from 'lodash';\r\nimport * as AuthSelectors from 'store/auth/shared/selectors';\r\nimport { Dialog, DialogContent } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useInjectReducer, useInjectSaga } from 'redux-injectors';\r\nimport { AuthSaga } from 'store/auth/shared/saga';\r\nimport {\r\n  DEFAULT_FORMAT_INPUT_DATE,\r\n  DEFAULT_ID,\r\n} from 'store/common/constants/common.constant';\r\nimport { configResponse } from 'utils/request';\r\nimport { AuthHttp } from 'store/auth/services/auth.http';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport AppLoading from 'app/components/Loading';\r\n\r\nenum FormKey {\r\n  USER = 'userName',\r\n  CODE = 'code',\r\n  NAME = 'fullName',\r\n  SEX = 'sex',\r\n  BITRH = 'birthdate',\r\n  EMAIL = 'email',\r\n  PHONE = 'phone',\r\n  POS = 'position',\r\n  TITLE = 'title',\r\n  ACTIVE = 'isActive',\r\n}\r\n\r\nexport function ModalHRM({ open, onClose }) {\r\n  const personalHttp = new AuthHttp();\r\n  const dateUtil = new DateFnsUtils();\r\n  const newDate = dateUtil.format(new Date(), DEFAULT_FORMAT_INPUT_DATE);\r\n  useInjectReducer({ key: AuthSlice.sliceKey, reducer: AuthSlice.reducer });\r\n  useInjectSaga({ key: AuthSlice.sliceKey, saga: AuthSaga });\r\n  const positions = useSelector(AuthSelectors.selectPositions);\r\n  const titles = useSelector(AuthSelectors.selectTitles);\r\n  const initUser = useSelector(AuthSelectors.selectUserFind);\r\n  const loading = useSelector(AuthSelectors.selectLoading);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    setError,\r\n    clearErrors,\r\n    setValue,\r\n  } = useForm();\r\n  const [birthDay, setBirthDay] = React.useState<any>(newDate);\r\n  const [errPhone, setErrPhone] = React.useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(AuthSlice.actions.clearData());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function initFormValue(user) {\r\n      if (_.isEmpty(user)) return;\r\n      setValue(FormKey.USER, user.user_name);\r\n      setValue(FormKey.CODE, user.code);\r\n      setValue(FormKey.NAME, user.full_name);\r\n      setValue(FormKey.SEX, user.sex);\r\n      setBirthDay(dateUtil.format(new Date(user.birthdate), 'yyyy-MM-dd'));\r\n      setValue(FormKey.EMAIL, user.email);\r\n      setValue(FormKey.PHONE, user.phone);\r\n      setValue(FormKey.POS, user.position);\r\n      setValue(FormKey.TITLE, user.title);\r\n      setValue(FormKey.ACTIVE, user.is_active);\r\n    }\r\n    if (!_.isEmpty(initUser)) {\r\n      setTimeout(() => initFormValue(initUser));\r\n    }\r\n  }, [initUser]);\r\n\r\n  const onSubmit = async ({ code, userName, ...values }: any) => {\r\n    try {\r\n      let isCheckCode: any = {};\r\n      let isCheckName: any = {};\r\n      if (\r\n        _.isEmpty(initUser) ||\r\n        (!_.isEmpty(initUser) && code !== initUser.code)\r\n      ) {\r\n        const checkCodeRes = await personalHttp.checkCodePersonnel({\r\n          id: DEFAULT_ID,\r\n          code,\r\n        });\r\n        isCheckCode = await configResponse(checkCodeRes);\r\n      }\r\n      if (\r\n        _.isEmpty(initUser) ||\r\n        (!_.isEmpty(initUser) && userName !== initUser.user_name)\r\n      ) {\r\n        const checkNameRes = await personalHttp.checkUserNamePersonnel({\r\n          id: DEFAULT_ID,\r\n          userName,\r\n        });\r\n        isCheckName = await configResponse(checkNameRes);\r\n      }\r\n      if (_.isBoolean(isCheckName)) {\r\n        setError(FormKey.USER, {\r\n          type: 'exits',\r\n          message: 'Tên đăng nhập đã tồn tại',\r\n        });\r\n      }\r\n      if (_.isBoolean(isCheckCode)) {\r\n        setError(FormKey.CODE, {\r\n          type: 'exits',\r\n          message: 'Mã nhân viên đã tồn tại',\r\n        });\r\n      }\r\n      if (!_.isBoolean(isCheckName) && !_.isBoolean(isCheckCode)) {\r\n        if (_.isEmpty(initUser)) {\r\n          dispatch(\r\n            AuthSlice.actions.createPersonnel({\r\n              ...values,\r\n              birthdate: birthDay,\r\n              code,\r\n              userName,\r\n            }),\r\n          );\r\n        } else {\r\n          dispatch(\r\n            AuthSlice.actions.updatePersonnel({\r\n              ...values,\r\n              code,\r\n              userName,\r\n              birthdate: birthDay,\r\n              id: initUser.id,\r\n            }),\r\n          );\r\n        }\r\n      }\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      disableBackdropClick={true}\r\n      scroll={'body'}\r\n      aria-labelledby=\"scroll-dialog-title\"\r\n      aria-describedby=\"scroll-dialog-description\"\r\n    >\r\n      <DialogContent>\r\n        <div className=\"modal_personnel\">\r\n          <div className=\"personnel__title\">\r\n            <h3>TẠO NHÂN VIÊN</h3>\r\n          </div>\r\n          <div className=\"personnel__container\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label htmlFor=\"\">Tên đăng nhập</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Tên đăng nhập\"\r\n                    name={FormKey.USER}\r\n                    ref={register({ required: true })}\r\n                    onChange={() => clearErrors(FormKey.USER)}\r\n                  />\r\n                  {errors[FormKey.USER] &&\r\n                    errors[FormKey.USER]?.type === 'required' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        Vui lòng nhập tên đăng nhập\r\n                      </span>\r\n                    )}\r\n                  {errors[FormKey.USER] &&\r\n                    errors[FormKey.USER]?.type === 'exits' &&\r\n                    errors[FormKey.USER].message && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        {errors[FormKey.USER].message}\r\n                      </span>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label htmlFor=\"\">Mã nhân viên</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Mã nhân viên\"\r\n                    name={FormKey.CODE}\r\n                    ref={register({ required: true })}\r\n                  />\r\n                  {errors[FormKey.CODE] &&\r\n                    errors[FormKey.CODE]?.type === 'required' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        Vui lòng nhập mã nhân viên\r\n                      </span>\r\n                    )}\r\n                  {errors[FormKey.CODE] &&\r\n                    errors[FormKey.CODE]?.type === 'exits' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        {errors[FormKey.CODE].message}\r\n                      </span>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label htmlFor=\"\">Họ và tên</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Họ và tên\"\r\n                    name={FormKey.NAME}\r\n                    ref={register({\r\n                      required: true,\r\n                      maxLength: 50,\r\n                    })}\r\n                  />\r\n                  {errors[FormKey.NAME] &&\r\n                    errors[FormKey.NAME]?.type === 'required' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        Vui lòng nhập họ và tên nhân viên\r\n                      </span>\r\n                    )}\r\n                  {errors[FormKey.NAME] &&\r\n                    errors[FormKey.NAME]?.type === 'pattern' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        Vui lòng không nhập số\r\n                      </span>\r\n                    )}\r\n                  {errors[FormKey.NAME] &&\r\n                    errors[FormKey.NAME]?.type === 'maxLength' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        Độ dài không quá 50 ký tự\r\n                      </span>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label>Giới tính</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name={FormKey.SEX}\r\n                    ref={register({ required: true })}\r\n                  >\r\n                    <option value={1}>Nam</option>\r\n                    <option value={0}>Nữ</option>\r\n                  </select>\r\n                  {errors[FormKey.SEX] &&\r\n                    errors[FormKey.SEX]?.type === 'required' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        Vui lòng chọn giới tính\r\n                      </span>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label htmlFor=\"\">Ngày sinh</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name={FormKey.BITRH}\r\n                    placeholder=\"Ngày sinh\"\r\n                    value={birthDay}\r\n                    max={newDate}\r\n                    onChange={e => setBirthDay(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label htmlFor=\"\">Email</label>\r\n                  <input\r\n                    name={FormKey.EMAIL}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Email\"\r\n                    ref={register({ required: true })}\r\n                  />\r\n                  {errors[FormKey.EMAIL] &&\r\n                    errors[FormKey.EMAIL]?.type === 'required' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        Vui lòng nhập email nhân viên\r\n                      </span>\r\n                    )}\r\n                  {errors[FormKey.EMAIL] &&\r\n                    errors[FormKey.EMAIL]?.type === 'pattern' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        Vui lòng nhập đúng định dạng email\r\n                      </span>\r\n                    )}\r\n                  {errors[FormKey.EMAIL] &&\r\n                    errors[FormKey.EMAIL]?.type === 'maxLength' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        Độ dài email không quá 50 ký tự\r\n                      </span>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label htmlFor=\"\">Số điện thoại</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Số điện thoại\"\r\n                    name={FormKey.PHONE}\r\n                    ref={register({\r\n                      required: true,\r\n                      validate: phone => {\r\n                        if (!phone || phone.length !== 10) return false;\r\n                        return new RegExp(/^[0-9]+$/).test(phone);\r\n                      },\r\n                    })}\r\n                  />\r\n                  {errors[FormKey.PHONE] &&\r\n                    errors[FormKey.PHONE]?.type === 'required' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        Vui lòng nhập số điện thoại\r\n                      </span>\r\n                    )}\r\n                  {errors[FormKey.PHONE] &&\r\n                    errors[FormKey.PHONE]?.type === 'validate' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        Vui lòng nhập đủ 10 số\r\n                      </span>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label htmlFor=\"\">Chức danh</label>\r\n                  <select\r\n                    name={FormKey.TITLE}\r\n                    className=\"form-control\"\r\n                    ref={register({ required: true })}\r\n                  >\r\n                    <option value=\"\">Vui lòng chọn...</option>\r\n                    {!_.isEmpty(titles) &&\r\n                      titles.map((opt, index) => (\r\n                        <option value={opt.id} key={index}>\r\n                          {opt.description}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                  {errors[FormKey.TITLE] &&\r\n                    errors[FormKey.TITLE]?.type === 'required' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        Vui lòng chọn chức danh\r\n                      </span>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label htmlFor=\"\">Chức vụ</label>\r\n                  <select\r\n                    name={FormKey.POS}\r\n                    className=\"form-control\"\r\n                    ref={register({ required: true })}\r\n                  >\r\n                    <option value=\"\">Vui lòng chọn...</option>\r\n                    {!_.isEmpty(positions) &&\r\n                      positions.map((opt, index) => (\r\n                        <option value={opt.id} key={index}>\r\n                          {opt.description}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                  {errors[FormKey.POS] &&\r\n                    errors[FormKey.POS]?.type === 'required' && (\r\n                      <span style={{ color: '#fb0606' }}>\r\n                        Vui lòng chọn chức vụ\r\n                      </span>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-md-12 form-group\">\r\n                  <input\r\n                    className=\"form-check-input ml-0 mt-2\"\r\n                    type=\"checkbox\"\r\n                    name={FormKey.ACTIVE}\r\n                    id=\"active\"\r\n                    ref={register()}\r\n                    defaultChecked\r\n                  />\r\n                  <label\r\n                    className=\"form-check-label\"\r\n                    htmlFor=\"active\"\r\n                    style={{ paddingLeft: '20px' }}\r\n                  >\r\n                    Hoạt dộng\r\n                  </label>\r\n                </div>\r\n                <div className=\"form-group col-md-12 d-flex justify-content-end\">\r\n                  <input\r\n                    type=\"button\"\r\n                    onClick={onClose}\r\n                    className=\"btn btn-secondary\"\r\n                    value=\"Đóng\"\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary ml-3\"\r\n                    value=\"Lưu thay đổi\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          {loading ? <AppLoading loading={true} /> : null}\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n// eslint-disable react-hooks/exhaustive-deps\r\nimport React, { useState, useEffect, useReducer } from 'react';\r\nimport * as AuthSelectors from 'store/auth/shared/selectors';\r\nimport * as AuthSlice from 'store/auth/shared/slice';\r\nimport * as _ from 'lodash';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ModalHRM } from '../components/ModalHRM';\r\nimport { AuthSaga } from 'store/auth/shared/saga';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport {\r\n  ButtonToolTipPersonnel,\r\n  DialogKeyPersonnel,\r\n  DialogTitlePersonnel,\r\n  PersonnelStatus,\r\n} from 'store/auth/constants/auth.constant';\r\nimport {\r\n  DEFAULT_FORMAT_DATE,\r\n  EMPTY_MESSAGE,\r\n  rowsPerArray,\r\n} from 'store/common/constants/common.constant';\r\nimport { ModalConfirm } from 'app/components/Modal/Confirm';\r\nimport { useSnackbar } from 'notistack';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { RESPONSE_MESSAGE } from 'store/auth/constants/auth.constant';\r\nimport { SettingHttp } from 'store/setting/services/setting.http';\r\nimport { SettingManageType } from 'store/setting/constants/setting.constant';\r\nimport { RootStore } from 'store/configureStore';\r\nimport { Unsubscribe } from 'redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport AppLoading from 'app/components/Loading';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nexport const colsHRM = [\r\n  { id: '#', lable: 'No', minWidth: 100 },\r\n  { id: 'actions', lable: 'Chức năng', minWidth: 200 },\r\n  { id: 'is_active', lable: 'Trạng thái', minWidth: 100 },\r\n  { id: 'user_name', lable: 'Tên đăng nhập', minWidth: 200 },\r\n  { id: 'code', lable: 'Mã nhân viên', minWidth: 200 },\r\n  { id: 'full_name', lable: 'Tên nhân viên', minWidth: 250 },\r\n  { id: 'phone', lable: 'Số điện thoại', minWidth: 200 },\r\n  { id: 'sex', lable: 'Giới tính', minWidth: 100 },\r\n  { id: 'birthdate', lable: 'Ngày sinh', minWidth: 120 },\r\n  { id: 'title_description', lable: 'Chức danh', minWidth: 300 },\r\n  { id: 'position_description', lable: 'Chức vụ', minWidth: 300 },\r\n  { id: 'data_type', lable: 'Loại dữ liệu', minWidth: 100 },\r\n];\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    container: {\r\n      minHeight: 400,\r\n    },\r\n    td: {\r\n      fontSize: '1.1rem',\r\n      fontFamily: 'Roboto, sans-serif',\r\n    },\r\n  }),\r\n);\r\nexport interface AlertConfig {\r\n  isOpen: boolean;\r\n  autoHide: number;\r\n}\r\n\r\nconst defaultPagi = {\r\n  pageNumber: 1,\r\n  pageSize: 10,\r\n};\r\n\r\nexport function HRM() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  const settingHttp = new SettingHttp();\r\n  const classes = useStyles();\r\n  const dateUtil = new DateFnsUtils();\r\n  useInjectReducer({ key: AuthSlice.sliceKey, reducer: AuthSlice.reducer });\r\n  useInjectSaga({ key: AuthSlice.sliceKey, saga: AuthSaga });\r\n  const users = useSelector(AuthSelectors.selectUsers);\r\n  const loading = useSelector(AuthSelectors.selectLoading);\r\n  const error = useSelector(AuthSelectors.selectError);\r\n  const dispatch = useDispatch();\r\n  const { handleSubmit, register, getValues, reset } = useForm();\r\n  const [isConfirmDelete, setIsConfirmDelete] = useState(false);\r\n  const [isConfirmChangeStatus, setIsConfirmChangeStatus] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [pagi, setPagi] = useState(defaultPagi);\r\n  const [selectPersonnel, setSelectPersonnel] = useState({});\r\n  const [selectIsActive, setSelectIsActive] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function getTitlePostion() {\r\n      try {\r\n        const response: Promise<any>[] = await Promise.all([\r\n          settingHttp.getAllManageType(SettingManageType.Title),\r\n          settingHttp.getAllManageType(SettingManageType.Position),\r\n        ]);\r\n        const [\r\n          titles,\r\n          positions,\r\n        ]: any[] = await response.map(({ data: { result } }: any) =>\r\n          _.get(result, 'data'),\r\n        );\r\n        if (titles.length && positions.length) {\r\n          dispatch(AuthSlice.actions.setUserTitles(titles));\r\n          dispatch(AuthSlice.actions.setUserPositions(positions));\r\n        }\r\n      } catch (err) {\r\n        notifyController\r\n          .setNotifyMessage(_.get(error, 'message'))\r\n          .setFailNotify();\r\n      }\r\n    }\r\n    const storeSub$: Unsubscribe = RootStore.subscribe(() => {\r\n      const { type, payload } = RootStore.getState().lastAction;\r\n      switch (type) {\r\n        case AuthSlice.actions.getUserByIdSuccess.type:\r\n          setOpenModal(true);\r\n          break;\r\n        case AuthSlice.actions.createPersonnelSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(RESPONSE_MESSAGE.CREATE_PERSONNEL_SUCCESS)\r\n            .setSuccessNotify();\r\n          setOpenModal(false);\r\n          recallListUser(pagi);\r\n          break;\r\n        case AuthSlice.actions.updatePersonnelSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(RESPONSE_MESSAGE.UPDATE_PERSONNEL_SUCCESS)\r\n            .setSuccessNotify();\r\n          setOpenModal(false);\r\n          recallListUser(pagi);\r\n          break;\r\n        case AuthSlice.actions.changeActivePersonnelSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(RESPONSE_MESSAGE.CHANGE_ACTIVE_SUCCESS)\r\n            .setSuccessNotify();\r\n          break;\r\n        case AuthSlice.actions.deletePersonnelSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(RESPONSE_MESSAGE.DELETE_MESSAGE_SUCCESS)\r\n            .setSuccessNotify();\r\n          recallListUser(pagi);\r\n          break;\r\n        case AuthSlice.actions.deletePersonnelFail.type:\r\n          notifyController\r\n            .setNotifyMessage(\r\n              payload ? payload : RESPONSE_MESSAGE.DELETE_MESSAGE_FAIL,\r\n            )\r\n            .setFailNotify();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    getTitlePostion();\r\n    dispatch(AuthSlice.actions.getListUser(pagi));\r\n    return () => {\r\n      storeSub$();\r\n    };\r\n  }, []);\r\n\r\n  const recallListUser = (newPagi: any) => {\r\n    setPagi(newPagi);\r\n    dispatch(\r\n      AuthSlice.actions.getListUser({\r\n        ...newPagi,\r\n        fullName: getValues('fullName') ? getValues('fullName') : '',\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleDialogControl = (key, personnel?, isActive?) => {\r\n    setSelectPersonnel(personnel);\r\n    setSelectIsActive(isActive);\r\n    switch (key) {\r\n      case DialogKeyPersonnel.DELETE_PERSONNEL:\r\n        setIsConfirmDelete(true);\r\n        break;\r\n      case DialogKeyPersonnel.CHANGE_STATUS_PERSONNEL:\r\n        setIsConfirmChangeStatus(true);\r\n        break;\r\n      case DialogKeyPersonnel.CREATE_PERSONNEL:\r\n        setOpenModal(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const closeDialogControl = key => {\r\n    switch (key) {\r\n      case DialogKeyPersonnel.DELETE_PERSONNEL:\r\n        setIsConfirmDelete(false);\r\n        break;\r\n      case DialogKeyPersonnel.CHANGE_STATUS_PERSONNEL:\r\n        setIsConfirmChangeStatus(false);\r\n        break;\r\n      case DialogKeyPersonnel.CREATE_PERSONNEL:\r\n        setOpenModal(false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const renderColumns = () => (\r\n    <TableRow>\r\n      {colsHRM.map(column => (\r\n        <TableCell\r\n          key={column.id}\r\n          style={{\r\n            minWidth: column.minWidth,\r\n            background: '#1a8ae2',\r\n            color: '#fff',\r\n          }}\r\n        >\r\n          {column.lable}\r\n        </TableCell>\r\n      ))}\r\n    </TableRow>\r\n  );\r\n\r\n  const renderTable = () => {\r\n    if (_.isEmpty(users) || !users?.data?.length)\r\n      return (\r\n        <TableRow>\r\n          <TableCell className=\"w-100\" align=\"center\" colSpan={colsHRM.length}>\r\n            {EMPTY_MESSAGE}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    return users.data.map((personnel, _id) => (\r\n      <TableRow key={personnel.id} hover>\r\n        {colsHRM.map(column => {\r\n          const value = personnel[column.id];\r\n          if (column.id === '#') {\r\n            const { page_number, page_size } = users;\r\n            return (\r\n              <TableCell key={column.id} className={classes.td}>\r\n                {page_number === 1\r\n                  ? page_number + _id\r\n                  : _id + 1 + (page_number - 1) * page_size}\r\n              </TableCell>\r\n            );\r\n          }\r\n          if (column.id === 'birthdate') {\r\n            return (\r\n              <TableCell key={column.id} className={classes.td}>\r\n                {value\r\n                  ? dateUtil.format(new Date(value), DEFAULT_FORMAT_DATE)\r\n                  : ''}\r\n              </TableCell>\r\n            );\r\n          }\r\n          if (column.id === 'image_url') {\r\n            return (\r\n              <TableCell key={column.id} className={classes.td}>\r\n                {value ? (\r\n                  value\r\n                ) : (\r\n                  <i className=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                )}\r\n              </TableCell>\r\n            );\r\n          }\r\n          if (column.id === 'sex' && !_.isNull(value)) {\r\n            return (\r\n              <TableCell key={column.id} className={classes.td}>\r\n                {value && +value ? 'Nam' : 'Nữ'}\r\n              </TableCell>\r\n            );\r\n          }\r\n          if (column.id === 'is_active') {\r\n            return (\r\n              <TableCell key={column.id} className={classes.td}>\r\n                <Tooltip title=\"\" enterDelay={500} leaveDelay={200}>\r\n                  <i\r\n                    style={{\r\n                      color: value ? '#4caf50' : '#ff0000',\r\n                      fontSize: '16px',\r\n                    }}\r\n                    className={`fa fa-${value ? 'check' : 'times'}-circle`}\r\n                    aria-hidden=\"true\"\r\n                  ></i>\r\n                </Tooltip>\r\n              </TableCell>\r\n            );\r\n          }\r\n          if (column.id === 'actions') {\r\n            return (\r\n              <TableCell key={column.id} className={classes.td}>\r\n                <Tooltip\r\n                  title={ButtonToolTipPersonnel.CHANGE_STATUS}\r\n                  enterDelay={500}\r\n                  leaveDelay={100}\r\n                >\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    checked={Boolean(personnel.is_active)}\r\n                    onChange={({\r\n                      target: { checked },\r\n                    }: React.ChangeEvent<HTMLInputElement>) => {\r\n                      dispatch(\r\n                        AuthSlice.actions.changeActivePersonnel({\r\n                          id: personnel.id,\r\n                          isActive: checked,\r\n                        }),\r\n                      );\r\n                    }}\r\n                    name=\"IsActive\"\r\n                  />\r\n                </Tooltip>\r\n                <Tooltip\r\n                  title={ButtonToolTipPersonnel.EDIT}\r\n                  enterDelay={500}\r\n                  leaveDelay={100}\r\n                >\r\n                  <button\r\n                    className=\"btn btn-primary btn-xs\"\r\n                    onClick={() => {\r\n                      dispatch(AuthSlice.actions.getUserById(personnel.id));\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-pencil\"></i>\r\n                  </button>\r\n                </Tooltip>\r\n                <Tooltip\r\n                  title={ButtonToolTipPersonnel.DELETE}\r\n                  enterDelay={500}\r\n                  leaveDelay={100}\r\n                >\r\n                  <button\r\n                    className=\"btn btn-danger btn-xs mx-2\"\r\n                    onClick={() =>\r\n                      handleDialogControl(\r\n                        DialogKeyPersonnel.DELETE_PERSONNEL,\r\n                        personnel.id,\r\n                      )\r\n                    }\r\n                  >\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                  </button>\r\n                </Tooltip>\r\n              </TableCell>\r\n            );\r\n          }\r\n          return (\r\n            <TableCell key={column.id} className={classes.td}>\r\n              {value ? value : '-'}\r\n            </TableCell>\r\n          );\r\n        })}\r\n      </TableRow>\r\n    ));\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <form onSubmit={handleSubmit(() => recallListUser(defaultPagi))}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 form-group\">\r\n            <label>Tìm tên nhân sự</label>\r\n            <input\r\n              className=\"form-control mr-4\"\r\n              ref={register()}\r\n              placeholder=\"Tìm tên nhân sự\"\r\n              type=\"text\"\r\n              name=\"fullName\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <div className=\"btn-group\">\r\n              <button\r\n                className=\"btn btn-primary mr-3 btn__search\"\r\n                type=\"submit\"\r\n              >\r\n                Tìm kiếm <i className=\"fa fa-search\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 form-group export__examination text-right\">\r\n            <div className=\"btn-group ml-3\">\r\n              <button\r\n                type=\"reset\"\r\n                className=\"btn btn-warning btn__export\"\r\n                onClick={async () => {\r\n                  await reset();\r\n                  recallListUser(defaultPagi);\r\n                }}\r\n              >\r\n                Reset <i className=\"fa fa-refresh\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"btn-group ml-3\">\r\n              <button\r\n                className=\"btn btn-success mr-3 edit__add\"\r\n                type=\"button\"\r\n                onClick={() =>\r\n                  handleDialogControl(DialogKeyPersonnel.CREATE_PERSONNEL)\r\n                }\r\n              >\r\n                Thêm mới <i className=\"fa fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(users) && users.data.length) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          labelRowsPerPage=\"Hiển thị\"\r\n          count={users.total_records}\r\n          page={users.page_number - 1}\r\n          rowsPerPage={users.page_size}\r\n          onChangePage={(event: unknown, pageNumber: number) => {\r\n            let newPagi = Object.assign({}, pagi, {\r\n              pageNumber: pageNumber + 1,\r\n            });\r\n            recallListUser(newPagi);\r\n          }}\r\n          onChangeRowsPerPage={event => {\r\n            let newPagi = Object.assign({}, pagi, {\r\n              pageSize: +event.target.value,\r\n              pageNumber: 0,\r\n            });\r\n            recallListUser(newPagi);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <div className=\"tabbable-line\">\r\n          <ul className=\"nav customtab nav-tabs\" role=\"tablist\"></ul>\r\n          <div className=\"tab-content\">\r\n            <div className=\"tab-pane active fontawesome-demo\" id=\"tab1\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"card card-topline-red\">\r\n                    <div className=\"card-head\">\r\n                      <header></header>\r\n                      <div className=\"tools\"></div>\r\n                    </div>\r\n                    <div className=\"card-body \">\r\n                      {renderTableControl()}\r\n                      <Paper className={classes.root}>\r\n                        {loading ? <AppLoading loading={true} /> : null}\r\n                        <TableContainer className={classes.container}>\r\n                          <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>{renderColumns()}</TableHead>\r\n                            <TableBody>{renderTable()}</TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                        {renderPagination()}\r\n                      </Paper>\r\n                      <ModalConfirm\r\n                        title={DialogTitlePersonnel.DELETE_TITLE_PERSONNEL}\r\n                        keyConfirm={DialogKeyPersonnel.DELETE_PERSONNEL}\r\n                        open={isConfirmDelete}\r\n                        onClose={() =>\r\n                          closeDialogControl(\r\n                            DialogKeyPersonnel.DELETE_PERSONNEL,\r\n                          )\r\n                        }\r\n                        confirmMethod={() =>\r\n                          dispatch(\r\n                            AuthSlice.actions.deletePersonnel(selectPersonnel),\r\n                          )\r\n                        }\r\n                      ></ModalConfirm>\r\n                      {openModal ? (\r\n                        <ModalHRM\r\n                          open={openModal}\r\n                          onClose={() =>\r\n                            closeDialogControl(\r\n                              DialogKeyPersonnel.CREATE_PERSONNEL,\r\n                            )\r\n                          }\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport * as AuthSlice from 'store/auth/shared/slice';\r\nimport { useInjectReducer, useInjectSaga } from 'store/core/@reduxjs/redux-injectors';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AuthSaga } from 'store/auth/shared/saga';\r\nimport { useForm } from 'react-hook-form';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nexport function ModalAddRole({ open, onClose }) {\r\n  useInjectReducer({ key: AuthSlice.sliceKey, reducer: AuthSlice.reducer });\r\n  useInjectSaga({ key: AuthSlice.sliceKey, saga: AuthSaga });\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit((role) => {\r\n          dispatch(AuthSlice.actions.addRole(role))\r\n        })}>\r\n          <h4 className=\"modal-title pb-3\">Thêm Quyền truy cập</h4>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">\r\n                Mã\r\n              </label>\r\n              <input\r\n                id=\"code\"\r\n                type=\"text\"\r\n                className=\"form-control Code\"\r\n                name=\"code\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mã\" autoComplete=\"off\" />\r\n                {errors.code && errors.code?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập mã</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">\r\n              Tên\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control name\"\r\n                name=\"name\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Nhập Tên\" autoComplete=\"off\" />\r\n                {errors.name && errors.name?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Tên</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\">\r\n              Mô tả\r\n              </label>\r\n              <textarea\r\n                id=\"description\"\r\n                className=\"form-control description\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n                placeholder=\"Mô tả\" autoComplete=\"off\" />\r\n                {errors.description && errors.description?.type === 'required' ? (\r\n                  <span style={{ color: ' #fb0606' }}>Vui lòng nhập Mô tả</span>\r\n                ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-inline\">\r\n              <input type=\"checkbox\" ref={register()} name=\"is_active\" defaultChecked={true} /> \r\n              Hoạt động\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Đóng</button>\r\n            <button type=\"submit\" className=\"btn btn-primary ml-2\">Lưu</button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { SpaceContext } from '.';\nexport default function Item(_ref) {\n  var className = _ref.className,\n      direction = _ref.direction,\n      index = _ref.index,\n      marginDirection = _ref.marginDirection,\n      children = _ref.children,\n      split = _ref.split,\n      wrap = _ref.wrap;\n\n  var _React$useContext = React.useContext(SpaceContext),\n      horizontalSize = _React$useContext.horizontalSize,\n      verticalSize = _React$useContext.verticalSize,\n      latestIndex = _React$useContext.latestIndex,\n      supportFlexGap = _React$useContext.supportFlexGap;\n\n  var style = {};\n\n  if (!supportFlexGap) {\n    if (direction === 'vertical') {\n      if (index < latestIndex) {\n        style = {\n          marginBottom: horizontalSize / (split ? 2 : 1)\n        };\n      }\n    } else {\n      style = _extends(_extends({}, index < latestIndex && _defineProperty({}, marginDirection, horizontalSize / (split ? 2 : 1))), wrap && {\n        paddingBottom: verticalSize\n      });\n    }\n  }\n\n  if (children === null || children === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, children), index < latestIndex && split && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(className, \"-split\"),\n    style: style\n  }, split));\n}","import canUseDom from \"rc-util/es/Dom/canUseDom\";\nexport var canUseDocElement = function canUseDocElement() {\n  return canUseDom() && window.document.documentElement;\n};\nexport var isStyleSupport = function isStyleSupport(styleName) {\n  if (canUseDocElement()) {\n    var styleNameList = Array.isArray(styleName) ? styleName : [styleName];\n    var documentElement = window.document.documentElement;\n    return styleNameList.some(function (name) {\n      return name in documentElement.style;\n    });\n  }\n\n  return false;\n};\nvar flexGapSupported;\nexport var detectFlexGapSupported = function detectFlexGapSupported() {\n  if (!canUseDocElement()) {\n    return false;\n  }\n\n  if (flexGapSupported !== undefined) {\n    return flexGapSupported;\n  } // create flex container with row-gap set\n\n\n  var flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px'; // create two, elements inside it\n\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div')); // append to the DOM (needed to obtain scrollHeight)\n\n  document.body.appendChild(flex);\n  flexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n\n  document.body.removeChild(flex);\n  return flexGapSupported;\n};","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { detectFlexGapSupported } from '../styleChecker';\nexport default (function () {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      flexible = _React$useState2[0],\n      setFlexible = _React$useState2[1];\n\n  React.useEffect(function () {\n    setFlexible(detectFlexGapSupported());\n  }, []);\n  return flexible;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { ConfigContext } from '../config-provider';\nimport Item from './Item';\nimport useFlexGapSupport from '../_util/hooks/useFlexGapSupport';\nexport var SpaceContext = /*#__PURE__*/React.createContext({\n  latestIndex: 0,\n  horizontalSize: 0,\n  verticalSize: 0,\n  supportFlexGap: false\n});\nvar spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\n\nfunction getNumberSize(size) {\n  return typeof size === 'string' ? spaceSize[size] : size || 0;\n}\n\nvar Space = function Space(props) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      space = _React$useContext.space,\n      directionConfig = _React$useContext.direction;\n\n  var _props$size = props.size,\n      size = _props$size === void 0 ? (space === null || space === void 0 ? void 0 : space.size) || 'small' : _props$size,\n      align = props.align,\n      className = props.className,\n      children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'horizontal' : _props$direction,\n      customizePrefixCls = props.prefixCls,\n      split = props.split,\n      style = props.style,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? false : _props$wrap,\n      otherProps = __rest(props, [\"size\", \"align\", \"className\", \"children\", \"direction\", \"prefixCls\", \"split\", \"style\", \"wrap\"]);\n\n  var supportFlexGap = useFlexGapSupport();\n\n  var _React$useMemo = React.useMemo(function () {\n    return (Array.isArray(size) ? size : [size, size]).map(function (item) {\n      return getNumberSize(item);\n    });\n  }, [size]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      horizontalSize = _React$useMemo2[0],\n      verticalSize = _React$useMemo2[1];\n\n  var childNodes = toArray(children, {\n    keepEmpty: true\n  });\n  var mergedAlign = align === undefined && direction === 'horizontal' ? 'center' : align;\n  var prefixCls = getPrefixCls('space', customizePrefixCls);\n  var cn = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(direction), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), directionConfig === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-align-\").concat(mergedAlign), mergedAlign), _classNames), className);\n  var itemClassName = \"\".concat(prefixCls, \"-item\");\n  var marginDirection = directionConfig === 'rtl' ? 'marginLeft' : 'marginRight'; // Calculate latest one\n\n  var latestIndex = 0;\n  var nodes = childNodes.map(function (child, i) {\n    if (child !== null && child !== undefined) {\n      latestIndex = i;\n    }\n    /* eslint-disable react/no-array-index-key */\n\n\n    return /*#__PURE__*/React.createElement(Item, {\n      className: itemClassName,\n      key: \"\".concat(itemClassName, \"-\").concat(i),\n      direction: direction,\n      index: i,\n      marginDirection: marginDirection,\n      split: split,\n      wrap: wrap\n    }, child);\n    /* eslint-enable */\n  });\n  var spaceContext = React.useMemo(function () {\n    return {\n      horizontalSize: horizontalSize,\n      verticalSize: verticalSize,\n      latestIndex: latestIndex,\n      supportFlexGap: supportFlexGap\n    };\n  }, [horizontalSize, verticalSize, latestIndex, supportFlexGap]); // =========================== Render ===========================\n\n  if (childNodes.length === 0) {\n    return null;\n  }\n\n  var gapStyle = {};\n\n  if (wrap) {\n    gapStyle.flexWrap = 'wrap'; // Patch for gap not support\n\n    if (!supportFlexGap) {\n      gapStyle.marginBottom = -verticalSize;\n    }\n  }\n\n  if (supportFlexGap) {\n    gapStyle.columnGap = horizontalSize;\n    gapStyle.rowGap = verticalSize;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cn,\n    style: _extends(_extends({}, gapStyle), style)\n  }, otherProps), /*#__PURE__*/React.createElement(SpaceContext.Provider, {\n    value: spaceContext\n  }, nodes));\n};\n\nexport default Space;","// This icon file is generated automatically.\nvar InfoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M448 224a64 64 0 10128 0 64 64 0 10-128 0zm96 168h-64c-4.4 0-8 3.6-8 8v464c0 4.4 3.6 8 8 8h64c4.4 0 8-3.6 8-8V400c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"info\", \"theme\": \"outlined\" };\nexport default InfoOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport InfoOutlinedSvg from \"@ant-design/icons-svg/es/asn/InfoOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar InfoOutlined = function InfoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: InfoOutlinedSvg\n  }));\n};\n\nInfoOutlined.displayName = 'InfoOutlined';\nexport default /*#__PURE__*/React.forwardRef(InfoOutlined);","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState, useMemo, useReducer } from 'react';\r\nimport '../role.css';\r\nimport * as _ from 'lodash';\r\nimport * as AuthSlice from 'store/auth/shared/slice';\r\nimport * as AuthSelector from 'store/auth/shared/selectors';\r\nimport { AuthSaga } from 'store/auth/shared/saga';\r\nimport {\r\n  useInjectReducer,\r\n  useInjectSaga,\r\n} from 'store/core/@reduxjs/redux-injectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ModalUserInRole } from '../components/ModalUserInRole';\r\nimport { ModalAddRole } from '../components/ModalAddRole';\r\nimport { ConfirmDeleteRole } from '../components/ConfirmDeleteRole';\r\nimport { useForm } from 'react-hook-form';\r\nimport { RootStore } from 'store/configureStore';\r\nimport { Unsubscribe } from 'redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport { NotifyService } from 'services/notify.service';\r\nimport { RESPONSE_MESSAGE } from 'store/auth/constants/auth.constant';\r\nimport { rowsPerArray } from 'store/common/constants/common.constant';\r\nimport AppLoading from 'app/components/Loading';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Table, Space, Button } from 'antd';\r\nimport {\r\n  CheckSquareTwoTone,\r\n  DeleteOutlined,\r\n  InfoOutlined,\r\n} from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface ModalState {\r\n  isAdd: boolean;\r\n  isDelete: boolean;\r\n  idDelete: string;\r\n  isUser: boolean;\r\n  isPermission: boolean;\r\n}\r\n\r\nenum ModalType {\r\n  ADD = 'ADD',\r\n  DELETE = 'DELETE',\r\n  USER = 'USER',\r\n  PERMISSION = 'PERMISSION',\r\n}\r\n\r\ntype ModalAction = {\r\n  type: ModalType;\r\n  payload: any;\r\n};\r\n\r\nconst initModalState: ModalState = {\r\n  isAdd: false,\r\n  isDelete: false,\r\n  idDelete: '',\r\n  isUser: false,\r\n  isPermission: false,\r\n};\r\n\r\nconst reduceModalState = (\r\n  state: ModalState = initModalState,\r\n  action: ModalAction,\r\n): ModalState => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ModalType.ADD:\r\n      return {\r\n        ...state,\r\n        isAdd: payload,\r\n      };\r\n    case ModalType.PERMISSION:\r\n      return {\r\n        ...state,\r\n        isPermission: payload,\r\n        isUser: false,\r\n      };\r\n    case ModalType.USER:\r\n      return {\r\n        ...state,\r\n        isUser: payload,\r\n      };\r\n    case ModalType.DELETE:\r\n      const { id, isDelete } = payload;\r\n      return {\r\n        ...state,\r\n        idDelete: id,\r\n        isDelete: isDelete,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const colsRole: any[] = [\r\n  { id: 'no', label: '#', minWidth: 50 },\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'name', label: 'Tên', minWidth: 120 },\r\n  { id: 'description', label: 'Mô tả', minWidth: 120 },\r\n  { id: 'is_active', label: 'Trạng thái', minWidth: 120 },\r\n  { id: 'actions', label: 'Chức năng', minWidth: 170 },\r\n];\r\n\r\nconst ADD_USER_IN_ROLE_SUCCESS = 'Thêm vào người dùng vào role thành công';\r\nconst ADD_USER_IN_ROLE_FAIL = 'Thêm vào người dùng vào role thất bại';\r\nconst DELETE_USER_IN_ROLE_SUCCESS = 'Xoá người dùng khỏi role thành công';\r\nconst DELETE_USER_IN_ROLE_FAIL = 'Xoá người dùng khỏi role thất bại';\r\nconst UPDATE_PERMISSION_SUCCESS = 'Thay đổi quyền truy cập Thành Công';\r\nconst UPDATE_PERMISSION_FAIL = 'Thay đổi quyền truy cập thất bại';\r\n\r\nconst defaultPagi = {\r\n  pageNumber: 1,\r\n  pageSize: 10,\r\n};\r\n\r\nexport function Role() {\r\n  useInjectReducer({ key: AuthSlice.sliceKey, reducer: AuthSlice.reducer });\r\n  useInjectSaga({ key: AuthSlice.sliceKey, saga: AuthSaga });\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const notifyController = new NotifyService(enqueueSnackbar);\r\n  const loading: any = useSelector<any>(AuthSelector.selectLoading);\r\n  const roles: any = useSelector<any>(AuthSelector.selectRoles);\r\n  const [modalState, dispatchModal] = useReducer(\r\n    reduceModalState,\r\n    initModalState,\r\n  );\r\n  const { handleSubmit, register, reset, getValues } = useForm({});\r\n  const [pagi, setPagi] = useState(defaultPagi);\r\n\r\n  useEffect(() => {\r\n    const storeSub$: Unsubscribe = RootStore.subscribe(() => {\r\n      const { type, payload } = RootStore.getState().lastAction;\r\n      switch (type) {\r\n        case AuthSlice.actions.getRoleByIdSuccess.type:\r\n          if (payload.type === ModalType.USER) {\r\n            dispatchModal({\r\n              type: ModalType.USER,\r\n              payload: true,\r\n            });\r\n          }\r\n          break;\r\n        case AuthSlice.actions.addRoleSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(RESPONSE_MESSAGE.ADD_ROLE_SUCCESS)\r\n            .setSuccessNotify();\r\n          dispatch(AuthSlice.actions.getListRole(defaultPagi));\r\n          dispatchModal({\r\n            type: ModalType.ADD,\r\n            payload: false,\r\n          });\r\n          break;\r\n        case AuthSlice.actions.updatePermissionInRoleSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(UPDATE_PERMISSION_SUCCESS)\r\n            .setSuccessNotify();\r\n          break;\r\n        case AuthSlice.actions.updatePermissionInRoleFail.type:\r\n          notifyController\r\n            .setNotifyMessage(UPDATE_PERMISSION_FAIL)\r\n            .setFailNotify();\r\n          break;\r\n        case AuthSlice.actions.deleteRoleSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(RESPONSE_MESSAGE.DELETE_ROLE_SUCCESS)\r\n            .setSuccessNotify();\r\n          dispatch(AuthSlice.actions.getListRole(defaultPagi));\r\n          break;\r\n        case AuthSlice.actions.addRoleFail.type:\r\n        case AuthSlice.actions.deleteRoleFail.type:\r\n          notifyController.setNotifyMessage(payload).setFailNotify();\r\n          break;\r\n        case AuthSlice.actions.deleteUserInRoleSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(DELETE_USER_IN_ROLE_SUCCESS)\r\n            .setSuccessNotify();\r\n          break;\r\n        case AuthSlice.actions.addUserInRoleSuccess.type:\r\n          notifyController\r\n            .setNotifyMessage(ADD_USER_IN_ROLE_SUCCESS)\r\n            .setSuccessNotify();\r\n          break;\r\n        case AuthSlice.actions.addUserInRoleFail.type:\r\n          notifyController\r\n            .setNotifyMessage(payload ? payload : ADD_USER_IN_ROLE_FAIL)\r\n            .setFailNotify();\r\n          break;\r\n        case AuthSlice.actions.deleteUserInRoleFail.type:\r\n          notifyController\r\n            .setNotifyMessage(payload ? payload : DELETE_USER_IN_ROLE_FAIL)\r\n            .setFailNotify();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return () => {\r\n      storeSub$();\r\n    };\r\n  }, []);\r\n\r\n  const resetPatient = () => {\r\n    setPagi(defaultPagi);\r\n    dispatch(AuthSlice.actions.getListRole(defaultPagi));\r\n    reset();\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, pageNumber: number) => {\r\n    let newPagi = {\r\n      ...pagi,\r\n      pageNumber: pageNumber + 1,\r\n      search: getValues('search'),\r\n    };\r\n    setPagi(newPagi);\r\n    dispatch(AuthSlice.actions.getListRole(newPagi));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    let newPagi = {\r\n      pageSize: +event.target.value,\r\n      pageNumber: 1,\r\n      search: getValues('search'),\r\n    };\r\n    setPagi(newPagi);\r\n    dispatch(AuthSlice.actions.getListRole(newPagi));\r\n  };\r\n\r\n  const renderTableControl = () => {\r\n    return (\r\n      <form\r\n        onSubmit={handleSubmit(({ search }) => {\r\n          const newPagi = {\r\n            pageNumber: 1,\r\n            pageSize: pagi.pageSize,\r\n          };\r\n          dispatch(\r\n            AuthSlice.actions.getListRole({\r\n              search,\r\n              ...newPagi,\r\n            }),\r\n          );\r\n          setPagi(newPagi);\r\n        })}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 form-group\">\r\n            <label>Tìm quyền truy cập</label>\r\n            <input\r\n              className=\"form-control mr-4\"\r\n              ref={register()}\r\n              placeholder=\"Tìm quyền truy cập\"\r\n              type=\"text\"\r\n              name=\"search\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <div className=\"btn-group\">\r\n              <button\r\n                className=\"btn btn-primary mr-3 btn__search\"\r\n                type=\"submit\"\r\n              >\r\n                Tìm kiếm <i className=\"fa fa-search\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 form-group export__examination text-right\">\r\n            <div className=\"btn-group ml-3\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn__export\"\r\n                onClick={resetPatient}\r\n              >\r\n                Reset <i className=\"fa fa-refresh\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"btn-group ml-3\">\r\n              <button\r\n                className=\"btn btn-success mr-3 edit__add\"\r\n                onClick={() =>\r\n                  dispatchModal({\r\n                    type: ModalType.ADD,\r\n                    payload: true,\r\n                  })\r\n                }\r\n                type=\"button\"\r\n              >\r\n                Thêm mới <i className=\"fa fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const renderData = useMemo(() => {\r\n    const { data = [] } = roles;\r\n    return {\r\n      ...roles,\r\n      data,\r\n    };\r\n  }, [roles]);\r\n\r\n  // antd desgin\r\n  const columnsAntD: any = [\r\n    {\r\n      title: 'Mã',\r\n      dataIndex: 'code',\r\n      key: 'code',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: 'Tên',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Mô tả',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n      width: '40%',\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'is_active',\r\n      key: 'is_active',\r\n      width: '10%',\r\n      align: 'center',\r\n      render: is_active => {\r\n        return is_active ? (\r\n          <CheckSquareTwoTone twoToneColor=\"#52c41a\" />\r\n        ) : (\r\n          <CheckSquareTwoTone twoToneColor=\"#3a3f38\" />\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Chức năng',\r\n      dataIndex: 'chucnang',\r\n      key: 'chucnang',\r\n      width: '20%',\r\n      align: 'center',\r\n      render: (row, idx) => {\r\n        const id = idx.id;\r\n        return (\r\n          <Space size=\"large\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"ant-btn btn-success btn-xs\"\r\n              onClick={() => {\r\n                dispatchModal({\r\n                  type: ModalType.PERMISSION,\r\n                  payload: true,\r\n                });\r\n                dispatch(\r\n                  AuthSlice.actions.getRoleById({\r\n                    id,\r\n                    type: ModalType.PERMISSION,\r\n                  }),\r\n                );\r\n              }}\r\n            >\r\n              <Link to={{ pathname: '/role-detail', search: `?id=${id}` }}>\r\n                <InfoOutlined />\r\n              </Link>\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"ant-btn btn-danger btn-xs mx-2\"\r\n              icon={<DeleteOutlined />}\r\n              title=\"Xoá quyền truy cập\"\r\n              onClick={() =>\r\n                dispatchModal({\r\n                  type: ModalType.DELETE,\r\n                  payload: { isDelete: true, id },\r\n                })\r\n              }\r\n            ></Button>\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const renderPagination = () => {\r\n    if (!_.isEmpty(renderData) && renderData.data.length) {\r\n      return (\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerArray}\r\n          component=\"div\"\r\n          labelRowsPerPage=\"Hiển Thị\"\r\n          count={renderData.total_records}\r\n          page={renderData?.page_number - 1}\r\n          rowsPerPage={renderData?.page_size}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {loading ? <AppLoading loading={true} /> : null}\r\n      {modalState.isAdd && (\r\n        <ModalAddRole\r\n          open={true}\r\n          onClose={() =>\r\n            dispatchModal({\r\n              type: ModalType.ADD,\r\n              payload: false,\r\n            })\r\n          }\r\n        />\r\n      )}\r\n      {modalState.isUser && (\r\n        <ModalUserInRole\r\n          open={true}\r\n          onClose={() =>\r\n            dispatchModal({\r\n              type: ModalType.USER,\r\n              payload: false,\r\n            })\r\n          }\r\n        />\r\n      )}\r\n      <ConfirmDeleteRole\r\n        title={'Bạn có chắc chắn muốn xoá quyền truy cập Này?'}\r\n        id={modalState.idDelete}\r\n        open={modalState.isDelete}\r\n        onClose={() =>\r\n          dispatchModal({\r\n            type: ModalType.DELETE,\r\n            payload: { isDelete: false, id: '' },\r\n          })\r\n        }\r\n        confirmMethod={id => dispatch(AuthSlice.actions.deleteRole(id))}\r\n      />\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            {renderTableControl()}\r\n            <div className=\"table-scrollable\">\r\n              <Table\r\n                columns={columnsAntD}\r\n                dataSource={renderData.data}\r\n                pagination={false}\r\n                rowKey={row => row.id}\r\n                scroll={{ y: 780 }}\r\n              />\r\n              {renderPagination()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as _ from 'lodash';\r\n\r\nexport function Schedule() {\r\n  const dispatch = useDispatch();\r\n  const useEffectOnMount = (effect: React.EffectCallback) => {\r\n    useEffect(effect, []);\r\n  };\r\n  useEffectOnMount(() => {});\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-topline-red\">\r\n          <div className=\"card-head\"></div>\r\n          <div className=\"card-body \">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 col-sm-6 col-xs-6\">\r\n                <div className=\"btn-group\">\r\n                  <a id=\"addRow\" className=\"btn btn-info\">\r\n                    Thêm mới <i className=\"fa fa-plus\"></i>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"table-scrollable\">\r\n              <table\r\n                className=\"table table-hover table-checkable order-column full-width\"\r\n                id=\"MainTable\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th\r\n                    //  width=\"5%\"\r\n                    >\r\n                      {' '}\r\n                      #{' '}\r\n                    </th>\r\n\r\n                    <th>Bác sĩ</th>\r\n                    <th>Từ</th>\r\n                    <th>Đến</th>\r\n                    <th>Phòng</th>\r\n                    <th>Chức năng</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody id=\"data\">\r\n                  <tr>\r\n                    <td className=\" text-muted\">1</td>\r\n                    <td className=\"\" data-order=\"NV0001\">\r\n                      NV0001\r\n                    </td>\r\n                    <td className=\"\" data-order=\"2020-02-22T08:00:00\">\r\n                      2020-02-22T08:00:00\r\n                    </td>\r\n                    <td className=\"\" data-order=\"2020-02-22T09:00:00\">\r\n                      2020-02-22T09:00:00\r\n                    </td>\r\n                    <td className=\"\" data-order=\"N/A\">\r\n                      N/A\r\n                    </td>\r\n                    <td className=\"\">\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs btn--icon-text certificate_edit\"\r\n                        id=\"PopoverCustomT-1\"\r\n                        title=\"Sửa\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#modelId\"\r\n                        type=\"button\"\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-danger btn-xs btn--icon-text certificate_delete\"\r\n                        id=\"PopoverCustomT-1\"\r\n                        title=\"Xóa\"\r\n                        data-target=\"#modal-delete\"\r\n                        // onClick=\"openDeleteConfirmationModal('b4728fdf-f2e3-40dd-95ae-ad58e7deacc5')\"\r\n                        data-toggle=\"modal\"\r\n                        type=\"button\"\r\n                      >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\" text-muted\">2</td>\r\n                    <td className=\"\" data-order=\"NV0001\">\r\n                      NV0001\r\n                    </td>\r\n                    <td className=\"\" data-order=\"2020-02-22T08:00:00\">\r\n                      2020-02-22T08:00:00\r\n                    </td>\r\n                    <td className=\"\" data-order=\"2020-02-22T09:00:00\">\r\n                      2020-02-22T09:00:00\r\n                    </td>\r\n                    <td className=\"\" data-order=\"N/A\">\r\n                      N/A\r\n                    </td>\r\n                    <td className=\"\">\r\n                      <button\r\n                        className=\"btn btn-primary btn-xs btn--icon-text certificate_edit\"\r\n                        id=\"PopoverCustomT-1\"\r\n                        title=\"Sửa\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#modelId\"\r\n                        type=\"button\"\r\n                      >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-danger btn-xs btn--icon-text certificate_delete\"\r\n                        id=\"PopoverCustomT-1\"\r\n                        title=\"Xóa\"\r\n                        data-target=\"#modal-delete\"\r\n                        // onClick=\"openDeleteConfirmationModal('5f224cf4-4547-4fd1-a73e-21ae5cae49a6')\"\r\n                        data-toggle=\"modal\"\r\n                        type=\"button\"\r\n                      >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <ModalSchedule /> */}\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-globals */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport * as _ from 'lodash';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n  th: {\r\n    fontWeight: 600,\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nexport default function TableHeaderSor(props: any) {\r\n  const thClasses = useStyles();\r\n  const { classes, order, orderBy, onRequestSort, columns } = props;\r\n  const createSortHandler = property => {\r\n    return event => {\r\n      onRequestSort(event, property);\r\n    };\r\n  };\r\n  return (\r\n    <TableRow>\r\n      {columns.map(col => {\r\n        return (\r\n          <TableCell\r\n            className={thClasses.th}\r\n            key={col.id}\r\n            sortDirection={orderBy === col.id ? order : false}\r\n            style={{\r\n              minWidth: col.minWidth,\r\n              backgroundColor: '#1a8ae2',\r\n              color: '#fff',\r\n              padding: '16px',\r\n            }}\r\n            align={col.align ? col.align : 'inherit'}\r\n          >\r\n            {isNaN(col.id) ? (\r\n              <TableSortLabel\r\n                active={orderBy === col.id}\r\n                direction={orderBy === col.id ? order : 'asc'}\r\n                onClick={createSortHandler(col.id)}\r\n              >\r\n                {col.label}\r\n                {orderBy === col.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc'\r\n                      ? 'sorted descending'\r\n                      : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              <>{col.headerName}</>\r\n            )}\r\n          </TableCell>\r\n        );\r\n      })}\r\n    </TableRow>\r\n  );\r\n}\r\n","export enum SettingManageType {\r\n  Title = 'CD',\r\n  Position = 'CV',\r\n  Group = 'NDV',\r\n  Service = 'DV',\r\n  DepartmentType = 'LPB',\r\n  Department = 'PB',\r\n  Medicine = 'MD',\r\n  Pharmacy = 'PM',\r\n  Faculty = 'KP',\r\n  Specialist = 'CK',\r\n}\r\n\r\nexport const DEFAULT_ID = '00000000-0000-0000-0000-000000000000';\r\n\r\nexport enum SettingManageKey {\r\n  TITLE = 'TITLE',\r\n  POSITION = 'POSITION',\r\n  GROUP_SERVICE = 'GROUP_SERVICE',\r\n  SERVICE = 'SERVICE',\r\n  DEPARTMENT_TYPE = 'DEPARTMENT_TYPE',\r\n  DEPARTMENT = 'DEPARTMENT',\r\n  FACULTY = 'FACULTY',\r\n}\r\n\r\nexport const SettingApiRoutes = {\r\n  TABLE: {\r\n    GET_ALL_TABLE: '/api/Table/all',\r\n    CREATE_UPDATE_TABLE: '/api/Table',\r\n  },\r\n  MANAGE_TYPE: {\r\n    GET_ALL_MANAGE_TYPE: '/api/ListValue/get-all-list-values',\r\n    GET_ALL_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/get-all-list-values',\r\n    CHECK_UNIQUE_MANAGE_TYPE: '/api/ListValue/check-code-unique',\r\n    CHECK_UNIQUE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/check-code-unique',\r\n    GET_MANAGE_TYPE_BY_CODE: '/api/ListValueType/get-list-value-type',\r\n    GET_ACTIVE_TYPE: '/api/ListValue/get-list-values-activated',\r\n    CHANGE_ACTIVE_MANAGE_TYPE: '/api/ListValue/change-active',\r\n    CHANGE_ACTIVE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/change-active',\r\n    DELETE_MANAGE_TYPE: '/api/ListValue/delete/',\r\n    DELETE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/delete/',\r\n    CREATE_MANAGE_TYPE: '/api/ListValue/add',\r\n    CREATE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/add',\r\n    UPDATE_MANAGE_TYPE: '/api/ListValue/update',\r\n    UPDATE_EXTEND_MANAGE_TYPE: '/api/ListValueExtend/update',\r\n  },\r\n};\r\n\r\nexport const RESPONSE_CONSTANT = {\r\n  TABLE: {\r\n    CREATE_TABLE_SUCCESS: 'CREATE_TABLE_SUCCESS',\r\n    CREATE_TABLE_FAIL: 'CREATE_TABLE_FAIL',\r\n    UPDATE_TABLE_SUCCESS: 'UPDATE_TABLE_SUCCESS',\r\n    UPDATE_TABLE_FAIL: 'UPDATE_TABLE_FAIL',\r\n    DELETE_TABLE_SUCCESS: 'DELETE_TABLE_SUCCESS',\r\n    DELETE_TABLE_FAIL: 'DELETE_TABLE_FAIL',\r\n  },\r\n  TITLE: {\r\n    CHANGE_STATUS_TITLE_SUCCESS: 'CHANGE_STATUS_TITLE_SUCCESS',\r\n    CHANGE_STATUS_TITLE_FAIL: 'CHANGE_STATUS_TITLE_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_TITLE_SUCCESS: 'DELETE_TITLE_SUCCESS',\r\n    DELETE_TITLE_FAIL: 'DELETE_TITLE_FAIL',\r\n    CREATE_TITLE_SUCCESS: 'CREATE_TITLE_SUCCESS',\r\n    CREATE_TITLE_FAIL: 'CREATE_TITLE_FAIL',\r\n    UPDATE_TITLE_SUCCESS: 'UPDATE_TITLE_SUCCESS',\r\n    UPDATE_TITLE_FAIL: 'UPDATE_TITLE_FAIL',\r\n  },\r\n  POSITION: {\r\n    CHANGE_STATUS_POSITION_SUCCESS: 'CHANGE_STATUS_POSITION_SUCCESS',\r\n    CHANGE_STATUS_POSITION_FAIL: 'CHANGE_STATUS_POSITION_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_POSITION_SUCCESS: 'DELETE_POSITION_SUCCESS',\r\n    DELETE_POSITION_FAIL: 'DELETE_POSITION_FAIL',\r\n    CREATE_POSITION_SUCCESS: 'CREATE_POSITION_SUCCESS',\r\n    CREATE_POSITION_FAIL: 'CREATE_POSITION_FAIL',\r\n    UPDATE_POSITION_SUCCESS: 'UPDATE_POSITION_SUCCESS',\r\n    UPDATE_POSITION_FAIL: 'UPDATE_POSITION_FAIL',\r\n  },\r\n  GROUP_SERVICE: {\r\n    CHANGE_STATUS_GROUP_SERVICE_SUCCESS: 'CHANGE_STATUS_GROUP_SERVICE_SUCCESS',\r\n    CHANGE_STATUS_GROUP_SERVICE_FAIL: 'CHANGE_STATUS_GROUP_SERVICE_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_GROUP_SERVICE_SUCCESS: 'DELETE_GROUP_SERVICE_SUCCESS',\r\n    DELETE_GROUP_SERVICE_FAIL: 'DELETE_GROUP_SERVICE_FAIL',\r\n    CREATE_GROUP_SERVICE_SUCCESS: 'CREATE_GROUP_SERVICE_SUCCESS',\r\n    CREATE_GROUP_SERVICE_FAIL: 'CREATE_GROUP_SERVICE_FAIL',\r\n    UPDATE_GROUP_SERVICE_SUCCESS: 'UPDATE_GROUP_SERVICE_SUCCESS',\r\n    UPDATE_GROUP_SERVICE_FAIL: 'UPDATE_GROUP_SERVICE_FAIL',\r\n  },\r\n  SERVICE: {\r\n    CHANGE_STATUS_SERVICE_SUCCESS: 'CHANGE_STATUS_SERVICE_SUCCESS',\r\n    CHANGE_STATUS_SERVICE_FAIL: 'CHANGE_STATUS_SERVICE_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_SERVICE_SUCCESS: 'DELETE_SERVICE_SUCCESS',\r\n    DELETE_SERVICE_FAIL: 'DELETE_SERVICE_FAIL',\r\n    CREATE_SERVICE_SUCCESS: 'CREATE_SERVICE_SUCCESS',\r\n    CREATE_SERVICE_FAIL: 'CREATE_SERVICE_FAIL',\r\n    UPDATE_SERVICE_SUCCESS: 'UPDATE_SERVICE_SUCCESS',\r\n    UPDATE_SERVICE_FAIL: 'UPDATE_SERVICE_FAIL',\r\n  },\r\n  DEPARTMENT_TYPE: {\r\n    CHANGE_STATUS_DEPARTMENT_TYPE_SUCCESS:\r\n      'CHANGE_STATUS_DEPARTMENT_TYPE_SUCCESS',\r\n    CHANGE_STATUS_DEPARTMENT_TYPE_FAIL: 'CHANGE_STATUS_DEPARTMENT_TYPE_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_DEPARTMENT_TYPE_SUCCESS: 'DELETE_DEPARTMENT_TYPE_SUCCESS',\r\n    DELETE_DEPARTMENT_TYPE_FAIL: 'DELETE_DEPARTMENT_TYPE_FAIL',\r\n    CREATE_DEPARTMENT_TYPE_SUCCESS: 'CREATE_DEPARTMENT_TYPE_SUCCESS',\r\n    CREATE_DEPARTMENT_TYPE_FAIL: 'CREATE_DEPARTMENT_TYPE_FAIL',\r\n    UPDATE_DEPARTMENT_TYPE_SUCCESS: 'UPDATE_DEPARTMENT_TYPE_SUCCESS',\r\n    UPDATE_DEPARTMENT_TYPE_FAIL: 'UPDATE_DEPARTMENT_TYPE_FAIL',\r\n  },\r\n  DEPARTMENT: {\r\n    CHANGE_STATUS_DEPARTMENT_SUCCESS: 'CHANGE_STATUS_DEPARTMENT_SUCCESS',\r\n    CHANGE_STATUS_DEPARTMENT_FAIL: 'CHANGE_STATUS_DEPARTMENT_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_DEPARTMENT_SUCCESS: 'DELETE_DEPARTMENT_SUCCESS',\r\n    DELETE_DEPARTMENT_FAIL: 'DELETE_DEPARTMENT_FAIL',\r\n    CREATE_DEPARTMENT_SUCCESS: 'CREATE_DEPARTMENT_SUCCESS',\r\n    CREATE_DEPARTMENT_FAIL: 'CREATE_DEPARTMENT_FAIL',\r\n    UPDATE_DEPARTMENT_SUCCESS: 'UPDATE_DEPARTMENT_SUCCESS',\r\n    UPDATE_DEPARTMENT_FAIL: 'UPDATE_DEPARTMENT_TYPE_FAIL',\r\n  },\r\n  FACULTY: {\r\n    CHANGE_STATUS_FACULTY_SUCCESS: 'CHANGE_STATUS_FACULTY_SUCCESS',\r\n    CHANGE_STATUS_FACULTY_FAIL: 'CHANGE_STATUS_FACULTY_FAIL',\r\n    CHECK_CODE_SUCCESS: 'CHECK_CODE_SUCCESS',\r\n    CHECK_CODE_FAIL: 'CHECK_CODE_FAIL',\r\n    DELETE_FACULTY_SUCCESS: 'DELETE_FACULTY_SUCCESS',\r\n    DELETE_FACULTY_FAIL: 'DELETE_FACULTY_FAIL',\r\n    CREATE_FACULTY_SUCCESS: 'CREATE_FACULTY_SUCCESS',\r\n    CREATE_FACULTY_FAIL: 'CREATE_FACULTY_FAIL',\r\n    UPDATE_FACULTY_SUCCESS: 'UPDATE_FACULTY_SUCCESS',\r\n    UPDATE_FACULTY_FAIL: 'UPDATE_FACULTY_TYPE_FAIL',\r\n  },\r\n};\r\n\r\nexport const RESPONSE_MESSAGE = {\r\n  TABLE: {\r\n    CREATE_TABLE_SUCCESS: 'Tạo Mới Thông Tin Bàn Tiếp Nhận Thành Công',\r\n    CREATE_TABLE_FAIL: 'Tạo Mới Thông Tin Bàn Tiếp Nhận Thất Bại',\r\n    UPDATE_TABLE_SUCCESS: 'Cập Nhật Thông Tin Bàn Tiếp Nhận Thành Công',\r\n    UPDATE_TABLE_FAIL: 'Cập Nhật Thông Tin Bàn Tiếp Nhận Thất Bại',\r\n    DELETE_TABLE_SUCCESS: 'Xoá Thông Tin Bàn Tiếp Nhận Thành Công',\r\n    DELETE_TABLE_FAIL: 'Xoá Thông Tin Bàn Tiếp Nhận Thất Bại',\r\n  },\r\n  TITLE: {\r\n    CHANGE_STATUS_TITLE_SUCCESS: 'Thay Đổi Trạng Thái Chức Danh Thành Công',\r\n    CHANGE_STATUS_TITLE_FAIL: 'Thay Đổi Trạng Thái Chức Danh Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Chức Danh Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Chức Danh Đã Tồn Tại',\r\n    DELETE_TITLE_SUCCESS: 'Xoá Chức Danh Thành Công',\r\n    DELETE_TITLE_FAIL: 'Xoá Chức Danh Thất Bại',\r\n    CREATE_TITLE_SUCCESS: 'Tạo Mới Chức Danh Thành Công',\r\n    CREATE_TITLE_FAIL: 'Tạo Mới Chức Danh Thất Bại',\r\n    UPDATE_TITLE_SUCCESS: 'Cập Nhật Chức Danh Thành Công',\r\n    UPDATE_TITLE_FAIL: 'Cập Nhật Chức Danh Thất Bại',\r\n  },\r\n  POSITION: {\r\n    CHANGE_STATUS_POSITION_SUCCESS: 'Thay Đổi Trạng Thái Chức Vụ Thành Công',\r\n    CHANGE_STATUS_POSITION_FAIL: 'Thay Đổi Trạng Thái Chức Vụ Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Chức Vụ Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Chức Vụ Đã Tồn Tại',\r\n    DELETE_POSITION_SUCCESS: 'Xoá Chức Vụ Thành Công',\r\n    DELETE_POSITION_FAIL: 'Xoá Chức Vụ Thất Bại',\r\n    CREATE_POSITION_SUCCESS: 'Tạo Mới Chức Vụ Thành Công',\r\n    CREATE_POSITION_FAIL: 'Tạo Mới Chức Vụ Thất Bại',\r\n    UPDATE_POSITION_SUCCESS: 'Cập Nhật Chức Vụ Thành Công',\r\n    UPDATE_POSITION_FAIL: 'Cập Nhật Chức Vụ Thất Bại',\r\n  },\r\n  GROUP_SERVICE: {\r\n    CHANGE_STATUS_GROUP_SERVICE_SUCCESS:\r\n      'Thay Đổi Trạng Thái Nhóm Dịch Vụ Thành Công',\r\n    CHANGE_STATUS_GROUP_SERVICE_FAIL:\r\n      'Thay Đổi Trạng Thái Nhóm Dịch Vụ Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Nhóm Dịch Vụ Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Nhóm Dịch Vụ Đã Tồn Tại',\r\n    DELETE_GROUP_SERVICE_SUCCESS: 'Xoá Nhóm Dịch Vụ Thành Công',\r\n    DELETE_GROUP_SERVICE_FAIL: 'Xoá Nhóm Dịch Vụ Thất Bại',\r\n    CREATE_GROUP_SERVICE_SUCCESS: 'Tạo Mới Nhóm Dịch Vụ Thành Công',\r\n    CREATE_GROUP_SERVICE_FAIL: 'Tạo Mới Nhóm Dịch Vụ Thất Bại',\r\n    UPDATE_GROUP_SERVICE_SUCCESS: 'Cập Nhật Nhóm Dịch Vụ Thành Công',\r\n    UPDATE_GROUP_SERVICE_FAIL: 'Cập Nhật Nhóm Dịch Vụ Thất Bại',\r\n  },\r\n  SERVICE: {\r\n    CHANGE_STATUS_SERVICE_SUCCESS: 'Thay Đổi Trạng Thái Dịch Vụ Thành Công',\r\n    CHANGE_STATUS_SERVICE_FAIL: 'Thay Đổi Trạng Thái Dịch Vụ Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Dịch Vụ Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Dịch Vụ Đã Tồn Tại',\r\n    DELETE_SERVICE_SUCCESS: 'Xoá Dịch Vụ Thành Công',\r\n    DELETE_SERVICE_FAIL: 'Xoá Dịch Vụ Thất Bại',\r\n    CREATE_SERVICE_SUCCESS: 'Tạo Mới Dịch Vụ Thành Công',\r\n    CREATE_SERVICE_FAIL: 'Tạo Mới Dịch Vụ Thất Bại',\r\n    UPDATE_SERVICE_SUCCESS: 'Cập Nhật Dịch Vụ Thành Công',\r\n    UPDATE_SERVICE_FAIL: 'Cập Nhật Dịch Vụ Thất Bại',\r\n  },\r\n  DEPARTMENT_TYPE: {\r\n    CHANGE_STATUS_DEPARTMENT_TYPE_SUCCESS:\r\n      'Thay Đổi Trạng Thái Loại phòng khám Thành Công',\r\n    CHANGE_STATUS_DEPARTMENT_TYPE_FAIL:\r\n      'Thay Đổi Trạng Thái Loại phòng khám Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Loại phòng khám Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Loại phòng khám Đã Tồn Tại',\r\n    DELETE_DEPARTMENT_TYPE_SUCCESS: 'Xoá Loại phòng khám Thành Công',\r\n    DELETE_DEPARTMENT_TYPE_FAIL: 'Xoá Loại phòng khám Thất Bại',\r\n    CREATE_DEPARTMENT_TYPE_SUCCESS: 'Tạo Mới Loại phòng khám Thành Công',\r\n    CREATE_DEPARTMENT_TYPE_FAIL: 'Tạo Mới Loại phòng khám Thất Bại',\r\n    UPDATE_DEPARTMENT_TYPE_SUCCESS: 'Cập Nhật Loại phòng khám Thành Công',\r\n    UPDATE_DEPARTMENT_TYPE_FAIL: 'Cập Nhật Loại phòng khám Thất Bại',\r\n  },\r\n  DEPARTMENT: {\r\n    CHANGE_STATUS_DEPARTMENT_SUCCESS:\r\n      'Thay Đổi Trạng Thái phòng khám Thành Công',\r\n    CHANGE_STATUS_DEPARTMENT_FAIL: 'Thay Đổi Trạng Thái phòng khám Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã phòng khám Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã phòng khám Đã Tồn Tại',\r\n    DELETE_DEPARTMENT_SUCCESS: 'Xoá phòng khám Thành Công',\r\n    DELETE_DEPARTMENT_FAIL: 'Xoá phòng khám Thất Bại',\r\n    CREATE_DEPARTMENT_SUCCESS: 'Tạo Mới phòng khám Thành Công',\r\n    CREATE_DEPARTMENT_FAIL: 'Tạo Mới phòng khám Thất Bại',\r\n    UPDATE_DEPARTMENT_SUCCESS: 'Cập Nhật phòng khám Thành Công',\r\n    UPDATE_DEPARTMENT_FAIL: 'Cập Nhật phòng khám Thất Bại',\r\n  },\r\n  FACULTY: {\r\n    CHANGE_STATUS_FACULTY_SUCCESS: 'Thay Đổi Trạng Thái Khoa Thành Công',\r\n    CHANGE_STATUS_FACULTY_FAIL: 'Thay Đổi Trạng Thái Khoa Thất Bại',\r\n    CHECK_CODE_SUCCESS: 'Mã Khoa Có Thể Sử Dụng',\r\n    CHECK_CODE_FAIL: 'Mã Khoa Đã Tồn Tại',\r\n    DELETE_FACULTY_SUCCESS: 'Xoá Khoa Thành Công',\r\n    DELETE_FACULTY_FAIL: 'Xoá Khoa Thất Bại',\r\n    CREATE_FACULTY_SUCCESS: 'Tạo Mới Khoa Thành Công',\r\n    CREATE_FACULTY_FAIL: 'Tạo Mới Khoa Thất Bại',\r\n    UPDATE_FACULTY_SUCCESS: 'Cập Nhật Khoa Thành Công',\r\n    UPDATE_FACULTY_FAIL: 'Cập Nhật Khoa Thất Bại',\r\n  },\r\n};\r\n\r\nexport const tablePermissionInRole: any[] = [\r\n  { id: 'no', label: '#', minWidth: 50 },\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'description', label: 'Mô tả', minWidth: 120 },\r\n  { id: 'is_active', label: 'Trạng thái', minWidth: 120 },\r\n  { id: 'actions', label: 'Có Thể  Truy Cập', minWidth: 200 },\r\n];\r\n\r\nexport const tableValue: any[] = [\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'description', label: 'Tên', minWidth: 120 },\r\n  { id: 'type', label: 'Loại', minWidth: 120 },\r\n  { id: 'actions', label: 'Chức năng', minWidth: 170 },\r\n];\r\n\r\nexport const tableGroupService: any[] = [\r\n  { id: 'code', label: 'Mã', minWidth: 120 },\r\n  { id: 'description', label: 'Tên', minWidth: 120 },\r\n  { id: 'type', label: 'Loại', minWidth: 120 },\r\n  { id: 'service_type', label: 'Loại hình dịch vụ', minWidth: 200 },\r\n  { id: 'actions', label: 'Chức năng', minWidth: 170 },\r\n];\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport propTypes from 'prop-types';\r\nimport { DialogKey } from 'store/patient/constants/http.constant';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    paddingBottom: 0,\r\n    '& h2': {\r\n      fontSize: '1.3rem !important',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n});\r\n\r\nenum ButtonTitle {\r\n  CANCEL = 'Hủy',\r\n  DELETE = 'Xóa',\r\n  UPDATE = 'Cập Nhật',\r\n  SAVE = 'Xác Nhận',\r\n}\r\n\r\ninterface ModalProps {\r\n  title: string;\r\n  keyConfirm: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  confirmMethod: () => any;\r\n  rejectMethod?: any;\r\n  other?: any;\r\n}\r\n\r\nconst setConfirmTitle = (keyConfirm: string): ButtonTitle => {\r\n  switch (keyConfirm) {\r\n    case DialogKey.DELETE_PATIENT:\r\n      return ButtonTitle.DELETE;\r\n    case DialogKey.CHANGE_STATUS_PATIENT:\r\n      return ButtonTitle.UPDATE;\r\n    default:\r\n      return ButtonTitle.SAVE;\r\n  }\r\n};\r\n\r\nexport const ModalConfirm = ({\r\n  title,\r\n  keyConfirm,\r\n  open,\r\n  onClose,\r\n  confirmMethod,\r\n  other = {},\r\n  rejectMethod,\r\n}: ModalProps) => {\r\n  const classes = useStyles();\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [buttonTitle, setButtonTitle] = useState(setConfirmTitle(keyConfirm));\r\n\r\n  const handleClose = () => {\r\n    setConfirm(false);\r\n    onClose();\r\n  };\r\n  const onConfirm = () => {\r\n    setConfirm(true);\r\n    onClose();\r\n  };\r\n\r\n  const onExited = () => {\r\n    if (confirm) {\r\n      return confirmMethod();\r\n    }\r\n    if (rejectMethod) {\r\n      rejectMethod();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      onExited={onExited}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      disableBackdropClick={true}\r\n    >\r\n      <DialogTitle classes={classes}>{'Thông báo xác nhận'}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {title} {!_.isEmpty(other) ? other.bodyText : ''}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={handleClose}\r\n          color=\"secondary\"\r\n          classes={{ root: 'btn-default btn-danger' }}\r\n        >\r\n          {'Đóng'}\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"primary\"\r\n          classes={{ root: 'btn-default btn-primary t-btn-primary' }}\r\n        >\r\n          {buttonTitle}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nModalConfirm.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n  open: propTypes.bool.isRequired,\r\n  onClose: propTypes.func.isRequired,\r\n  confirmMethod: propTypes.func.isRequired,\r\n  keyConfirm: propTypes.string.isRequired,\r\n};\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { HttpRequest } from 'utils//request';\r\nimport { APP_CONSTANT } from 'store/common/constants/common.constant';\r\nimport {\r\n  SettingApiRoutes,\r\n  SettingManageType,\r\n} from '../constants/setting.constant';\r\nimport * as _ from 'lodash';\r\n\r\ninterface ManageTypeModel {\r\n  id?: string;\r\n  description: string;\r\n  code?: string;\r\n  isActive?: boolean;\r\n  isSystem?: boolean;\r\n  settingTypeId?: string;\r\n  listValueId?: string;\r\n  manageType: SettingManageType;\r\n}\r\n\r\ninterface OnlyManageType {\r\n  id: string;\r\n  manageType: SettingManageType;\r\n  code?: string;\r\n}\r\nexport class SettingHttp {\r\n  request: any;\r\n  constructor(endPoint = APP_CONSTANT.API.ENDPOINT) {\r\n    this.request = new HttpRequest(endPoint).request;\r\n  }\r\n\r\n  private configApiRouteWithManageType = (manageType: SettingManageType) => {\r\n    if (\r\n      manageType === SettingManageType.Service ||\r\n      manageType === SettingManageType.Department\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  protected modifyRequestBody = (manageTypeInfo: ManageTypeModel): any => {\r\n    let requestBody: any = {\r\n      code: manageTypeInfo.code,\r\n      description: manageTypeInfo.description,\r\n      display_order: 0,\r\n      is_active: manageTypeInfo.isActive,\r\n      is_system: manageTypeInfo.isSystem,\r\n      list_value_type_id: manageTypeInfo.settingTypeId,\r\n      list_value_id: manageTypeInfo.listValueId\r\n        ? manageTypeInfo.listValueId\r\n        : undefined,\r\n    };\r\n    let id = _.get(manageTypeInfo, 'id');\r\n    if (id) {\r\n      requestBody = {\r\n        ...requestBody,\r\n        id,\r\n      };\r\n    } else {\r\n      requestBody = {\r\n        ...requestBody,\r\n        type: 'TEK',\r\n      };\r\n    }\r\n    return requestBody;\r\n  };\r\n\r\n  public getAllManageType = (manageType: SettingManageType): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.GET_ALL_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.GET_ALL_MANAGE_TYPE;\r\n    }\r\n    return this.request.get(apiUrl + '/' + manageType);\r\n  };\r\n\r\n  public getManageType = (manageType: SettingManageType): Promise<any> => {\r\n    return this.request.get(\r\n      SettingApiRoutes.MANAGE_TYPE.GET_MANAGE_TYPE_BY_CODE + '/' + manageType,\r\n    );\r\n  };\r\n\r\n  public changeManageTypeActive = ({\r\n    id,\r\n    isActive,\r\n    manageType,\r\n  }): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CHANGE_ACTIVE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CHANGE_ACTIVE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl, {\r\n      id,\r\n      is_active: isActive ? !isActive : true,\r\n    });\r\n  };\r\n\r\n  public createManageType = (manageTypeInfo: ManageTypeModel): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(manageTypeInfo.manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CREATE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CREATE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl, this.modifyRequestBody(manageTypeInfo));\r\n  };\r\n\r\n  public updateManageType = (manageTypeInfo: ManageTypeModel): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(manageTypeInfo.manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.UPDATE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.UPDATE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl, this.modifyRequestBody(manageTypeInfo));\r\n  };\r\n\r\n  public deleteManageType = (deletetType: OnlyManageType): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(deletetType.manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.DELETE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.DELETE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl + '/' + deletetType.id);\r\n  };\r\n\r\n  public checkUniqueCode = (checkType: OnlyManageType): Promise<any> => {\r\n    let apiUrl: string = '';\r\n    if (this.configApiRouteWithManageType(checkType.manageType)) {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CHECK_UNIQUE_EXTEND_MANAGE_TYPE;\r\n    } else {\r\n      apiUrl = SettingApiRoutes.MANAGE_TYPE.CHECK_UNIQUE_MANAGE_TYPE;\r\n    }\r\n    return this.request.post(apiUrl, {\r\n      Code: checkType.code,\r\n      Id: checkType.id,\r\n    });\r\n  };\r\n\r\n  public getSpecialist = (specialistCode: SettingManageType) => {\r\n    return this.request.get(\r\n      SettingApiRoutes.MANAGE_TYPE.GET_ACTIVE_TYPE + '/' + specialistCode,\r\n    );\r\n  };\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    container: {\r\n      minHeight: 700,\r\n    },\r\n  }),\r\n);\r\n\r\nexport enum DialogKey {\r\n  DELETE_PATIENT = 'DELETE_PATIENT',\r\n  CHANGE_STATUS_PATIENT = 'CHANGE_STATUS_PATIENT',\r\n  UPDATE_PATIENT = 'UPDATE_PATIENT',\r\n  CREATE_PATIENT = 'CREATE_PATIENT',\r\n  MVIP = 'MVIP',\r\n}\r\n\r\nexport enum DilogTitle {\r\n  DELETE_PATIENT = 'Bạn có chắc chắn muốn xóa bệnh nhân này?',\r\n  CHANGE_STATUS_PATIENT = 'Bạn có chắc chắn thay đổi trạng thái?',\r\n}\r\n\r\nexport enum PatientStatus {\r\n  ACTIVE = 'Đã Kích Hoạt',\r\n  IN_ACTIVE = 'Chưa Kích Hoạt',\r\n}\r\n\r\nexport enum ButtonToolTip {\r\n  EDIT = 'Chỉnh Sửa',\r\n  DELETE = 'Xóa',\r\n  CHANGE_STATUS = 'Thay Đổi Trạng Thái',\r\n}\r\n\r\nexport enum LocationTypes {\r\n  PROVINCE = 'PROVINCE',\r\n  DIST = 'DIST',\r\n  WARD = 'WARD',\r\n}\r\n"],"sourceRoot":""}